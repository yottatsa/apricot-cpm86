!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Asm	properties	/properties (req, vararg for parameters)/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Abaqus	a,assembly	/Assembly/
!_TAG_KIND_DESCRIPTION!Abaqus	p,part	/Parts/
!_TAG_KIND_DESCRIPTION!Abaqus	s,step	/Steps/
!_TAG_KIND_DESCRIPTION!Asm	d,define	/defines/
!_TAG_KIND_DESCRIPTION!Asm	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Asm	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Asm	t,type	/types (structs and records)/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DosBatch	l,label	/labels/
!_TAG_KIND_DESCRIPTION!DosBatch	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Abaqus	0.0	/current.age/
!_TAG_PARSER_VERSION!Asm	1.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!DosBatch	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/yottatsa/Local/Code/apricot-cpm86/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
A_READ	cio.a86	/^A_READ:		; CODE XREF: bdos:17C3u S_BIOS+1Fu$/;"	l
A_STATIN	cio.a86	/^A_STATIN:		; CODE XREF: bdos:17C3u bdos_statin+1Ej$/;"	l
A_STATOUT	cio.a86	/^A_STATOUT:		; CODE XREF: bdos:17C3u$/;"	l
A_WRITE	cio.a86	/^A_WRITE:		; CODE XREF: bdos:17C3u S_BIOS+1Fu$/;"	l
CNF_DOS_sec	platform.equ	/^CNF_DOS_sec	equ	008Ah$/;"	d
CNF_FONT_sec	platform.equ	/^CNF_FONT_sec	equ	008Ch$/;"	d
CNF_KEYS_sec	platform.equ	/^CNF_KEYS_sec	equ	008Eh$/;"	d
C_DELIMIT	cio.a86	/^C_DELIMIT:		; CODE XREF: bdos:17C3u$/;"	l
C_DETACH	cio.a86	/^C_DETACH:		; CODE XREF: bdos:17C3u$/;"	l
C_MODE	cio.a86	/^C_MODE:		; CODE XREF: bdos:17C3u$/;"	l
C_RAWIO	cio.a86	/^C_RAWIO:		; CODE XREF: bdos:17C3u$/;"	l
C_READ	cio.a86	/^C_READ:		; CODE XREF: bdos:17C3u$/;"	l
C_READSTR	cio.a86	/^C_READSTR:		; CODE XREF: bdos:17C3u$/;"	l
C_STAT	cio.a86	/^C_STAT:		; CODE XREF: bdos:17C3u$/;"	l
C_WRITE	cio.a86	/^C_WRITE:		; CODE XREF: bdos:17C3u$/;"	l
C_WRITEBLK	cio.a86	/^C_WRITEBLK:		; CODE XREF: bdos:17C3u$/;"	l
C_WRITESTR	cio.a86	/^C_WRITESTR:		; CODE XREF: bdos:17C3u$/;"	l
Callback_103	sup.a86	/^Callback_103:		; CODE XREF: bdos:0245u$/;"	l
DEV_WAITFLAG	sup.a86	/^DEV_WAITFLAG:		; CODE XREF: bdos:0245u$/;"	l
DRV_ALLOCVEC	bdos.a86	/^DRV_ALLOCVEC:		; DATA XREF: bdos:258Fo$/;"	l
DRV_ALLRESET	bdos.a86	/^DRV_ALLRESET:		; DATA XREF: bdos:256Eo$/;"	l
DRV_DPB	bdos.a86	/^DRV_DPB:				; DATA XREF: bdos:2598o$/;"	l
DRV_FLUSH	bdos.a86	/^DRV_FLUSH:		; CODE XREF: DRV_ALLRESET+1Fj$/;"	l
DRV_GET	misc.a86	/^DRV_GET:		; CODE XREF: bdos:2317u$/;"	l
DRV_GETLABEL	bdos.a86	/^DRV_GETLABEL:		; DATA XREF: bdos:25C8o$/;"	l
DRV_LOGINVEC	misc.a86	/^DRV_LOGINVEC:		; CODE XREF: bdos:2317u$/;"	l
DRV_RESET	bdos.a86	/^DRV_RESET:		; CODE XREF: DRV_ALLRESET+6p$/;"	l
DRV_ROVEC	misc.a86	/^DRV_ROVEC:		; CODE XREF: bdos:2317u$/;"	l
DRV_SET	bdos.a86	/^DRV_SET:		; DATA XREF: bdos:2571o$/;"	l
DRV_SETLABEL	bdos.a86	/^DRV_SETLABEL:		; DATA XREF: bdos:25C5o$/;"	l
DRV_SETRO	bdos.a86	/^DRV_SETRO:		; DATA XREF: bdos:2592o$/;"	l
DRV_SPACE	bdos.a86	/^DRV_SPACE:		; DATA XREF: bdos:25B9o$/;"	l
DS_LEN	exe2cmd.c	/^#define DS_LEN /;"	d	file:
F_ATTRIB	bdos.a86	/^F_ATTRIB:		; DATA XREF: bdos:2595o$/;"	l
F_BDOS_74	bdos.a86	/^F_BDOS_74:		; DATA XREF: bdos:25D4o$/;"	l
F_BDOS_75	bdos.a86	/^F_BDOS_75:		; DATA XREF: bdos:25DAo$/;"	l
F_CLOSE	bdos.a86	/^F_CLOSE:		; DATA XREF: bdos:2577o$/;"	l
F_DELETE	bdos.a86	/^F_DELETE:		; DATA XREF: bdos:2580o$/;"	l
F_DMAGET	misc.a86	/^F_DMAGET:		; CODE XREF: bdos:2317u$/;"	l
F_DMAOFF	misc.a86	/^F_DMAOFF:		; CODE XREF: bdos:2317u$/;"	l
F_DMASEG	misc.a86	/^F_DMASEG:		; CODE XREF: bdos:2317u$/;"	l
F_ERRMODE	misc.a86	/^F_ERRMODE:		; CODE XREF: bdos:2317u$/;"	l
F_MAKE	bdos.a86	/^F_MAKE:		; DATA XREF: bdos:2589o$/;"	l
F_MULTISEC	misc.a86	/^F_MULTISEC:		; CODE XREF: bdos:2317u$/;"	l
F_OPEN	bdos.a86	/^F_OPEN:		; DATA XREF: bdos:2574o$/;"	l
F_PARSE	sup.a86	/^F_PARSE:		; CODE XREF: bdos:0245u$/;"	l
F_PASSWD	bdos.a86	/^F_PASSWD:		; DATA XREF: bdos:25D1o$/;"	l
F_RANDREC	bdos.a86	/^F_RANDREC:		; DATA XREF: bdos:25A4o$/;"	l
F_READ	bdos.a86	/^F_READ:		; DATA XREF: bdos:2583o$/;"	l
F_READRAND	bdos.a86	/^F_READRAND:		; DATA XREF: bdos:259Bo$/;"	l
F_RENAME	bdos.a86	/^F_RENAME:				; DATA XREF: bdos:258Co$/;"	l
F_SFIRST	bdos.a86	/^F_SFIRST:		; DATA XREF: bdos:257Ao$/;"	l
F_SIZE	bdos.a86	/^F_SIZE:		; DATA XREF: bdos:25A1o$/;"	l
F_SNEXT	bdos.a86	/^F_SNEXT:				; DATA XREF: bdos:257Do$/;"	l
F_TIMEDATE	bdos.a86	/^F_TIMEDATE:		; DATA XREF: bdos:25CBo$/;"	l
F_TRUNCATE	bdos.a86	/^F_TRUNCATE:		; DATA XREF: bdos:25C2o$/;"	l
F_USERNUM	misc.a86	/^F_USERNUM:		; CODE XREF: bdos:2317u$/;"	l
F_WRITE	bdos.a86	/^F_WRITE:		; DATA XREF: bdos:2586o$/;"	l
F_WRITERAND	bdos.a86	/^F_WRITERAND:		; DATA XREF: bdos:259Eo$/;"	l
F_WRITEXFCB	bdos.a86	/^F_WRITEXFCB:		; DATA XREF: bdos:25CEo$/;"	l
F_WRITEZF	bdos.a86	/^F_WRITEZF:		; DATA XREF: bdos:25B0o$/;"	l
F_do_call	bdos.a86	/^F_do_call:		; CODE XREF: bdos_switch+AAp$/;"	l
F_entry_sp	bdos.a86	/^F_entry_sp	dw 0			; DATA XREF: funcs_F_main+27o$/;"	d
F_isfatfs	bdos.a86	/^F_isfatfs	db 0			; DATA XREF: seek+17r lru_ckdirtyr$/;"	d
F_nop	bdos.a86	/^F_nop:					; DATA XREF: bdos:25AAo bdos:25ADo$/;"	l
F_old_sp	bdos.a86	/^F_old_sp	dw 0			; DATA XREF: funcs_F_main+1Fw$/;"	d
F_old_ss	bdos.a86	/^F_old_ss	dw 0			; DATA XREF: funcs_F_main+1Bw$/;"	d
F_repeat_call	bdos.a86	/^F_repeat_call:		; CODE XREF: bdos_switch+A5p$/;"	l
F_return	bdos.a86	/^F_return:				; CODE XREF: sel$error+27j$/;"	l
G09E6	sup.a86	/^G09E6:					; DATA XREF: dseg:0044o$/;"	l
INCLUDE	loader.a86	/^INCLUDE	cpm3.equ$/;"	l
INCLUDE	loader.a86	/^INCLUDE	platform.equ$/;"	l
INT_E0	equates.a86	/^INT_E0		equ	dword ptr .0380h$/;"	d
L_WRITE	cio.a86	/^L_WRITE:		; CODE XREF: bdos:17C3u S_BIOS+1Fu$/;"	l
L_WRITEBLK	cio.a86	/^L_WRITEBLK:$/;"	l
MC_ABSALLOC	mem.a86	/^MC_ABSALLOC:		; CODE XREF: funcs_MC+12u$/;"	l
MC_ABSMAX	mem.a86	/^MC_ABSMAX:		; CODE XREF: funcs_MC+12u$/;"	l
MC_ALLFREE	mem.a86	/^MC_ALLFREE:		; CODE XREF: funcs_MC+12u$/;"	l
MC_ALLOC	mem.a86	/^MC_ALLOC:		; CODE XREF: funcs_MC+12u$/;"	l
MC_FREE	mem.a86	/^MC_FREE:		; CODE XREF: funcs_MC+12u$/;"	l
MC_MAX	mem.a86	/^MC_MAX:		; CODE XREF: funcs_MC+12u$/;"	l
NO	equates.a86	/^NO	equ	0$/;"	d
P_0204	rtm.a86	/^P_0204:		; CODE XREF: bdos:0EDAu$/;"	l
P_0205	rtm.a86	/^P_0205:		; CODE XREF: bdos:0EDAu release_queues+4p$/;"	l
P_0206	rtm.a86	/^P_0206:		; CODE XREF: bdos:0EDAu$/;"	l
P_0207	rtm.a86	/^P_0207:		; CODE XREF: bdos:0EDAu P_0206+9j$/;"	l
P_0209	rtm.a86	/^P_0209:		; CODE XREF: bdos:0EDAu rtm_sysflag+2Bp$/;"	l
P_020A	rtm.a86	/^P_020A:		; CODE XREF: bdos:0EDAu P_TERMCPM+4Cp$/;"	l
P_CHAIN	sup.a86	/^P_CHAIN:		; CODE XREF: bdos:0245u$/;"	l
P_CODE	misc.a86	/^P_CODE:		; CODE XREF: bdos:2317u$/;"	l
P_DELAY	rtm.a86	/^P_DELAY:		; CODE XREF: bdos:0EDAu$/;"	l
P_DISPATCH	rtm.a86	/^P_DISPATCH:				; CODE XREF: bdos:0EDAu P_0207+9j$/;"	l
P_LOAD	sup.a86	/^P_LOAD:		; CODE XREF: bdos:0245u$/;"	l
P_RSX_default	misc.a86	/^P_RSX_default:		; DATA XREF: bdos:22EFo$/;"	l
P_TERMCPM	rtm.a86	/^P_TERMCPM:		; CODE XREF: bdos:0EDAu$/;"	l
P_WAITFLAG	rtm.a86	/^P_WAITFLAG:		; CODE XREF: bdos:0EDAu$/;"	l
SCR_ECHODEL	system.a86	/^SCR_ECHODEL	equ	0$/;"	d
SCR_MAXX	system.a86	/^SCR_MAXX	equ	79$/;"	d
SCR_MAXY	system.a86	/^SCR_MAXY	equ	24$/;"	d
SYSFLAGS	system.a86	/^SYSFLAGS	equ	65B0h$/;"	d
S_BDOSVER	misc.a86	/^S_BDOSVER:		; CODE XREF: bdos:2317u$/;"	l
S_BIOS	cio.a86	/^S_BIOS:		; CODE XREF: bdos:17C3u$/;"	l
S_SERIAL	misc.a86	/^S_SERIAL:		; CODE XREF: bdos:2317u$/;"	l
S_SYSVAR	misc.a86	/^S_SYSVAR:		; CODE XREF: bdos:2317u$/;"	l
T_GET	misc.a86	/^T_GET:					; CODE XREF: bdos:2317u$/;"	l
T_SET	misc.a86	/^T_SET:					; CODE XREF: bdos:2317u$/;"	l
WORD_17998	cpm3.equ	/^WORD_17998	equ	.0058h		; dw 010h$/;"	d
WORD_1799A	cpm3.equ	/^WORD_1799A	equ	.005Ah		; dw 01000h$/;"	d
WORD_17C10	cpm3.equ	/^WORD_17C10	equ	.02D0h		; dw 0h$/;"	d
YES	equates.a86	/^YES	equ	NOT NO$/;"	d
__anonce146d470108	cmdio.h	/^{$/;"	s
_entry	loader.a86	/^_entry:$/;"	l
_noselect	bdos.a86	/^_noselect:				; CODE XREF: reselect+38j$/;"	l
_write	bdos.a86	/^_write:					; CODE XREF: cpm_writerec+E9j$/;"	l
a080586	entry.a86	/^a080586		db '[06-Feb-85] '$/;"	d
abort	cio.a86	/^abort:					; CODE XREF: S_BIOS+1Fu$/;"	l
abort_minus3	cio.a86	/^abort_minus3:				; CODE XREF: C_RAWIO+20j C_READSTR+8j$/;"	l
adc	bdos.a86	/^		adc	dl, 0$/;"	d
adc	bdos.a86	/^		adc	dx, 0$/;"	d
add	bdos.a86	/^		add	di, 0Ch$/;"	d
add	bdos.a86	/^		add	di, 20h$/;"	d
add	bdos.a86	/^		add	di, 4$/;"	d
add	bdos.a86	/^		add	di, 6$/;"	d
add	bdos.a86	/^		add	di, ax$/;"	d
add	bdos.a86	/^		add	di, bx$/;"	d
add	bdos.a86	/^		add	dl, ':'$/;"	d
add	bdos.a86	/^		add	dx, cx$/;"	d
add	mem.a86	/^		add	di, 6$/;"	d
add	mem.a86	/^		add	dx, 2[di]	; Now try the same with	the following$/;"	d
add	mem.a86	/^		add	dx, mcb_segment$/;"	d
add	rtm.a86	/^		add	di, dx$/;"	d
add	sup.a86	/^		add	di, 0Ch$/;"	d
add	sup.a86	/^		add	di, cx$/;"	d
add	sup.a86	/^		add	dx, ax$/;"	d
add_to_chain	rtm.a86	/^add_to_chain:		; CODE XREF: P_0204+12p P_0209+12p$/;"	l
added_to_chain	rtm.a86	/^added_to_chain:				; CODE XREF: add_to_chain+8j$/;"	l
addgroup	exe2cmd.c	/^void addgroup(int type, unsigned short paras, unsigned short base,$/;"	f	typeref:typename:void
addr_ambiguous	equates.a86	/^addr_ambiguous	equ	word ptr .102Eh$/;"	d
addr_bdos_fn	equates.a86	/^addr_bdos_fn	equ	word ptr .101Eh$/;"	d
addr_cpm_error	equates.a86	/^addr_cpm_error	equ	word ptr .101Ch		;Localised messages$/;"	d
addr_file	equates.a86	/^addr_file	equ	word ptr .1020h$/;"	d
addr_filexists	equates.a86	/^addr_filexists	equ	word ptr .102Ch$/;"	d
addr_invaliddrv	equates.a86	/^addr_invaliddrv	equ	word ptr .1028h$/;"	d
addr_no_ccp	equates.a86	/^addr_no_ccp	equ	word ptr .1018h$/;"	d
addr_pwderr	equates.a86	/^addr_pwderr	equ	word ptr .102Ah$/;"	d
addr_rodisk	equates.a86	/^addr_rodisk	equ	word ptr .1024h$/;"	d
addr_rofile	equates.a86	/^addr_rofile	equ	word ptr .1026h$/;"	d
addr_user	equates.a86	/^addr_user	equ	word ptr .101Ah$/;"	d
addr_writeerr	equates.a86	/^addr_writeerr	equ	word ptr .1022h$/;"	d
afontptroff	platform.equ	/^afontptroff	equ	.0706h$/;"	d
afontptrseg	platform.equ	/^afontptrseg	equ	.0708h$/;"	d
allmem_freed	mem.a86	/^allmem_freed:				; CODE XREF: free_allmem+7j$/;"	l
alloc_clus_1	bdos.a86	/^alloc_clus_1:				; CODE XREF: alloc_cluster+2j$/;"	l
alloc_clus_2	bdos.a86	/^alloc_clus_2:				; CODE XREF: alloc_cluster+37j$/;"	l
alloc_clus_3	bdos.a86	/^alloc_clus_3:				; CODE XREF: alloc_cluster+1Cj$/;"	l
alloc_clus_4	bdos.a86	/^alloc_clus_4:				; CODE XREF: alloc_cluster+Fj$/;"	l
alloc_clus_5	bdos.a86	/^alloc_clus_5:				; CODE XREF: alloc_cluster+30j$/;"	l
alloc_clus_6	bdos.a86	/^alloc_clus_6:				; CODE XREF: alloc_cluster+25j$/;"	l
alloc_cluster	bdos.a86	/^alloc_cluster:		; CODE XREF: fat_make+36p fat_make+AAp$/;"	l
alloc_cmd	cmdio.c	/^char *alloc_cmd(cmd_desc *cmdfile, long cs_len, long ds_len)$/;"	f	typeref:typename:char *
allocate_block	mem.a86	/^allocate_block:		; CODE XREF: common_alloc+7p$/;"	l
allocwd	bdos.a86	/^allocwd:				; CODE XREF: cpm_writerec+81j$/;"	l
already_in_cpm	entry.a86	/^already_in_cpm:				; CODE XREF: bdos:0155j$/;"	l
and	bdos.a86	/^		and	dl, 0FCh$/;"	d
and	bdos.a86	/^		and	dl, 0Fh$/;"	d
and	bdos.a86	/^		and	dl, 1Fh$/;"	d
and	bdos.a86	/^		and	dl, 3$/;"	d
and	bdos.a86	/^		and	dl, 3Fh$/;"	d
and	bdos.a86	/^		and	dl, 7Fh$/;"	d
and	bdos.a86	/^		and	dx, 0FFFh$/;"	d
and	bdos.a86	/^		and	dx, 1$/;"	d
and	bdos.a86	/^		and	dx, names_per_block$/;"	d
and	mem.a86	/^		and	dx, 0Ch$/;"	d
and	mem.a86	/^		and	dx, 0FFFBh$/;"	d
arecord1	bdos.a86	/^arecord1	dw 0			; DATA XREF: atran+7w lru_ckdirty+14r$/;"	d
aret	bdos.a86	/^aret		dw 0			; DATA XREF: funcs_F_main+F3r$/;"	d
assign_floatdrv	bdos.a86	/^assign_floatdrv:$/;"	l
atran	bdos.a86	/^atran:		; CODE XREF: bdos:3D15p cpm_writerec+96p$/;"	l
attach_console	cio.a86	/^attach_console:		; CODE XREF: C_RAWIOp simulate_const+8p$/;"	l
attributes	bdos.a86	/^attributes	db 0			; DATA XREF: get$atts+17w cpm_delete+16r$/;"	d
aux_owner	cio.a86	/^aux_owner	db 0FFh			; DATA XREF: kill_process+Dr$/;"	d
aux_xios	cio.a86	/^aux_xios:				; CODE XREF: A_WRITE+2j A_STATIN+2j$/;"	l
bad_charset	sup.a86	/^bad_charset:				; CODE XREF: F_PARSE+32j F_PARSE+36j$/;"	l
badseek	bdos.a86	/^badseek:				; CODE XREF: cpm_rwrand+9Cj$/;"	l
bcb_dirty	bdos.a86	/^bcb_dirty	dw 0			; DATA XREF: atran+12w	cpm_login+38w$/;"	d
bcb_drive	bdos.a86	/^bcb_drive	db 0			; DATA XREF: rdbuff+17r rdbuff+3Br$/;"	d
bcb_record	bdos.a86	/^bcb_record	dw 0			; DATA XREF: xios_rdwrr seekr	...$/;"	d
bcb_record_h	bdos.a86	/^bcb_record_h	db 0			; DATA XREF: xios_rdwr+4r seek+5r$/;"	d
bcb_rel_cl	bdos.a86	/^bcb_rel_cl:				; CODE XREF: discard$databcb+6j$/;"	l
bcbrel_loop	bdos.a86	/^bcbrel_loop:				; CODE XREF: discard$data+1Aj$/;"	l
bcbrel_next	bdos.a86	/^bcbrel_next:				; CODE XREF: discard$data+10j$/;"	l
bcd2bin	bdos.a86	/^bcd2bin:		; CODE XREF: timestamp_2_fat+5Dp$/;"	l
bcd2bin1	bdos.a86	/^bcd2bin1:				; CODE XREF: bcd2bin+Bj$/;"	l
bcd2bin2	bdos.a86	/^bcd2bin2:				; CODE XREF: bcd2bin+4j$/;"	l
bci_dopoll	cio.a86	/^bci_dopoll:				; CODE XREF: bdos_conin+13j$/;"	l
bci_gotkey	cio.a86	/^bci_gotkey:				; CODE XREF: bdos_conin+8j$/;"	l
bci_readkey	cio.a86	/^bci_readkey:				; CODE XREF: bdos_conin+26j$/;"	l
bco_ck_rightx	cio.a86	/^bco_ck_rightx:				; CODE XREF: bdos_char_out+51j$/;"	l
bco_doconst	cio.a86	/^bco_doconst:				; CODE XREF: bdos_char_out+Ej$/;"	l
bco_nobreak	cio.a86	/^bco_nobreak:				; CODE XREF: bdos_char_out+6j$/;"	l
bco_noconst	cio.a86	/^bco_noconst:				; CODE XREF: bdos_char_out+13j$/;"	l
bco_noecholst	cio.a86	/^bco_noecholst:				; CODE XREF: bdos_char_out+30j$/;"	l
bco_none	cio.a86	/^bco_none:				; CODE XREF: bdos_char_out+4Aj$/;"	l
bco_noswallow	cio.a86	/^bco_noswallow:				; CODE XREF: bdos_char_out+1Ej$/;"	l
bco_notbksp	cio.a86	/^bco_notbksp:				; CODE XREF: bdos_char_out+5Aj$/;"	l
bco_setx	cio.a86	/^bco_setx:				; CODE XREF: bdos_char_out+5Ej$/;"	l
bconst_dsptch	cio.a86	/^bconst_dsptch:				; CODE XREF: const_noqueue+5j$/;"	l
bconst_queued	cio.a86	/^bconst_queued:				; CODE XREF: bdos_const+5j$/;"	l
bdkk_1	cio.a86	/^bdkk_1:					; CODE XREF: cio_keyboard+16j$/;"	l
bdkk_2	cio.a86	/^bdkk_2:					; CODE XREF: cio_keyboard+1Ej$/;"	l
bdkk_3	cio.a86	/^bdkk_3:					; CODE XREF: cio_keyboard+1Aj$/;"	l
bdkk_4	cio.a86	/^bdkk_4:					; CODE XREF: cio_keyboard+Dj$/;"	l
bdkk_5	cio.a86	/^bdkk_5:					; CODE XREF: cio_keyboard+9j$/;"	l
bdos75_notread	bdos.a86	/^bdos75_notread:				; CODE XREF: F_BDOS_75+4Aj$/;"	l
bdos75_notwrite	bdos.a86	/^bdos75_notwrite:			; CODE XREF: F_BDOS_75+5Aj$/;"	l
bdos75a	bdos.a86	/^bdos75a:				; CODE XREF: F_BDOS_75+81j$/;"	l
bdos75b	bdos.a86	/^bdos75b:				; CODE XREF: F_BDOS_75+76j$/;"	l
bdos75c	bdos.a86	/^bdos75c:				; CODE XREF: F_BDOS_75+31j$/;"	l
bdos75d	bdos.a86	/^bdos75d:				; CODE XREF: F_BDOS_75+AEj$/;"	l
bdos_8087_inuse	entry.a86	/^bdos_8087_inuse	db 0			; DATA XREF: call_p_load+10w$/;"	d
bdos_badfunc	entry.a86	/^bdos_badfunc:				; CODE XREF: bdos:01DBj bdos:01E5j$/;"	l
bdos_callback	entry.a86	/^bdos_callback:		; CODE XREF: get_proc_dskdat+Bp$/;"	l
bdos_cbk_end	entry.a86	/^bdos_cbk_end:				; CODE XREF: bdos_callback+Bj$/;"	l
bdos_char_out	cio.a86	/^bdos_char_out:		; CODE XREF: input_putchar+8p$/;"	l
bdos_chk_conin	cio.a86	/^bdos_chk_conin:		; CODE XREF: bdos_char_out+20p$/;"	l
bdos_cmd	dpgen.c	/^cmd_desc dosplus_sys, bdos_cmd, xios_cmd, ccp_cmd, dos_cmd;$/;"	v	typeref:typename:cmd_desc
bdos_conin	cio.a86	/^bdos_conin:		; CODE XREF: C_READ+19p C_RAWIO+1Dj$/;"	l
bdos_conowner	entry.a86	/^bdos_conowner	dw offset proc1		; DATA XREF: bdos:002Ew bdos_sysflag+Ar$/;"	d
bdos_const	cio.a86	/^bdos_const:		; CODE XREF: C_RAWIO+2Ep C_STAT+Dp$/;"	l
bdos_dseg	cpm3.equ	/^bdos_dseg	equ	.0006h$/;"	d
bdos_dseg	entry.a86	/^bdos_dseg	dw 	seg sysvar_144$/;"	d
bdos_entry	entry.a86	/^bdos_entry:				; CODE XREF: x_dev_waitflag+2u$/;"	l
bdos_func	entry.a86	/^bdos_func:				; CODE XREF: bdos:01C8j$/;"	l
bdos_functions	bdos.a86	/^bdos_functions	dw offset DRV_ALLRESET	; DATA XREF: bdos_main+2o bdos:25F7o$/;"	d
bdos_functions	entry.a86	/^bdos_functions	db 20h			; DATA XREF: bdos:01F2o$/;"	d
bdos_gotfunc	entry.a86	/^bdos_gotfunc:				; CODE XREF: bdos:01D5j bdos:01DFj$/;"	l
bdos_init	bdos.a86	/^bdos_init:					; DATA XREF: dseg:001Ao$/;"	l
bdos_int_E0	entry.a86	/^bdos_int_E0:				; CODE XREF: bdos:0003j$/;"	l
bdos_main	bdos.a86	/^bdos_main:		; DATA XREF: dseg:0018o$/;"	l
bdos_main_alt	bdos.a86	/^bdos_main_alt:				; CODE XREF: bdos:2606j$/;"	l
bdos_rsx	entry.a86	/^bdos_rsx:				; DATA XREF: proc1:0052o$/;"	l
bdos_rsx_main	entry.a86	/^bdos_rsx_main:				; CODE XREF: bdos:01A2j$/;"	l
bdos_start	entry.a86	/^bdos_start:				; CODE XREF: bdos:0000j$/;"	l
bdos_switch	bdos.a86	/^bdos_switch:		; CODE XREF: bdos_main+6p$/;"	l
bdos_sysflags	entry.a86	/^bdos_sysflags	dw SYSFLAGS		; This should get set by GENCPM$/;"	d
bdos_ver	entry.a86	/^bdos_ver	dw 1033h		; DATA XREF: S_BDOSVERr$/;"	d
bffcb_16bit	bdos.a86	/^bffcb_16bit:				; CODE XREF: get$dm+Aj$/;"	l
bg_conost	cio.a86	/^bg_conost:				; CODE XREF: call_conost+6j$/;"	l
blk$off	bdos.a86	/^blk$off		db 0			; DATA XREF: atran+1Dw	deblock+11Ar$/;"	d
blockok	bdos.a86	/^blockok:				; CODE XREF: cpm_writerec+64j$/;"	l
boot	loader.a86	/^boot:	$/;"	l
boot_drive	entry.a86	/^boot_drive	db 0			; DATA XREF: bdos:006Cr bdos:23CEo$/;"	d
bootfrom	platform.equ	/^bootfrom	equ	.0408h$/;"	d
bootuserlt9	ccpldr.a86	/^bootuserlt9:	add	al, '0'$/;"	l
bsf_badflag	rtm.a86	/^bsf_badflag:				; CODE XREF: rtm_sysflag+40j$/;"	l
bsf_checktimer	rtm.a86	/^bsf_checktimer:				; CODE XREF: rtm_sysflag+34j$/;"	l
bsf_done	rtm.a86	/^bsf_done:				; CODE XREF: rtm_sysflag+39j$/;"	l
bsf_nexttimer	rtm.a86	/^bsf_nexttimer:				; CODE XREF: rtm_sysflag+16j$/;"	l
bsf_not1	rtm.a86	/^bsf_not1:				; CODE XREF: rtm_sysflag+3j$/;"	l
bsf_nowake	rtm.a86	/^bsf_nowake:				; CODE XREF: rtm_sysflag+47j$/;"	l
bsf_overrun	rtm.a86	/^bsf_overrun:				; CODE XREF: rtm_sysflag+45j$/;"	l
bsf_popret	rtm.a86	/^bsf_popret:				; CODE XREF: rtm_sysflag+5Aj$/;"	l
bsf_wakeproc	rtm.a86	/^bsf_wakeproc:				; CODE XREF: rtm_sysflag+20j$/;"	l
bsf_woken	rtm.a86	/^bsf_woken:				; CODE XREF: rtm_sysflag+52j$/;"	l
buffa	bdos.a86	/^buffa		dw 0			; DATA XREF: compute$csr getdptra+6r$/;"	d
buffer_addr	cio.a86	/^buffer_addr	dw 0,0			; DATA XREF: set_buf_startr$/;"	d
buffer_curpos	cio.a86	/^buffer_curpos	dw 0			; DATA XREF: set_buf_start+Bw$/;"	d
buffer_end0	cio.a86	/^buffer_end0	dw 0			; DATA XREF: input_drawline+4r$/;"	d
buffer_end1	cio.a86	/^buffer_end1	dw 0			; DATA XREF: input_drawliner$/;"	d
buffer_len	cio.a86	/^buffer_len	dw 0			; DATA XREF: C_READSTR+2Cw$/;"	d
buffer_start0	cio.a86	/^buffer_start0	dw 0			; DATA XREF: set_buf_start+7w$/;"	d
buffnzero	bdos.a86	/^buffnzero:				; CODE XREF: close$fcb+32j$/;"	l
bufseg	loader.a86	/^bufseg	dw	0$/;"	d
byte	cmdio.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
c103_freersxes	sup.a86	/^c103_freersxes:				; CODE XREF: Callback_103+B6j$/;"	l
c103_nextrsx	sup.a86	/^c103_nextrsx:				; CODE XREF: Callback_103+8Cj$/;"	l
c103_rsxend	sup.a86	/^c103_rsxend:				; CODE XREF: Callback_103+86j$/;"	l
c2f_EX	bdos.a86	/^c2f_EX		db 0			; DATA XREF: c2f_to_extent+9r$/;"	d
c2f_RC	bdos.a86	/^c2f_RC		db 0			; DATA XREF: fat_rdwr+9Aw fat_rdwr+356r$/;"	d
c2f_S2	bdos.a86	/^c2f_S2		db 0			; DATA XREF: c2f_to_extent+2r$/;"	d
c2f_to_extent	bdos.a86	/^c2f_to_extent:		; CODE XREF: fat_rdwr+363p$/;"	l
c_delimit1	cio.a86	/^c_delimit1:				; CODE XREF: C_DELIMIT+1j$/;"	l
c_mode1	cio.a86	/^c_mode1:				; CODE XREF: C_MODE+1j$/;"	l
c_rawconst	cio.a86	/^c_rawconst:				; CODE XREF: C_RAWIO+13j$/;"	l
c_rawin	cio.a86	/^c_rawin:				; CODE XREF: C_RAWIO+6j$/;"	l
c_rawio_ret	cio.a86	/^c_rawio_ret:				; CODE XREF: C_RAWIO+Ej C_RAWIO+2Bj$/;"	l
c_read_fg	cio.a86	/^c_read_fg:				; CODE XREF: C_READ+6j$/;"	l
c_stat_allkeys	cio.a86	/^c_stat_allkeys:				; CODE XREF: C_STAT+19j$/;"	l
c_write_bgproc	cio.a86	/^c_write_bgproc:				; CODE XREF: C_READ+21j C_WRITE+6j$/;"	l
c_writestr1	cio.a86	/^c_writestr1:	push	ds$/;"	l
c_writestr2	cio.a86	/^c_writestr2:	call	expand_tabs$/;"	l
c_writestr3	cio.a86	/^c_writestr3:	pop	bx$/;"	l
calc_extent_no	bdos.a86	/^calc_extent_no:		; CODE XREF: cpm_rwrand+1p$/;"	l
call$open	bdos.a86	/^call$open:				; CODE XREF: F_OPEN+31j$/;"	l
call_conost	cio.a86	/^call_conost:		; CODE XREF: S_BIOS+1Fu$/;"	l
call_devini	cio.a86	/^call_devini:		; CODE XREF: S_BIOS+1Fu$/;"	l
call_flags	bdos.a86	/^call_flags	dw 0			; DATA XREF: F_repeat_callw$/;"	d
call_inits	entry.a86	/^call_inits:	push	bx$/;"	l
call_listst	cio.a86	/^call_listst:		; CODE XREF: S_BIOS+1Fu$/;"	l
call_p_load	sup.a86	/^call_p_load:		; CODE XREF: P_CHAIN+AFp$/;"	l
call_termcpm	rtm.a86	/^call_termcpm:				; CODE XREF: P_0206+1Bj$/;"	l
call_xios	cio.a86	/^call_xios:	push	cx$/;"	l
call_xios_flush	bdos.a86	/^call_xios_flush:		; CODE XREF: F_CLOSE+3Ap fat_close+43p$/;"	l
callback_00	entry.a86	/^callback_00:				; CODE XREF: bdos_callback+2j$/;"	l
caller_mcb	mem.a86	/^caller_mcb	dw 0			; DATA XREF: get_mcb_parsw$/;"	d
callopen_noret	bdos.a86	/^callopen_noret:				; CODE XREF: F_OPEN+4Bj$/;"	l
callopen_ret	bdos.a86	/^callopen_ret:				; CODE XREF: F_OPEN+53j openx+3j$/;"	l
can_write	bdos.a86	/^can_write:				; CODE XREF: check$rodir+6j$/;"	l
cant_delete	bdos.a86	/^cant_delete:				; CODE XREF: fat_delete+60j$/;"	l
cbk_function	rtm.a86	/^cbk_function	dw 0			; DATA XREF: delay_dispatch+Cw$/;"	d
ccp_cmd	dpgen.c	/^cmd_desc dosplus_sys, bdos_cmd, xios_cmd, ccp_cmd, dos_cmd;$/;"	v	typeref:typename:cmd_desc
ccp_dseg	entry.a86	/^ccp_dseg	dw 0			; DATA XREF: mc_temp_untempr$/;"	d
ccp_fcb	sup.a86	/^ccp_fcb		db	0$/;"	d
ccp_user	entry.a86	/^ccp_user	db 0$/;"	d
ccpl_1	ccpldr.a86	/^ccpl_1:		cmp	ccpl_fcb+1, 20h$/;"	l
ccpl_2	ccpldr.a86	/^ccpl_2:		jmp	ccpl_trychain$/;"	l
ccpl_blank	ccpldr.a86	/^ccpl_blank	db	0$/;"	d
ccpl_chain	ccpldr.a86	/^ccpl_chain:	call	ccpl_crlf$/;"	l
ccpl_crlf	ccpldr.a86	/^ccpl_crlf:	mov	al, 0Dh$/;"	l
ccpl_drv_get	ccpldr.a86	/^ccpl_drv_get:	mov	cl, 19h$/;"	l
ccpl_drv_set	ccpldr.a86	/^ccpl_drv_set:	mov	dl, al$/;"	l
ccpl_fcb	ccpldr.a86	/^ccpl_fcb	rb	24h$/;"	l
ccpl_filename_0	ccpldr.a86	/^ccpl_filename_0	dw	0$/;"	d
ccpl_getuid	ccpldr.a86	/^ccpl_getuid:	mov	dl, 0FFh$/;"	l
ccpl_inpbuf	ccpldr.a86	/^ccpl_inpbuf	db	3Fh$/;"	d
ccpl_input	ccpldr.a86	/^ccpl_input:	mov	dx, offset ccpl_inpbuf$/;"	l
ccpl_main	ccpldr.a86	/^ccpl_main:	mov	ds,word ptr .0	;-> CP\/M DSEG$/;"	l
ccpl_mainloop	ccpldr.a86	/^ccpl_mainloop:	mov	sp, ccpl_sp$/;"	l
ccpl_parse_name	ccpldr.a86	/^ccpl_parse_name:$/;"	l
ccpl_parse_num	ccpldr.a86	/^ccpl_parse_num:	call	ccpl_parse_name$/;"	l
ccpl_pfcb	ccpldr.a86	/^ccpl_pfcb	dw	offset ccpl_inpbuf+2$/;"	d
ccpl_pn1	ccpldr.a86	/^ccpl_pn1:	dec	ax$/;"	l
ccpl_pnum_1	ccpldr.a86	/^ccpl_pnum_1:	lodsb$/;"	l
ccpl_pnum_next	ccpldr.a86	/^ccpl_pnum_next:$/;"	l
ccpl_putch	ccpldr.a86	/^ccpl_putch:	mov	dl, al$/;"	l
ccpl_setuid	ccpldr.a86	/^ccpl_setuid:	mov	cl, 20h$/;"	l
ccpl_setuser	ccpldr.a86	/^ccpl_setuser:	call	ccpl_parse_num$/;"	l
ccpl_setuser1	ccpldr.a86	/^ccpl_setuser1:	add	al, '0'$/;"	l
ccpl_setuser2	ccpldr.a86	/^ccpl_setuser2:	mov	dl, al$/;"	l
ccpl_setuser3	ccpldr.a86	/^ccpl_setuser3:	jmp	ccpl_mainloop$/;"	l
ccpl_showerr	ccpldr.a86	/^ccpl_showerr:	call	ccpl_crlf	;Echo the first filename then "?"$/;"	l
ccpl_showerr2	ccpldr.a86	/^ccpl_showerr2:	cmp	al, 20h$/;"	l
ccpl_showerr3	ccpldr.a86	/^ccpl_showerr3:	mov	al, '?'$/;"	l
ccpl_skipsp	ccpldr.a86	/^ccpl_skipsp:	lodsb$/;"	l
ccpl_sp	ccpldr.a86	/^ccpl_sp		dw	0$/;"	d
ccpl_space	ccpldr.a86	/^ccpl_space:	mov	al, ' '$/;"	l
ccpl_trychain	ccpldr.a86	/^ccpl_trychain:	cmp	ccpl_fcb+1, ' '$/;"	l
ccpl_trychain1	ccpldr.a86	/^ccpl_trychain1:	cmp	ccpl_fcb+9, ' '$/;"	l
ccpl_trychain2	ccpldr.a86	/^ccpl_trychain2:	jmp	ccpl_showerr$/;"	l
ccpldr	ccpldr.a86	/^ccpldr:		jmp	ccpl_main$/;"	l
ccpldr_cs	ccpldr.a86	/^ccpldr_cs	dw	0$/;"	d
ccpldr_ds	ccpldr.a86	/^ccpldr_ds	dw	0$/;"	d
cdrmaxa	bdos.a86	/^cdrmaxa		dw 0			; DATA XREF: compcdr+4r cpm_login+3Br$/;"	d
cgf_not_rsx	sup.a86	/^cgf_not_rsx:				; CODE XREF: cmd_alloc_mem+9Cj$/;"	l
chain_fail	sup.a86	/^chain_fail:				; CODE XREF: P_CHAIN+20j P_CHAIN+5Dj$/;"	l
chain_find	sup.a86	/^chain_find:		; CODE XREF: P_CHAIN+5Fp$/;"	l
chain_foundfile	sup.a86	/^chain_foundfile:			; CODE XREF: P_CHAIN+62j$/;"	l
chain_got_name	sup.a86	/^chain_got_name:				; CODE XREF: P_CHAIN+1Ej$/;"	l
chdir_drive	bdos.a86	/^chdir_drive	db 0			; DATA XREF: curselect_dir+Cw$/;"	d
chdir_fromroot	bdos.a86	/^chdir_fromroot:				; CODE XREF: cpm_opendir+4Fj$/;"	l
check$media	bdos.a86	/^check$media:		; CODE XREF: reselect+50p reselect+8Bp$/;"	l
check$media$end	bdos.a86	/^check$media$end:			; CODE XREF: check$media+2Bj$/;"	l
check$media1	bdos.a86	/^check$media1:				; CODE XREF: check$media+43j$/;"	l
check$media2	bdos.a86	/^check$media2:				; CODE XREF: check$media+24j$/;"	l
check$npr1	bdos.a86	/^check$npr1:				; CODE XREF: check$nprs+9j$/;"	l
check$npr10	bdos.a86	/^check$npr10:				; CODE XREF: check$nprs+EBj$/;"	l
check$npr10a	bdos.a86	/^check$npr10a:				; CODE XREF: check$nprs+FDj$/;"	l
check$npr10b	bdos.a86	/^check$npr10b:				; CODE XREF: check$nprs+F3j$/;"	l
check$npr11	bdos.a86	/^check$npr11:				; CODE XREF: check$nprs+19j$/;"	l
check$npr1a	bdos.a86	/^check$npr1a:				; CODE XREF: check$nprs+2Ej$/;"	l
check$npr1b	bdos.a86	/^check$npr1b:				; CODE XREF: check$nprs+1Dj$/;"	l
check$npr2	bdos.a86	/^check$npr2:				; CODE XREF: check$nprs+47j$/;"	l
check$npr21	bdos.a86	/^check$npr21:				; CODE XREF: check$nprs+63j$/;"	l
check$npr23	bdos.a86	/^check$npr23:				; CODE XREF: check$nprs+6Cj$/;"	l
check$npr4	bdos.a86	/^check$npr4:				; CODE XREF: check$nprs+96j$/;"	l
check$npr5	bdos.a86	/^check$npr5:				; CODE XREF: check$nprs+83j$/;"	l
check$npr8	bdos.a86	/^check$npr8:				; CODE XREF: check$nprs+D6j$/;"	l
check$npr9	bdos.a86	/^check$npr9:				; CODE XREF: check$nprs+74j$/;"	l
check$nprs	bdos.a86	/^check$nprs:		; CODE XREF: bdos:3D18p cpm_writerec+E4p$/;"	l
check$nptr45	bdos.a86	/^check$nptr45:				; CODE XREF: check$nprs+9Dj$/;"	l
check$rodir	bdos.a86	/^check$rodir:		; CODE XREF: cpm_delete+1Dp$/;"	l
check$rofile	bdos.a86	/^check$rofile:				; CODE XREF: cpm_writerec+24p$/;"	l
check$wild	bdos.a86	/^check$wild:		; CODE XREF: F_OPEN+29p bdos:4790p$/;"	l
check$wild0	bdos.a86	/^check$wild0:		; CODE XREF: valid_dl_f_fcb+3p$/;"	l
check$write	bdos.a86	/^check$write:		; CODE XREF: seek$copyp cpm_writerec+5p$/;"	l
check_changed	bdos.a86	/^check_changed:		; CODE XREF: F_READp F_WRITEp$/;"	l
check_charset	sup.a86	/^check_charset:		; CODE XREF: F_PARSE+1Ap F_PARSE+40p$/;"	l
check_ready	rtm.a86	/^check_ready:				; CODE XREF: delay_dispatch+F9j$/;"	l
check_ready1	rtm.a86	/^check_ready1:				; CODE XREF: delay_dispatch+106j$/;"	l
check_result	entry.a86	/^check_result:				; CODE XREF: bdos:019Dj$/;"	l
check_term	sup.a86	/^check_term:				; CODE XREF: check_charset+15j$/;"	l
check_timeslice	rtm.a86	/^check_timeslice:		; CODE XREF: delay_dispatch+5Bp$/;"	l
checksum	bdos.a86	/^checksum:				; CODE XREF: seek$copy+20j$/;"	l
chek$fcb	bdos.a86	/^chek$fcb:		; CODE XREF: check_changedp$/;"	l
chek$fcb1	bdos.a86	/^chek$fcb1:				; CODE XREF: chek$fcb+5j$/;"	l
chk$am1	bdos.a86	/^chk$am1:				; CODE XREF: reselect+92j$/;"	l
chk$am2	bdos.a86	/^chk$am2:				; CODE XREF: reselect+68j$/;"	l
chk$exit$fxs	bdos.a86	/^chk$exit$fxs:		; CODE XREF: rdbuff+4Cp read$dir+Ap$/;"	l
chk$media2	bdos.a86	/^chk$media2:				; CODE XREF: chk$exit$fxs+Cj$/;"	l
chk$password	bdos.a86	/^chk$password:		; CODE XREF: bdos:479Dp F_ATTRIB+13p$/;"	l
chk$pw$error	bdos.a86	/^chk$pw$error:		; CODE XREF: cpm_delete+3Dp$/;"	l
chk$pwe1	bdos.a86	/^chk$pwe1:				; CODE XREF: chk$pw$error+31j$/;"	l
chk$pwe2	bdos.a86	/^chk$pwe2:				; CODE XREF: chk$pw$error+2Aj$/;"	l
chk$wild_cpm	bdos.a86	/^chk$wild_cpm:		; CODE XREF: set$hash+2Dp cpm_delete+2Ap$/;"	l
chk_exit_fxs1	bdos.a86	/^chk_exit_fxs1:				; CODE XREF: chk$exit$fxs+Aj$/;"	l
chk_exit_fxs2	bdos.a86	/^chk_exit_fxs2:				; CODE XREF: chk$exit$fxs+15j$/;"	l
chk_fcb_char	bdos.a86	/^chk_fcb_char:				; CODE XREF: check$wild0+19j$/;"	l
chk_fcb_dl0	bdos.a86	/^chk_fcb_dl0:				; CODE XREF: check$wild0+Fj$/;"	l
chk_pwe_ret	bdos.a86	/^chk_pwe_ret:				; CODE XREF: chk$pw$error+60j$/;"	l
chk_xfcb_passw1	bdos.a86	/^chk_xfcb_passw1:			; CODE XREF: F_MAKE+5Fp$/;"	l
chk_xfcb_passwd	bdos.a86	/^chk_xfcb_passwd:		; CODE XREF: cpm_delete+38p$/;"	l
cio_flags	cio.a86	/^cio_flags	dw 0			; DATA XREF: cio_keyboard+24r$/;"	d
cio_functions	cio.a86	/^cio_functions	dw offset C_READ	; DATA XREF: bdos:17C3o$/;"	d
cio_init	cio.a86	/^cio_init:					; DATA XREF: dseg:000Eo$/;"	l
cio_keyboard	cio.a86	/^cio_keyboard:		; CODE XREF: testCtrlAltKeys+CCu$/;"	l
cio_main	cio.a86	/^cio_main:				; DATA XREF: dseg:000Co$/;"	l
ckcset_1	sup.a86	/^ckcset_1:				; CODE XREF: check_charset+Bj$/;"	l
ckcset_2	sup.a86	/^ckcset_2:				; CODE XREF: check_charset+19j$/;"	l
ckcset_3	sup.a86	/^ckcset_3:				; CODE XREF: check_charset+29j$/;"	l
ckcset_4	sup.a86	/^ckcset_4:				; CODE XREF: check_charset+10j$/;"	l
cksum8_loop	bdos.a86	/^cksum8_loop:				; CODE XREF: cksum_cl_bytes+5j$/;"	l
cksum_cl_bytes	bdos.a86	/^cksum_cl_bytes:		; CODE XREF: compute$cs+Ep$/;"	l
close	bdos.a86	/^close:		; CODE XREF: open$reel+19p$/;"	l
close$fcb	bdos.a86	/^close$fcb:		; CODE XREF: close+2Ap$/;"	l
close$fcb0	bdos.a86	/^close$fcb0:				; CODE XREF: close$fcb+5j$/;"	l
close1	bdos.a86	/^close1:					; CODE XREF: close+25j$/;"	l
close_file	bdos.a86	/^close_file:				; CODE XREF: F_CLOSE+5j F_CLOSE+Cj$/;"	l
clr$ext	bdos.a86	/^clr$ext:		; CODE XREF: reselect+24p F_SFIRST+2Dp$/;"	l
clrmodnum	bdos.a86	/^clrmodnum:		; CODE XREF: F_OPEN+3p	F_SFIRST+30p$/;"	l
clus_to_sec	bdos.a86	/^clus_to_sec:		; CODE XREF: rd$subdir1+69p$/;"	l
clus_to_sec1	bdos.a86	/^clus_to_sec1:				; CODE XREF: clus_to_sec+1Fj$/;"	l
cmd_alloc_abort	sup.a86	/^cmd_alloc_abort:			; CODE XREF: cmd_alloc_mem+A1j$/;"	l
cmd_alloc_mem	sup.a86	/^cmd_alloc_mem:		; CODE XREF: P_LOAD+121p load_rsx+1Bp$/;"	l
cmd_cur_pos	sup.a86	/^cmd_cur_pos	dw 0			; DATA XREF: cmd_alloc_mem+Ew$/;"	d
cmd_desc	cmdio.h	/^} cmd_desc;$/;"	t	typeref:struct:__anonce146d470108
cmd_do_fixups	sup.a86	/^cmd_do_fixups:				; CODE XREF: cmd_alloc_mem+22Aj$/;"	l
cmd_find	sup.a86	/^cmd_find:				; CODE XREF: chain_find+15j$/;"	l
cmd_find_cseg	sup.a86	/^cmd_find_cseg:				; CODE XREF: bdos:0B96j$/;"	l
cmd_find_dseg	sup.a86	/^cmd_find_dseg:				; CODE XREF: bdos:0B84j$/;"	l
cmd_findflag	sup.a86	/^cmd_findflag	db 0			; DATA XREF: rsx_find+3w rsx_find+2Ar$/;"	d
cmd_findnext	sup.a86	/^cmd_findnext:				; CODE XREF: rsx_find+2Fj$/;"	l
cmd_fixups0	sup.a86	/^cmd_fixups0	dw 0			; DATA XREF: cmd_alloc_mem+29w$/;"	d
cmd_fixups1	sup.a86	/^cmd_fixups1	dw 0			; DATA XREF: cmd_alloc_mem+2Cw$/;"	d
cmd_fixups2	sup.a86	/^cmd_fixups2	dw 0$/;"	d
cmd_fixups_load	sup.a86	/^cmd_fixups_load:			; CODE XREF: cmd_alloc_mem+1E8j$/;"	l
cmd_fixups_loop	sup.a86	/^cmd_fixups_loop:			; CODE XREF: cmd_alloc_mem+224j$/;"	l
cmd_flags	sup.a86	/^cmd_flags	db 0			; DATA XREF: cmd_alloc_mem+23w$/;"	d
cmd_gothead	sup.a86	/^cmd_gothead:				; CODE XREF: P_LOAD+31j$/;"	l
cmd_group	sup.a86	/^cmd_group:				; CODE XREF: cmd_alloc_mem+C6j$/;"	l
cmd_group_fixed	sup.a86	/^cmd_group_fixed:			; CODE XREF: cmd_alloc_mem+74j$/;"	l
cmd_group_next	sup.a86	/^cmd_group_next:				; CODE XREF: cmd_alloc_mem+95j$/;"	l
cmd_grp_nofree	sup.a86	/^cmd_grp_nofree:				; CODE XREF: cmd_alloc_mem+115j$/;"	l
cmd_grp_nosize	sup.a86	/^cmd_grp_nosize:	add	bx, 0Ch$/;"	l
cmd_grps_free	sup.a86	/^cmd_grps_free:				; CODE XREF: cmd_alloc_mem+12Aj$/;"	l
cmd_grps_size	sup.a86	/^cmd_grps_size:	cmp	byte ptr 4[bx], 0FFh$/;"	l
cmd_grps_sofar	sup.a86	/^cmd_grps_sofar	dw 0			; DATA XREF: cmd_alloc_mem+11w$/;"	d
cmd_handle_grp	sup.a86	/^cmd_handle_grp:				; CODE XREF: cmd_alloc_mem+3Dj$/;"	l
cmd_have_cseg	sup.a86	/^cmd_have_cseg:				; CODE XREF: bdos:0B91j$/;"	l
cmd_have_dseg	sup.a86	/^cmd_have_dseg:				; CODE XREF: bdos:0B7Fj$/;"	l
cmd_header	exe2cmd.c	/^unsigned char cmd_header[0x80];$/;"	v	typeref:typename:unsigned char[0x80]
cmd_header	sup.a86	/^cmd_header	rb 80h				; DATA XREF: cmd_alloc_mem+1Do$/;"	l
cmd_is_8080	sup.a86	/^cmd_is_8080	db 0			; DATA XREF: cmd_alloc_mem+17w$/;"	d
cmd_load_image	sup.a86	/^cmd_load_image:				; CODE XREF: cmd_alloc_mem+DEj$/;"	l
cmd_load_info	sup.a86	/^cmd_load_info	rb 61h			; DATA XREF: cmd_alloc_mem+1Ao$/;"	l
cmd_loadgroup	sup.a86	/^cmd_loadgroup:				; CODE XREF: cmd_alloc_mem+1D9j$/;"	l
cmd_mcb_extra	sup.a86	/^cmd_mcb_extra	db 0			; DATA XREF: cmd_alloc_mem+E8w$/;"	d
cmd_mcb_len	sup.a86	/^cmd_mcb_len	dw 0			; DATA XREF: cmd_alloc_mem+76w$/;"	d
cmd_mcb_seg	sup.a86	/^cmd_mcb_seg	dw 0			; DATA XREF: P_LOAD+E5o load_rsx+3Fr$/;"	d
cmd_min_memory	sup.a86	/^cmd_min_memory	dw 0			; DATA XREF: cmd_alloc_mem+85w$/;"	d
cmd_mk_zeropage	sup.a86	/^cmd_mk_zeropage:			; CODE XREF: bdos:0BFBj$/;"	l
cmd_mkz_not8080	sup.a86	/^cmd_mkz_not8080:			; CODE XREF: bdos:0C02j$/;"	l
cmd_mkz_skip1	sup.a86	/^cmd_mkz_skip1:				; CODE XREF: bdos:0BD8j$/;"	l
cmd_mkz_skipgrp	sup.a86	/^cmd_mkz_skipgrp:			; CODE XREF: bdos:0BC5j$/;"	l
cmd_nextgroup	sup.a86	/^cmd_nextgroup:				; CODE XREF: cmd_alloc_mem+1C2j$/;"	l
cmd_ngroups	sup.a86	/^cmd_ngroups	db 0			; DATA XREF: cmd_alloc_mem+14w$/;"	d
cmd_nofixups	sup.a86	/^cmd_nofixups:				; CODE XREF: cmd_alloc_mem+1E0j$/;"	l
cmd_nomaxsize	sup.a86	/^cmd_nomaxsize:				; CODE XREF: cmd_alloc_mem+69j$/;"	l
cmd_notdefault	sup.a86	/^cmd_notdefault:				; CODE XREF: rsx_find+1Fj$/;"	l
cmd_notfound	sup.a86	/^cmd_notfound:				; CODE XREF: rsx_find+19j rsx_find+50j$/;"	l
cmd_notmin_1	sup.a86	/^cmd_notmin_1:				; CODE XREF: cmd_alloc_mem+DCj$/;"	l
cmd_notmin_10	sup.a86	/^cmd_notmin_10:				; CODE XREF: cmd_alloc_mem+170j$/;"	l
cmd_notmin_2	sup.a86	/^cmd_notmin_2:				; CODE XREF: cmd_alloc_mem+E6j$/;"	l
cmd_notmin_3	sup.a86	/^cmd_notmin_3:				; CODE XREF: cmd_alloc_mem+106j$/;"	l
cmd_notmin_4	sup.a86	/^cmd_notmin_4:				; CODE XREF: cmd_alloc_mem+164j$/;"	l
cmd_notmin_5	sup.a86	/^cmd_notmin_5:				; CODE XREF: cmd_alloc_mem+145j$/;"	l
cmd_notmin_6	sup.a86	/^cmd_notmin_6:				; CODE XREF: cmd_alloc_mem+1B0j$/;"	l
cmd_notmin_7	sup.a86	/^cmd_notmin_7:				; CODE XREF: cmd_alloc_mem+18Cj$/;"	l
cmd_notmin_8	sup.a86	/^cmd_notmin_8:				; CODE XREF: cmd_alloc_mem+197j$/;"	l
cmd_notmin_9	sup.a86	/^cmd_notmin_9:				; CODE XREF: cmd_alloc_mem+17Cj$/;"	l
cmd_notscode	sup.a86	/^cmd_notscode:				; CODE XREF: cmd_alloc_mem+46j$/;"	l
cmd_notthere	sup.a86	/^cmd_notthere:				; CODE XREF: rsx_find+49j$/;"	l
cmd_randread	sup.a86	/^cmd_randread:		; CODE XREF: P_LOAD+77p group_load+98p$/;"	l
cmd_randread_0	sup.a86	/^cmd_randread_0:				; CODE XREF: cmd_randread+61j$/;"	l
cmd_randread_1	sup.a86	/^cmd_randread_1:				; CODE XREF: cmd_randread+10j$/;"	l
cmd_randread_in	sup.a86	/^cmd_randread_in:			; CODE XREF: cmd_randread+37j$/;"	l
cmd_randread_nx	sup.a86	/^cmd_randread_nx:			; CODE XREF: cmd_randread+58j$/;"	l
cmd_result	sup.a86	/^cmd_result	dw 0					; ...$/;"	d
cmd_setprocname	sup.a86	/^cmd_setprocname:		; CODE XREF: P_CHAIN+8Ap Callback_103+5Ap$/;"	l
cmd_tryopen	sup.a86	/^cmd_tryopen:				; CODE XREF: rsx_find+10j rsx_find+28j$/;"	l
cmd_trypath	sup.a86	/^cmd_trypath:				; CODE XREF: rsx_find+57j$/;"	l
cmd_trypath2	sup.a86	/^cmd_trypath2:				; CODE XREF: rsx_find+Bj$/;"	l
cmd_zeropage	sup.a86	/^cmd_zeropage	dw 0			; DATA XREF: bdos:0BA6w bdos:0C18r$/;"	d
cmdline_end	sup.a86	/^cmdline_end:				; CODE XREF: P_CHAIN+F4j$/;"	l
cmdline_notlow	sup.a86	/^cmdline_notlow:				; CODE XREF: P_CHAIN+F8j P_CHAIN+FCj$/;"	l
cmdline_toupper	sup.a86	/^cmdline_toupper:			; CODE XREF: P_CHAIN+103j$/;"	l
cmp	bdos.a86	/^		cmp	dl, '$'$/;"	d
cmp	bdos.a86	/^		cmp	dl, 80h$/;"	d
cmp	bdos.a86	/^		cmp	dx, 0FFFFh$/;"	d
cmp	bdos.a86	/^		cmp	dx, 30[bx]$/;"	d
cmp	bdos.a86	/^		cmp	dx, 30[si]$/;"	d
cmp	bdos.a86	/^		cmp	dx, [bx]$/;"	d
cmp	bdos.a86	/^		cmp	dx, dname_cluster$/;"	d
cmp	bdos.a86	/^		cmp	dx, dpb_dsm$/;"	d
cmp	cio.a86	/^		cmp	di, buffer_curpos$/;"	d
cmp	cio.a86	/^		cmp	di, buffer_end1$/;"	d
cmp	cio.a86	/^		cmp	di, si$/;"	d
cmp	loader.a86	/^	cmp	dl,		0		; if machine type is Xi$/;"	d
cmp	loader.a86	/^	cmp	dx,		2[bx]$/;"	d
cmp	mem.a86	/^		cmp	di, ax$/;"	d
cmp	mem.a86	/^		cmp	dx, 1$/;"	d
cmp	mem.a86	/^		cmp	dx, [di]	; Block	start matches?$/;"	d
cmp	mem.a86	/^		cmp	dx, ax		; Suitable candidate?$/;"	d
cmp	mem.a86	/^		cmp	dx, ax$/;"	d
cmp	mem.a86	/^		cmp	dx, mcb_len_min	; Can we at least get the minimum?$/;"	d
cmp	misc.a86	/^		cmp	dl, 81h$/;"	d
cmp	rtm.a86	/^		cmp	dl, 1$/;"	d
cmp	rtm.a86	/^		cmp	dl, xios_bh_lastflg$/;"	d
cmp	sup.a86	/^		cmp	di, offset temp_drive$/;"	d
cmp	sup.a86	/^		cmp	dx, 10[bx]$/;"	d
cmp$pw	bdos.a86	/^cmp$pw:		; CODE XREF: chk_xfcb_passwd+4p$/;"	l
cmp$pw1	bdos.a86	/^cmp$pw1:				; CODE XREF: cmp$pw+15j cmp$pw+19j$/;"	l
cmp$pw2	bdos.a86	/^cmp$pw2:				; CODE XREF: cmp$pw+5j$/;"	l
cmp$pw3	bdos.a86	/^cmp$pw3:				; CODE XREF: cmp$pw+31j$/;"	l
cmp$pw5	bdos.a86	/^cmp$pw5:				; CODE XREF: cmp$pw+2Cj$/;"	l
command_fcb	sup.a86	/^command_fcb	rb 23h			; DATA XREF: chain_find+12o$/;"	l
command_gettail	sup.a86	/^command_gettail:		; CODE XREF: P_CHAIN+22p$/;"	l
command_pfcb	sup.a86	/^command_pfcb	dw offset commandline	; DATA XREF: parse_commando$/;"	d
commandline	sup.a86	/^commandline	dw 0			; DATA XREF: command_gettail+5o$/;"	d
common_alloc	mem.a86	/^common_alloc:		; CODE XREF: MC_ABSALLOC+3j$/;"	l
compare	bdos.a86	/^compare:		; CODE XREF: discard$data+Cp$/;"	l
compare_recno	bdos.a86	/^compare_recno:		; CODE XREF: F_SIZE+22p F_TRUNCATE+34p$/;"	l
compcdr	bdos.a86	/^compcdr:		; CODE XREF: setcdrp searchn+20p$/;"	l
compext	bdos.a86	/^compext:		; CODE XREF: bdos:3702p open$reel+Fp$/;"	l
compute$cs	bdos.a86	/^compute$cs:		; CODE XREF: r$dir+49p$/;"	l
compute$cs0	bdos.a86	/^compute$cs0:				; CODE XREF: compute$cs+14j$/;"	l
console_process	cio.a86	/^console_process	dw 0			; DATA XREF: cio_keyboard+1r$/;"	d
const_noqueue	cio.a86	/^const_noqueue:		; CODE XREF: bdos_chk_conin+1Cj$/;"	l
copy$alv	bdos.a86	/^copy$alv:		; CODE XREF: cpm_login+52j$/;"	l
copy$dir	bdos.a86	/^copy$dir:		; CODE XREF: bdos:47ECp$/;"	l
copy$dir$loc	bdos.a86	/^copy$dir$loc:				; CODE XREF: delete10+2j bdos:47FCj$/;"	l
copy$dir0	bdos.a86	/^copy$dir0:		; CODE XREF: make+59p$/;"	l
copy$dir1	bdos.a86	/^copy$dir1:				; CODE XREF: copy$dir0+1Bj$/;"	l
copy$dir1a	bdos.a86	/^copy$dir1a:				; CODE XREF: copy$dir0+7j$/;"	l
copy$dir2	bdos.a86	/^copy$dir2:		; CODE XREF: copy$dir0p F_ATTRIB+27p$/;"	l
copy$user$no	bdos.a86	/^copy$user$no:		; CODE XREF: bdos:47A8p bdos:47D9p$/;"	l
copy8fromdma	bdos.a86	/^copy8fromdma:		; CODE XREF: F_OPENp F_DELETEp$/;"	l
copy_fcb	bdos.a86	/^copy_fcb:				; CODE XREF: copy_fcb_33+2j$/;"	l
copy_fcb_33	bdos.a86	/^copy_fcb_33:		; CODE XREF: bdos_switch+86p$/;"	l
copy_fcb_36	bdos.a86	/^copy_fcb_36:		; CODE XREF: bdos_switch+90p$/;"	l
copy_proc	sup.a86	/^copy_proc:				; CODE XREF: Callback_103+27j$/;"	l
copy_to_history	cio.a86	/^copy_to_history:		; CODE XREF: bdos:1CDCp input_ctlJ+21p$/;"	l
copyfromdma	bdos.a86	/^copyfromdma:		; CODE XREF: F_MAKE+2p	DRV_SETLABEL+2p$/;"	l
country_info	equates.a86	/^country_info	equ	word ptr .1030h		;DOS country info$/;"	d
cp_fcb10_ffff	bdos.a86	/^cp_fcb10_ffff:		; CODE XREF: tst$inv$fcbp close+11p$/;"	l
cp_pbx_ffff	bdos.a86	/^cp_pbx_ffff:				; CODE XREF: cp_fcb10_ffff+3j$/;"	l
cpl_no8087	sup.a86	/^cpl_no8087:				; CODE XREF: call_p_load+7j$/;"	l
cpm_74a	bdos.a86	/^cpm_74a:				; CODE XREF: F_BDOS_74+2Dj$/;"	l
cpm_74b	bdos.a86	/^cpm_74b:				; CODE XREF: F_BDOS_74+26j$/;"	l
cpm_bdos_74	bdos.a86	/^cpm_bdos_74:				; CODE XREF: F_BDOS_74+Ej$/;"	l
cpm_close	bdos.a86	/^cpm_close:				; CODE XREF: F_CLOSE+16j$/;"	l
cpm_closefile	bdos.a86	/^cpm_closefile:				; CODE XREF: F_CLOSE+20j$/;"	l
cpm_delete	bdos.a86	/^cpm_delete:		; CODE XREF: F_DELETE+1Bj$/;"	l
cpm_getlabel	bdos.a86	/^cpm_getlabel:				; CODE XREF: DRV_GETLABEL+8j$/;"	l
cpm_getrdonly	bdos.a86	/^cpm_getrdonly:		; CODE XREF: check$rodir+3p$/;"	l
cpm_login	bdos.a86	/^cpm_login:		; CODE XREF: curselect+15p$/;"	l
cpm_loginfixed	bdos.a86	/^cpm_loginfixed:				; CODE XREF: cpm_login+6j$/;"	l
cpm_lrufind	bdos.a86	/^cpm_lrufind:				; CODE XREF: lru_ckdirty+5j$/;"	l
cpm_make	bdos.a86	/^cpm_make:				; CODE XREF: F_MAKE+1Ej$/;"	l
cpm_make0	bdos.a86	/^cpm_make0:				; CODE XREF: make+5j$/;"	l
cpm_makefile	bdos.a86	/^cpm_makefile:				; CODE XREF: F_MAKE+28j$/;"	l
cpm_open	bdos.a86	/^cpm_open:				; CODE XREF: F_OPEN+Bj$/;"	l
cpm_opendir	bdos.a86	/^cpm_opendir:		; CODE XREF: F_OPEN+17p$/;"	l
cpm_openfile	bdos.a86	/^cpm_openfile:				; CODE XREF: F_OPEN+15j$/;"	l
cpm_readrand	bdos.a86	/^cpm_readrand:				; CODE XREF: F_READRAND+8j$/;"	l
cpm_readrec	bdos.a86	/^cpm_readrec:				; CODE XREF: F_READ+Fj	F_READRAND+16j$/;"	l
cpm_rename	bdos.a86	/^cpm_rename:				; CODE XREF: bdos:4798j$/;"	l
cpm_rename1	bdos.a86	/^cpm_rename1:				; CODE XREF: bdos:47A0j$/;"	l
cpm_rename2	bdos.a86	/^cpm_rename2:				; CODE XREF: bdos:47C0j$/;"	l
cpm_rename3	bdos.a86	/^cpm_rename3:				; CODE XREF: bdos:47D4j$/;"	l
cpm_rename4	bdos.a86	/^cpm_rename4:				; CODE XREF: bdos:47E2j$/;"	l
cpm_rename_5	bdos.a86	/^cpm_rename_5:				; CODE XREF: bdos:47FAj$/;"	l
cpm_rwrand	bdos.a86	/^cpm_rwrand:		; CODE XREF: F_READRAND+11p$/;"	l
cpm_setlabel	bdos.a86	/^cpm_setlabel:				; CODE XREF: DRV_SETLABEL+Dj$/;"	l
cpm_size	bdos.a86	/^cpm_size:				; CODE XREF: F_SIZE+5j$/;"	l
cpm_size_loop	bdos.a86	/^cpm_size_loop:				; CODE XREF: F_SIZE+34j$/;"	l
cpm_size_next	bdos.a86	/^cpm_size_next:				; CODE XREF: F_SIZE+25j$/;"	l
cpm_size_notfnd	bdos.a86	/^cpm_size_notfnd:			; CODE XREF: F_SIZE+17j$/;"	l
cpm_space	bdos.a86	/^cpm_space:				; CODE XREF: DRV_SPACE+8j$/;"	l
cpm_space_ckbit	bdos.a86	/^cpm_space_ckbit:			; CODE XREF: DRV_SPACE+1Dj$/;"	l
cpm_space_ctbit	bdos.a86	/^cpm_space_ctbit:			; CODE XREF: DRV_SPACE+20j$/;"	l
cpm_space_loop	bdos.a86	/^cpm_space_loop:				; CODE XREF: DRV_SPACE+23j$/;"	l
cpm_space_next	bdos.a86	/^cpm_space_next:				; CODE XREF: DRV_SPACE+19j$/;"	l
cpm_timedate	bdos.a86	/^cpm_timedate:				; CODE XREF: F_TIMEDATE+Bj$/;"	l
cpm_timedate1	bdos.a86	/^cpm_timedate1:				; CODE XREF: F_TIMEDATE+1Cj$/;"	l
cpm_timedate2	bdos.a86	/^cpm_timedate2:				; CODE XREF: F_TIMEDATE+36j$/;"	l
cpm_truncate	bdos.a86	/^cpm_truncate:				; CODE XREF: F_TRUNCATE+Ej$/;"	l
cpm_truncate0	bdos.a86	/^cpm_truncate0:				; CODE XREF: F_TRUNCATE+16j$/;"	l
cpm_truncate1	bdos.a86	/^cpm_truncate1:				; CODE XREF: F_TRUNCATE+37j$/;"	l
cpm_truncate2	bdos.a86	/^cpm_truncate2:				; CODE XREF: F_TRUNCATE+23j$/;"	l
cpm_truncate3	bdos.a86	/^cpm_truncate3:				; CODE XREF: F_TRUNCATE+88j$/;"	l
cpm_truncate4	bdos.a86	/^cpm_truncate4:				; CODE XREF: F_TRUNCATE+57j$/;"	l
cpm_truncate5	bdos.a86	/^cpm_truncate5:				; CODE XREF: F_TRUNCATE+66j$/;"	l
cpm_writerec	bdos.a86	/^cpm_writerec:		; CODE XREF: F_WRITE+Fj F_WRITERAND+16j$/;"	l
cpm_writezf	bdos.a86	/^cpm_writezf:				; CODE XREF: F_WRITEZF+8j$/;"	l
cpm_wrxfcb	bdos.a86	/^cpm_wrxfcb:				; CODE XREF: F_WRITEXFCB+Dj$/;"	l
cpmcodeseg	cpm3.equ	/^cpmcodeseg	equ	.0003h$/;"	d
cpmcodesize	cpm3.equ	/^cpmcodesize	equ	.0001h$/;"	d
cpmdataseg	cpm3.equ	/^cpmdataseg	equ	.000Ch$/;"	d
cpmdatasize	cpm3.equ	/^cpmdatasize	equ	.000Ah$/;"	d
cpu_vectors	entry.a86	/^cpu_vectors	rw 12$/;"	l
crwr_1	bdos.a86	/^crwr_1:					; CODE XREF: cpm_rwrand+Bj$/;"	l
cs	cmdio.h	/^	byte *cs;$/;"	m	struct:__anonce146d470108	typeref:typename:byte *
cs_base	cmdio.h	/^	word cs_base;$/;"	m	struct:__anonce146d470108	typeref:typename:word
cs_len	cmdio.h	/^	dword cs_len;$/;"	m	struct:__anonce146d470108	typeref:typename:dword
cs_max	cmdio.h	/^	dword cs_max;$/;"	m	struct:__anonce146d470108	typeref:typename:dword
csearch	bdos.a86	/^csearch:				; CODE XREF: bdos:464Aj$/;"	l
csearch1	bdos.a86	/^csearch1:				; CODE XREF: F_SFIRST+14j$/;"	l
csearch3	bdos.a86	/^csearch3:				; CODE XREF: F_SFIRST+1Ej F_SFIRST+2Bj$/;"	l
cstat_ret	cio.a86	/^cstat_ret:				; CODE XREF: C_STAT+8j	C_STAT+10j$/;"	l
cth_done	cio.a86	/^cth_done:				; CODE XREF: copy_to_history+Bj$/;"	l
ctla_atstart	cio.a86	/^ctla_atstart:				; CODE XREF: input_ctlA+8j$/;"	l
ctla_repaint	cio.a86	/^ctla_repaint:				; CODE XREF: input_ctlA+40j$/;"	l
ctla_repainted	cio.a86	/^ctla_repainted:				; CODE XREF: input_ctlA+35j$/;"	l
ctlb_0	cio.a86	/^ctlb_0:					; CODE XREF: bdos:1C0Ej$/;"	l
ctlb_1	cio.a86	/^ctlb_1:					; CODE XREF: bdos:1C00j$/;"	l
ctlf_atend	cio.a86	/^ctlf_atend:				; CODE XREF: bdos:1C41j bdos:1C4Aj$/;"	l
ctlg_at_end	cio.a86	/^ctlg_at_end:				; CODE XREF: input_ctlG+7j$/;"	l
ctlh_atstart	cio.a86	/^ctlh_atstart:				; CODE XREF: input_ctlH+7j$/;"	l
ctlj_copied	cio.a86	/^ctlj_copied:				; CODE XREF: input_ctlJ+Ej$/;"	l
ctlj_copyout	cio.a86	/^ctlj_copyout:				; CODE XREF: input_ctlJ+1Fj$/;"	l
ctlw_copy	cio.a86	/^ctlw_copy:				; CODE XREF: bdos:1D12j$/;"	l
ctlw_end	cio.a86	/^ctlw_end:				; CODE XREF: bdos:1D03j$/;"	l
ctlw_not_blank	cio.a86	/^ctlw_not_blank:				; CODE XREF: bdos:1CF2j bdos:1CF8j$/;"	l
ctlw_redraw	cio.a86	/^ctlw_redraw:				; CODE XREF: bdos:1D09j$/;"	l
ctlx_end	cio.a86	/^ctlx_end:				; CODE XREF: bdos:1D2Fj$/;"	l
cts_nextproc	rtm.a86	/^cts_nextproc:				; CODE XREF: check_timeslice+14j$/;"	l
cts_process	rtm.a86	/^cts_process:				; CODE XREF: check_timeslice+39j$/;"	l
cur_dma	sup.a86	/^cur_dma		dw 0,0			; DATA XREF: get_proc_dskdat+20w$/;"	d
cur_drive	sup.a86	/^cur_drive	dw 0			; DATA XREF: get_proc_dskdat+12w$/;"	d
cur_drvdir	bdos.a86	/^cur_drvdir	dw 0			; DATA XREF: read$subdirr rd$parentdir+6r$/;"	d
cur_errmode	sup.a86	/^cur_errmode	db 0			; DATA XREF: get_proc_dskdat+19w$/;"	d
cur_fcb_len	bdos.a86	/^cur_fcb_len	db 0			; DATA XREF: funcs_F_main+ADr$/;"	d
cur_x	entry.a86	/^cur_x		db 0			; DATA XREF: bdos_char_out+44r$/;"	d
curbcba	bdos.a86	/^curbcba		dw 0			; DATA XREF: get$bcba+53w get$bcba+5Fr$/;"	d
curdsk	bdos.a86	/^curdsk		db 0FFh			; DATA XREF: xios_rdwr+8r sel$errorw$/;"	d
curselect	bdos.a86	/^curselect:		; CODE XREF: tst$relog+Ap drv$relogp$/;"	l
curselect0	bdos.a86	/^curselect0:				; CODE XREF: cwd_for_drive+1Cj$/;"	l
curselect01	bdos.a86	/^curselect01:				; CODE XREF: curselect+13j$/;"	l
curselect02	bdos.a86	/^curselect02:				; CODE XREF: curselect+18j$/;"	l
curselect03	bdos.a86	/^curselect03:				; CODE XREF: curselect+35j$/;"	l
curselect_dir	bdos.a86	/^curselect_dir:		; CODE XREF: reselect+3Dp F_SFIRST+16p$/;"	l
curselect_dir1	bdos.a86	/^curselect_dir1:				; CODE XREF: curselect_dir+5j$/;"	l
cwd_for_drive	bdos.a86	/^cwd_for_drive:		; CODE XREF: ret_drv_vector+11p$/;"	l
cwd_found	bdos.a86	/^cwd_found:				; CODE XREF: cwd_for_drive+18j$/;"	l
cwdfd_ret	bdos.a86	/^cwdfd_ret:				; CODE XREF: cwd_for_drive+24j$/;"	l
d_notchanged	bdos.a86	/^d_notchanged:				; CODE XREF: check_changed+3j$/;"	l
dad_finish	cio.a86	/^dad_finish:				; CODE XREF: delete_at_di+2j$/;"	l
date_days	entry.a86	/^date_days	dw 0A22h			; DATA XREF: bdos:23B2o bdos:2540o$/;"	d
date_hours	entry.a86	/^date_hours	db 12h			; DATA XREF: xios_hook_timer+85w$/;"	d
date_mins	entry.a86	/^date_mins	db 0			; DATA XREF: xios_hook_timer+7Dw$/;"	d
date_secs	entry.a86	/^date_secs	db 0			; DATA XREF: bdos:2551w bdos:2566r$/;"	d
dcnt	bdos.a86	/^dcnt		dw 0			; DATA XREF: end$of$diro set$end$dirw$/;"	d
dda_allgone	bdos.a86	/^dda_allgone:				; CODE XREF: dirdata_alloc+7j$/;"	l
ddta_1	bdos.a86	/^ddta_1:					; CODE XREF: fat_rdwr_ckd+1Dj$/;"	l
ddta_2	bdos.a86	/^ddta_2:					; CODE XREF: bdos:2EF6j$/;"	l
deblock	bdos.a86	/^deblock:		; CODE XREF: bdos:3207p$/;"	l
deblock$dta	bdos.a86	/^deblock$dta:				; CODE XREF: bdos:2EFEj bdos:2F03p$/;"	l
deblock$flush	bdos.a86	/^deblock$flush:				; CODE XREF: deblock+74j$/;"	l
deblock$flush1	bdos.a86	/^deblock$flush1:				; CODE XREF: deblock+55j$/;"	l
deblock$flush2	bdos.a86	/^deblock$flush2:				; CODE XREF: deblock+2Fj deblock+35j$/;"	l
deblock$flush3	bdos.a86	/^deblock$flush3:				; CODE XREF: deblock+5Cj$/;"	l
deblock$io	bdos.a86	/^deblock$io:		; CODE XREF: deblock+F6p deblock+125p$/;"	l
deblock15	bdos.a86	/^deblock15:				; CODE XREF: deblock+CEj$/;"	l
deblock15a	bdos.a86	/^deblock15a:				; CODE XREF: deblock+EDj$/;"	l
deblock15b	bdos.a86	/^deblock15b:				; CODE XREF: deblock+F4j$/;"	l
deblock1a	bdos.a86	/^deblock1a:				; CODE XREF: deblock+Bj deblock+11j$/;"	l
deblock1b	bdos.a86	/^deblock1b:				; CODE XREF: deblock+8Ej$/;"	l
deblock1c	bdos.a86	/^deblock1c:				; CODE XREF: deblock+9Fj$/;"	l
deblock1d	bdos.a86	/^deblock1d:				; CODE XREF: deblock+AEj$/;"	l
deblock1e	bdos.a86	/^deblock1e:				; CODE XREF: deblock+C5j$/;"	l
deblock2	bdos.a86	/^deblock2:				; CODE XREF: deblock+C1j deblock+D4j$/;"	l
deblock25	bdos.a86	/^deblock25:				; CODE XREF: deblock+B9j deblock+118j$/;"	l
deblock2a	bdos.a86	/^deblock2a:				; CODE XREF: deblock+113j$/;"	l
deblock2b	bdos.a86	/^deblock2b:				; CODE XREF: deblock+CAj$/;"	l
deblock4	bdos.a86	/^deblock4:				; CODE XREF: deblock+128j$/;"	l
deblock45	bdos.a86	/^deblock45:				; CODE XREF: deblock+12Cj deblock+137j$/;"	l
deblock6	bdos.a86	/^deblock6:				; CODE XREF: deblock+161j$/;"	l
deblock7	bdos.a86	/^deblock7:				; CODE XREF: deblock+17Aj$/;"	l
deblock_command	bdos.a86	/^deblock_command	db 0			; DATA XREF: deblock+76w deblock+A9r$/;"	d
deblock_flag	bdos.a86	/^deblock_flag	db 0			; DATA XREF: cpm_writerec+92w$/;"	d
dec	bdos.a86	/^		dec	dh$/;"	d
dec	bdos.a86	/^		dec	di$/;"	d
dec	bdos.a86	/^		dec	dl		; DL=0 if all blocks are 0 in fcb$/;"	d
dec	bdos.a86	/^		dec	dl$/;"	d
dec	bdos.a86	/^		dec	dx$/;"	d
dec	cio.a86	/^		dec	di$/;"	d
dec	cio.a86	/^		dec	dx$/;"	d
dec	mem.a86	/^		dec	dx		; Who owns the para before the memory$/;"	d
dec	misc.a86	/^		dec	dx$/;"	d
del_and_echo	cio.a86	/^del_and_echo:				; CODE XREF: input_ctlH+Ej$/;"	l
del_atstart	cio.a86	/^del_atstart:				; CODE XREF: input_delete+7j$/;"	l
delay_cbk	rtm.a86	/^delay_cbk:				; DATA XREF: delay_dispatcho$/;"	l
delay_dispatch	rtm.a86	/^delay_dispatch:		; CODE XREF: P_WAITFLAG+20p$/;"	l
delay_haveclock	rtm.a86	/^delay_haveclock:			; CODE XREF: P_DELAY+5j$/;"	l
delete00	bdos.a86	/^delete00:				; CODE XREF: cpm_delete+45j$/;"	l
delete00a	bdos.a86	/^delete00a:				; CODE XREF: cpm_delete+1Bj$/;"	l
delete01	bdos.a86	/^delete01:				; CODE XREF: cpm_delete+14j$/;"	l
delete02	bdos.a86	/^delete02:				; CODE XREF: cpm_delete+25j$/;"	l
delete10	bdos.a86	/^delete10:		; CODE XREF: delete11+31j F_MAKE+ABp$/;"	l
delete11	bdos.a86	/^delete11:		; CODE XREF: cpm_delete+2Fj$/;"	l
delete12	bdos.a86	/^delete12:				; CODE XREF: delete11+7j$/;"	l
delete13	bdos.a86	/^delete13:				; CODE XREF: delete11+Ej$/;"	l
delete13a	bdos.a86	/^delete13a:				; CODE XREF: delete11+19j$/;"	l
delete13b	bdos.a86	/^delete13b:				; CODE XREF: delete11+24j$/;"	l
delete_at_di	cio.a86	/^delete_at_di:		; CODE XREF: delete_at_di+13j$/;"	l
deletex	bdos.a86	/^deletex:				; CODE XREF: cpm_delete+40j$/;"	l
destr_backspace	cio.a86	/^destr_backspace:			; CODE XREF: input_delete+Ej$/;"	l
detach2	sup.a86	/^detach2:				; CODE XREF: Callback_103+64j$/;"	l
detach_fail	cio.a86	/^detach_fail:				; CODE XREF: C_DETACH+8j$/;"	l
df$password	bdos.a86	/^df$password	rb 8			; DATA XREF: cmp$pw+36o F_PASSWD+Fo$/;"	l
diocomp	bdos.a86	/^diocomp:				; CODE XREF: DRV_FLUSH+Cp call_xios_flush+5p$/;"	l
diocomp1	bdos.a86	/^diocomp1:				; CODE XREF: wrbuff+7j	write_FAT+3Fj$/;"	l
diocomp2	bdos.a86	/^diocomp2:				; CODE XREF: rdbuff+9j$/;"	l
diocomp9	bdos.a86	/^diocomp9:				; CODE XREF: rdbuff+54j$/;"	l
diocomp_chg	bdos.a86	/^diocomp_chg:				; CODE XREF: rdbuff+15j$/;"	l
diocomp_nochang	bdos.a86	/^diocomp_nochang:			; CODE XREF: rdbuff+1Ej rdbuff+26j$/;"	l
diocomp_notrelg	bdos.a86	/^diocomp_notrelg:			; CODE XREF: rdbuff+42j$/;"	l
dir$cnt	bdos.a86	/^dir$cnt		db 0			; DATA XREF: check$nprs+4r$/;"	d
dir_check_flag	bdos.a86	/^dir_check_flag	db 0			; DATA XREF: deblock+B2w rd$subdir1+50r$/;"	d
dir_entries	bdos.a86	/^dir_entries	dw 0			; DATA XREF: is_dir_empty+13w$/;"	d
dir_next_record	bdos.a86	/^dir_next_record:			; CODE XREF: is_dir_empty+44j$/;"	l
dir_record	bdos.a86	/^dir_record	dw 0			; DATA XREF: is_dir_empty+Cw$/;"	d
dirdata_0	bdos.a86	/^dirdata_0	dw offset dirdata_1	; DATA XREF: dseg:0194o$/;"	d
dirdata_1	bdos.a86	/^dirdata_1	dw offset dirdata_2	; DATA XREF: dseg:087Fo$/;"	d
dirdata_2	bdos.a86	/^dirdata_2	dw offset dirdata_3	; DATA XREF: dseg:0889o$/;"	d
dirdata_3	bdos.a86	/^dirdata_3	dw offset dirdata_4	; DATA XREF: dseg:0893o$/;"	d
dirdata_4	bdos.a86	/^dirdata_4	dw 0$/;"	d
dirdata_alloc	bdos.a86	/^dirdata_alloc:		; CODE XREF: cpm_opendir+E5p$/;"	l
dirent_blank	bdos.a86	/^dirent_blank:				; CODE XREF: is_dir_empty+49j$/;"	l
dirent_used	bdos.a86	/^dirent_used:				; CODE XREF: is_dir_empty+4Dj$/;"	l
dirloc	bdos.a86	/^dirloc		db 0			; DATA XREF: bdos:3431r searchi+7w$/;"	d
dirname_0	bdos.a86	/^dirname_0	dw offset dirname_1$/;"	d
dirname_1	bdos.a86	/^dirname_1	dw offset dirname_2	; DATA XREF: dseg:0192o$/;"	d
dirname_2	bdos.a86	/^dirname_2	dw 0			; DATA XREF: dseg:0837o$/;"	d
diropen_dot	bdos.a86	/^diropen_dot:				; CODE XREF: fat_open+1Dj fat_close+12j$/;"	l
disable_user0	bdos.a86	/^disable_user0:				; CODE XREF: bdos:370Dj$/;"	l
discard$both	bdos.a86	/^discard$both:		; CODE XREF: F_BDOS_75+5Cp$/;"	l
discard$data	bdos.a86	/^discard$data:		; CODE XREF: media$change+4p$/;"	l
discard$databcb	bdos.a86	/^discard$databcb:		; CODE XREF: cpm_writerec+C4p$/;"	l
discard$dir	bdos.a86	/^discard$dir:		; CODE XREF: bdos:291Dp cpm_login+19p$/;"	l
disk$select	bdos.a86	/^disk$select:		; CODE XREF: curselect+9p reselect+6Cp$/;"	l
disk$select1	bdos.a86	/^disk$select1:		; CODE XREF: deblock+EFp$/;"	l
disk$select1a	bdos.a86	/^disk$select1a:				; CODE XREF: disk$select1+Fj$/;"	l
disk_error	bdos.a86	/^disk_error:		; CODE XREF: valid_dl_f_fcb+Aj$/;"	l
disk_error_11	bdos.a86	/^disk_error_11:				; CODE XREF: cpm_opendir+A1j$/;"	l
diskerr_not3	bdos.a86	/^diskerr_not3:				; CODE XREF: disk_error+8j$/;"	l
disklabelptr	platform.equ	/^disklabelptr	equ	.040Ah$/;"	d
diskwr1	bdos.a86	/^diskwr1:				; CODE XREF: cpm_writerec+49j$/;"	l
diskwr11	bdos.a86	/^diskwr11:				; CODE XREF: cpm_rwrand+19j$/;"	l
diskwr2	bdos.a86	/^diskwr2:				; CODE XREF: cpm_writerec+11Fj$/;"	l
diskwr_err	bdos.a86	/^diskwr_err:				; CODE XREF: cpm_rwrand+28j$/;"	l
diskwrite3	bdos.a86	/^diskwrite3:				; CODE XREF: cpm_writerec+13Bj$/;"	l
diskwru	bdos.a86	/^diskwru:				; CODE XREF: cpm_writerec+87j$/;"	l
disp_general	rtm.a86	/^disp_general:				; CODE XREF: delay_dispatch+3j$/;"	l
disp_switchproc	rtm.a86	/^disp_switchproc:			; CODE XREF: delay_dispatch+73j$/;"	l
dispatch_cbk	rtm.a86	/^dispatch_cbk:				; DATA XREF: delay_dispatch+5o$/;"	l
dispret	rtm.a86	/^dispret:				; DATA XREF: delay_dispatch+12o$/;"	l
dm$position	bdos.a86	/^dm$position:		; CODE XREF: indexp check$nprs+77p$/;"	l
dminx	bdos.a86	/^dminx		db 0			; DATA XREF: index+3w get$dir$ext+14w$/;"	d
dmset	bdos.a86	/^dmset:					; CODE XREF: close$fcb+3Cj$/;"	l
dn_ref_was_1	bdos.a86	/^dn_ref_was_1:				; CODE XREF: cpm_opendir+91j$/;"	l
dn_released	bdos.a86	/^dn_released:				; CODE XREF: cpm_opendir+8Bj$/;"	l
dname_cluster	bdos.a86	/^dname_cluster	dw 0			; DATA XREF: set$end$dir+6w$/;"	d
do_copy_alv	bdos.a86	/^do_copy_alv:				; CODE XREF: copy$alv+19j$/;"	l
do_detach	cio.a86	/^do_detach:				; CODE XREF: C_DETACH+10j$/;"	l
does$xfcb$exist	bdos.a86	/^does$xfcb$exist:		; CODE XREF: bdos:47D1p bdos:47F7p$/;"	l
dont$write	bdos.a86	/^dont$write:				; CODE XREF: cpm_writerec+E7j$/;"	l
dont$write1	bdos.a86	/^dont$write1:				; CODE XREF: cpm_writerec+F0j$/;"	l
dont_copy_alv	bdos.a86	/^dont_copy_alv:				; CODE XREF: copy$alv+5j$/;"	l
dont_discard	bdos.a86	/^dont_discard:				; CODE XREF: reselect+49j$/;"	l
dont_dispatch	cio.a86	/^dont_dispatch:				; CODE XREF: maybe_dispatch+7j$/;"	l
dont_free_aux	rtm.a86	/^dont_free_aux:				; CODE XREF: kill_process+11j$/;"	l
dont_free_lst	rtm.a86	/^dont_free_lst:				; CODE XREF: kill_process+1Cj$/;"	l
dont_kill	rtm.a86	/^dont_kill:				; CODE XREF: delay_dispatch+62j$/;"	l
dont_mask_mode	cio.a86	/^dont_mask_mode:				; CODE XREF: proc_enter_con+Bj$/;"	l
dont_reset_disk	rtm.a86	/^dont_reset_disk:			; CODE XREF: kill_process+3Dj$/;"	l
dont_set_attrs	bdos.a86	/^dont_set_attrs:				; CODE XREF: F_do_call+30j$/;"	l
dont_set_ifattr	bdos.a86	/^dont_set_ifattr:			; CODE XREF: F_do_call+46j$/;"	l
dont_set_size	bdos.a86	/^dont_set_size:				; CODE XREF: f_attrib_fat+Fj$/;"	l
dos_cmd	dpgen.c	/^cmd_desc dosplus_sys, bdos_cmd, xios_cmd, ccp_cmd, dos_cmd;$/;"	v	typeref:typename:cmd_desc
dos_date_to_cpm	bdos.a86	/^dos_date_to_cpm:		; CODE XREF: fat_to_sfcb+1Ap$/;"	l
dosplus_sys	dpgen.c	/^cmd_desc dosplus_sys, bdos_cmd, xios_cmd, ccp_cmd, dos_cmd;$/;"	v	typeref:typename:cmd_desc
dpb_al0_al1	bdos.a86	/^dpb_al0_al1	dw 0			; DATA XREF: scandm$a+16r cpm_login+25r$/;"	d
dpb_blm	bdos.a86	/^dpb_blm		db 0			; DATA XREF: atran+19r	check$nprs+53r$/;"	d
dpb_bsh	bdos.a86	/^dpb_bsh		db 0			; DATA XREF: atranr dm$positionr$/;"	d
dpb_cks	bdos.a86	/^dpb_cks		dw 0			; DATA XREF: rdbuff+20r r$dir+3Dr$/;"	d
dpb_clusters	bdos.a86	/^dpb_clusters	dw 0			; DATA XREF: rd$subdir1+35r$/;"	d
dpb_clustersize	bdos.a86	/^dpb_clustersize	dw 0			; DATA XREF: rd$subdir1+15r$/;"	d
dpb_drm	bdos.a86	/^dpb_drm		dw 0			; DATA XREF: r$dirr search$hash+1Fr$/;"	d
dpb_dsm	bdos.a86	/^dpb_dsm		dw 0			; DATA XREF: get$nalbsr scandm$a+37r$/;"	d
dpb_exm	bdos.a86	/^dpb_exm		db 0			; DATA XREF: get$dir$ext+2Br$/;"	d
dpb_fatcount	bdos.a86	/^dpb_fatcount	dw 0			; DATA XREF: seek+26r drive_login+43o$/;"	d
dpb_firstfat	bdos.a86	/^dpb_firstfat	dw 0			; DATA XREF: seek+1Er load_fatsr$/;"	d
dpb_off	bdos.a86	/^dpb_off		dw 0			; DATA XREF: seek+3Cr$/;"	d
dpb_phm	bdos.a86	/^dpb_phm		db 0			; DATA XREF: get$bcba+92r lru_ckdirty+29r$/;"	d
dpb_psh	bdos.a86	/^dpb_psh		db 0			; DATA XREF: seek+9r check$nprs+104r$/;"	d
dpb_secperfat	bdos.a86	/^dpb_secperfat	dw 0			; DATA XREF: seek+29r load_fats+16r$/;"	d
dpb_spt	bdos.a86	/^dpb_spt		dw 0			; DATA XREF: seek+32r seek+38r$/;"	d
dph_alv	bdos.a86	/^dph_alv		dw 0			; DATA XREF: getallocbit+Dr$/;"	d
dph_csv	bdos.a86	/^dph_csv		dw 0			; DATA XREF: r$dir+50r$/;"	d
dph_dirbcb	bdos.a86	/^dph_dirbcb	dw 0			; DATA XREF: discard$dirr deblock+4r$/;"	d
dph_dpb	bdos.a86	/^dph_dpb		dw 0			; DATA XREF: drive_login+1Eo$/;"	d
dph_dtabcb	bdos.a86	/^dph_dtabcb	dw 0			; DATA XREF: discard$databcbr$/;"	d
dph_hash	bdos.a86	/^dph_hash	dw 0			; DATA XREF: set$hashr	search$hashr$/;"	d
dptr	bdos.a86	/^dptr		db 0			; DATA XREF: getdptrar	drv$relog+8w$/;"	d
drec	bdos.a86	/^drec		dw 0			; DATA XREF: rd$dir+7w	r$dir+39r$/;"	d
drive_done	sup.a86	/^drive_done:				; CODE XREF: F_PARSE+43j F_PARSE+51j$/;"	l
drive_login	bdos.a86	/^drive_login:		; CODE XREF: disk$select1+Bp$/;"	l
drl	entry.a86	/^drl		dw 0			; DATA XREF: P_0207+5r	P_0209+7o$/;"	d
drl_is_empty	rtm.a86	/^drl_is_empty:				; CODE XREF: delay_dispatch+199j$/;"	l
drv$lbl	bdos.a86	/^drv$lbl:				; CODE XREF: cpm_login+67j$/;"	l
drv$relog	bdos.a86	/^drv$relog:		; CODE XREF: check$media+3Ap$/;"	l
drv_login_ret	bdos.a86	/^drv_login_ret:				; CODE XREF: drive_login+57j$/;"	l
drv_no	loader.a86	/^drv_no	dw	0$/;"	d
ds	cmdio.h	/^	byte *ds;$/;"	m	struct:__anonce146d470108	typeref:typename:byte *
ds_base	cmdio.h	/^	word ds_base;$/;"	m	struct:__anonce146d470108	typeref:typename:word
ds_len	cmdio.h	/^	dword ds_len;$/;"	m	struct:__anonce146d470108	typeref:typename:dword
ds_max	cmdio.h	/^	dword ds_max;$/;"	m	struct:__anonce146d470108	typeref:typename:dword
dskwr11	bdos.a86	/^dskwr11:				; CODE XREF: cpm_writerec+9Ej$/;"	l
dskwrite0	bdos.a86	/^dskwrite0:				; CODE XREF: cpm_writerec+35j$/;"	l
dskwrite2	bdos.a86	/^dskwrite2:				; CODE XREF: cpm_writerec+45j$/;"	l
dsptch	rtm.a86	/^dsptch:					; CODE XREF: delay_dispatch+17j$/;"	l
dsptch_es	rtm.a86	/^dsptch_es	dw 0			; DATA XREF: delay_dispatch+35w$/;"	d
dsptch_stack	rtm.a86	/^dsptch_stack	db 0			; DATA XREF: delay_dispatch+57o$/;"	d
dump_cmd	dpgen.c	/^void dump_cmd(char *caption, cmd_desc *cmd)$/;"	f	typeref:typename:void
dword	cmdio.h	/^typedef unsigned long dword;$/;"	t	typeref:typename:unsigned long
echo_backspaced	entry.a86	/^echo_backspaced	db 0			; DATA XREF: input_ctlH+9r$/;"	d
echo_deleted	entry.a86	/^echo_deleted	db SCR_ECHODEL		; DATA XREF: input_delete+9r$/;"	d
echo_upto_end1	cio.a86	/^echo_upto_end1:		; CODE XREF: echo_upto_end1+1Ej$/;"	l
ed$read	bdos.a86	/^ed$read:	call	end$of$dir$/;"	l
emptybcba	bdos.a86	/^emptybcba	dw 0			; DATA XREF: get$bcba+16w get$bcba+2Br$/;"	d
end$of$dir	bdos.a86	/^end$of$dir:		; CODE XREF: read$subdir+2Bp$/;"	l
endsearch	bdos.a86	/^endsearch:				; CODE XREF: bdos:36D9j$/;"	l
endsearch1	bdos.a86	/^endsearch1:				; CODE XREF: bdos:372Ej$/;"	l
endsearch_ret	bdos.a86	/^endsearch_ret:				; CODE XREF: does$xfcb$exist+5j$/;"	l
entry_bdos	entry.a86	/^entry_bdos:				; DATA XREF: dseg:0010o$/;"	l
entry_init	entry.a86	/^entry_init:	ret		$/;"	l
eod_ret	bdos.a86	/^eod_ret:				; CODE XREF: tst$inv$fcb+3j$/;"	l
errFilename	bdos.a86	/^errFilename	rb 0Ch$/;"	l
err_major	bdos.a86	/^err_major	db 0			; DATA XREF: funcs_F_main+104r$/;"	d
error	bdos.a86	/^error:		; CODE XREF: sel$error+10j$/;"	l
error_drive	bdos.a86	/^error_drive	db 0			; DATA XREF: funcs_F_main+11Fr$/;"	d
error_strings	bdos.a86	/^error_strings	dw 0			; DATA XREF: funcs_F_main+15Do$/;"	d
es_present	sup.a86	/^es_present:				; CODE XREF: Callback_103+19Bj$/;"	l
eue1_end	cio.a86	/^eue1_end:				; CODE XREF: echo_upto_end1+4j$/;"	l
exe_header	exe2cmd.c	/^unsigned char exe_header[0x208];$/;"	v	typeref:typename:unsigned char[0x208]
expand_tabs	cio.a86	/^expand_tabs:		; CODE XREF: input_putchar+3j$/;"	l
ext_istab	cio.a86	/^ext_istab:				; CODE XREF: expand_tabs+3j$/;"	l
ext_ret	cio.a86	/^ext_ret:				; CODE XREF: input_putchar+1Ej$/;"	l
ext_tabbed	cio.a86	/^ext_tabbed:				; CODE XREF: expand_tabs+12j$/;"	l
extent_size	bdos.a86	/^extent_size:		; CODE XREF: F_SIZE+1Fp F_RANDREC+6p$/;"	l
extval	bdos.a86	/^extval		db 0			; DATA XREF: dm$position+Fr$/;"	d
f2sfcb_1	bdos.a86	/^f2sfcb_1:				; CODE XREF: fat_to_sfcb+Fj$/;"	l
f_abort	bdos.a86	/^f_abort:				; CODE XREF: bdos_switch+130j$/;"	l
f_attrib_cpm	bdos.a86	/^f_attrib_cpm:				; CODE XREF: F_ATTRIB+Ej$/;"	l
f_attrib_cpm1	bdos.a86	/^f_attrib_cpm1:				; CODE XREF: F_ATTRIB+16j$/;"	l
f_attrib_cpm2	bdos.a86	/^f_attrib_cpm2:				; CODE XREF: F_ATTRIB+40j$/;"	l
f_attrib_fat	bdos.a86	/^f_attrib_fat:		; CODE XREF: F_ATTRIB+10j$/;"	l
f_attrib_fat1	bdos.a86	/^f_attrib_fat1:				; CODE XREF: f_attrib_fat+5j$/;"	l
f_attrib_fat10	bdos.a86	/^f_attrib_fat10:				; CODE XREF: f_attrib_fat+90j$/;"	l
f_attrib_fat11	bdos.a86	/^f_attrib_fat11:				; CODE XREF: f_attrib_fat+71j$/;"	l
f_attrib_fat12	bdos.a86	/^f_attrib_fat12:				; CODE XREF: f_attrib_fat+55j$/;"	l
f_attrib_fat3	bdos.a86	/^f_attrib_fat3:				; CODE XREF: f_attrib_fat+30j$/;"	l
f_attrib_fat4	bdos.a86	/^f_attrib_fat4:				; CODE XREF: f_attrib_fat+34j$/;"	l
f_attrib_fat6	bdos.a86	/^f_attrib_fat6:				; CODE XREF: f_attrib_fat+61j$/;"	l
f_attrib_fat7	bdos.a86	/^f_attrib_fat7:				; CODE XREF: f_attrib_fat+79j$/;"	l
f_attrib_fat8	bdos.a86	/^f_attrib_fat8:				; CODE XREF: f_attrib_fat+82j$/;"	l
f_attrib_fat9	bdos.a86	/^f_attrib_fat9:				; CODE XREF: f_attrib_fat+6Cj$/;"	l
f_bad_multisec	misc.a86	/^f_bad_multisec:				; CODE XREF: F_MULTISEC+4j$/;"	l
f_close_end	bdos.a86	/^f_close_end:				; CODE XREF: fat_close+50j$/;"	l
f_close_flush	bdos.a86	/^f_close_flush:				; CODE XREF: F_CLOSE+37j$/;"	l
f_filedone	bdos.a86	/^f_filedone:				; CODE XREF: bdos_switch+199j$/;"	l
f_interrupt	bdos.a86	/^f_interrupt:		; CODE XREF: copy$alv+16p delete11+21p$/;"	l
f_make_nop	bdos.a86	/^f_make_nop:		; CODE XREF: F_MAKE+49p$/;"	l
f_make_ret	bdos.a86	/^f_make_ret:				; CODE XREF: F_MAKE+D7j$/;"	l
f_make_ret2	bdos.a86	/^f_make_ret2:				; CODE XREF: F_MAKE+F2j$/;"	l
f_noabort	bdos.a86	/^f_noabort:				; CODE XREF: bdos_switch+132j$/;"	l
f_parse_1	sup.a86	/^f_parse_1:				; CODE XREF: F_PARSE+1Dj$/;"	l
f_parse_2	sup.a86	/^f_parse_2:				; CODE XREF: F_PARSE+ABj$/;"	l
f_parse_fail	sup.a86	/^f_parse_fail:				; CODE XREF: F_PARSE+1Fj F_PARSE+CDj$/;"	l
f_parse_ok	sup.a86	/^f_parse_ok:				; CODE XREF: F_PARSE+C7j F_PARSE+D1j$/;"	l
f_printchar	bdos.a86	/^f_printchar:		; CODE XREF: bdos_switch+17Bp$/;"	l
f_printdec	bdos.a86	/^f_printdec:				; CODE XREF: bdos_switch+176j$/;"	l
f_printfile	bdos.a86	/^f_printfile:				; CODE XREF: bdos_switch+183j$/;"	l
f_printstring	bdos.a86	/^f_printstring:		; CODE XREF: bdos_switch+143p$/;"	l
f_prstr_end	bdos.a86	/^f_prstr_end:				; CODE XREF: f_printstring+7j$/;"	l
f_prstr_loop	bdos.a86	/^f_prstr_loop:				; CODE XREF: f_printstring+Fj$/;"	l
f_ret_1	bdos.a86	/^f_ret_1:		; CODE XREF: open$reel+79j$/;"	l
f_ret_bx	bdos.a86	/^f_ret_bx:				; CODE XREF: DRV_ALLOCVEC+Bj$/;"	l
f_ret_es	bdos.a86	/^f_ret_es	dw 0			; DATA XREF: funcs_F_main+3Ew$/;"	d
f_setuid	misc.a86	/^f_setuid:				; CODE XREF: F_USERNUM+4j$/;"	l
f_snext_file	bdos.a86	/^f_snext_file:				; CODE XREF: bdos:463Cj$/;"	l
f_writerand_cpm	bdos.a86	/^f_writerand_cpm:			; CODE XREF: F_WRITERAND+8j$/;"	l
far_ret_1	entry.a86	/^far_ret_1:				; DATA XREF: bdos:0038o P_CHAIN+71o$/;"	l
fat_bdos_74	bdos.a86	/^fat_bdos_74:		; CODE XREF: F_BDOS_74+10j$/;"	l
fat_buf_dirty?	bdos.a86	/^fat_buf_dirty?	db 0			; DATA XREF: lru_ckdirty+7r$/;"	d
fat_can_del	bdos.a86	/^fat_can_del:				; CODE XREF: fat_delete+32j$/;"	l
fat_can_del_1	bdos.a86	/^fat_can_del_1:				; CODE XREF: fat_delete+27j$/;"	l
fat_can_del_2	bdos.a86	/^fat_can_del_2:				; CODE XREF: fat_delete+7Aj$/;"	l
fat_close	bdos.a86	/^fat_close:		; CODE XREF: F_CLOSE+Ej F_CLOSE+18j$/;"	l
fat_closefile	bdos.a86	/^fat_closefile:				; CODE XREF: fat_close+5j$/;"	l
fat_day	bdos.a86	/^fat_day		db 0			; DATA XREF: fat_get_date+21w$/;"	d
fat_deblock?	bdos.a86	/^fat_deblock?	db 0			; DATA XREF: fat_rdwr+28Fw$/;"	d
fat_del1	bdos.a86	/^fat_del1:				; CODE XREF: fat_delete+CAj$/;"	l
fat_del1_next	bdos.a86	/^fat_del1_next:				; CODE XREF: fat_delete+C3j$/;"	l
fat_del_ckinuse	bdos.a86	/^fat_del_ckinuse:			; CODE XREF: fat_delete+7Cj$/;"	l
fat_del_dirloop	bdos.a86	/^fat_del_dirloop:			; CODE XREF: fat_delete+59j$/;"	l
fat_del_file	bdos.a86	/^fat_del_file:				; CODE XREF: fat_delete+20j$/;"	l
fat_del_matched	bdos.a86	/^fat_del_matched:			; CODE XREF: fat_delete+16j$/;"	l
fat_del_nxtfile	bdos.a86	/^fat_del_nxtfile:			; CODE XREF: fat_delete+18j$/;"	l
fat_del_skipf	bdos.a86	/^fat_del_skipf:				; CODE XREF: fat_delete+44j$/;"	l
fat_delete	bdos.a86	/^fat_delete:		; CODE XREF: F_DELETE+Aj$/;"	l
fat_delpass	bdos.a86	/^fat_delpass:				; CODE XREF: fat_delete+7j$/;"	l
fat_exte2	bdos.a86	/^fat_exte2:				; CODE XREF: fat_extents+25j$/;"	l
fat_exte3	bdos.a86	/^fat_exte3:				; CODE XREF: fat_extents+2Bj$/;"	l
fat_extents	bdos.a86	/^fat_extents:		; CODE XREF: srch_fat+68p srch_fat+ACp$/;"	l
fat_fc_done	bdos.a86	/^fat_fc_done:				; CODE XREF: fat_freechain+2j$/;"	l
fat_fcb_to_cpm	bdos.a86	/^fat_fcb_to_cpm:		; CODE XREF: srch_fat+B4p cpm_opendir+16Dp$/;"	l
fat_file_ptr	bdos.a86	/^fat_file_ptr	dw 0,0			; DATA XREF: fat_rdwr+B8w fat_rdwr+22Dr$/;"	d
fat_freechain	bdos.a86	/^fat_freechain:		; CODE XREF: fat_delete+ADp$/;"	l
fat_get	bdos.a86	/^fat_get:		; CODE XREF: fat_set_eof+1p$/;"	l
fat_get1	bdos.a86	/^fat_get1:				; CODE XREF: fat_get+7j$/;"	l
fat_get2	bdos.a86	/^fat_get2:				; CODE XREF: fat_get+17j$/;"	l
fat_get3	bdos.a86	/^fat_get3:				; CODE XREF: fat_get+1Dj fat_get+28j$/;"	l
fat_get_date	bdos.a86	/^fat_get_date:		; CODE XREF: fat_to_sfcb+17p$/;"	l
fat_getfsize	bdos.a86	/^fat_getfsize:		; CODE XREF: fat_rdwr+141p$/;"	l
fat_getfsize1	bdos.a86	/^fat_getfsize1:				; CODE XREF: fat_getfsize+11j$/;"	l
fat_getfsize2	bdos.a86	/^fat_getfsize2:				; CODE XREF: fat_getfsize+2Fj$/;"	l
fat_getfsize3	bdos.a86	/^fat_getfsize3:				; CODE XREF: fat_getfsize+4Ej$/;"	l
fat_getfsize4	bdos.a86	/^fat_getfsize4:				; CODE XREF: fat_getfsize+Aj$/;"	l
fat_hour	bdos.a86	/^fat_hour	db 0			; DATA XREF: fat_get_date+41w$/;"	d
fat_initial2	bdos.a86	/^fat_initial2:				; CODE XREF: fat_login+46j$/;"	l
fat_initial2a	bdos.a86	/^fat_initial2a:				; CODE XREF: fat_login+10j$/;"	l
fat_initial3	bdos.a86	/^fat_initial3:				; CODE XREF: fat_login+3Aj$/;"	l
fat_iret	bdos.a86	/^fat_iret:	nop$/;"	l
fat_log_hd	bdos.a86	/^fat_log_hd:				; CODE XREF: fat_login+6j$/;"	l
fat_login	bdos.a86	/^fat_login:		; CODE XREF: curselect+1Ap$/;"	l
fat_make	bdos.a86	/^fat_make:		; CODE XREF: F_MAKE+20j$/;"	l
fat_make2	bdos.a86	/^fat_make2:				; CODE XREF: fat_make+2Ej$/;"	l
fat_make3	bdos.a86	/^fat_make3:				; CODE XREF: fat_make+27j$/;"	l
fat_make4	bdos.a86	/^fat_make4:				; CODE XREF: fat_make+21j fat_make+40j$/;"	l
fat_make5	bdos.a86	/^fat_make5:				; CODE XREF: fat_make+1Cj fat_make+66j$/;"	l
fat_make6	bdos.a86	/^fat_make6:				; CODE XREF: fat_make+80j$/;"	l
fat_make7	bdos.a86	/^fat_make7:				; CODE XREF: fat_make+74j$/;"	l
fat_matchn1	bdos.a86	/^fat_matchn1:				; CODE XREF: fat_matchname+23j$/;"	l
fat_matchn2	bdos.a86	/^fat_matchn2:				; CODE XREF: fat_matchname+13j$/;"	l
fat_matchname	bdos.a86	/^fat_matchname:		; CODE XREF: fat_search1+51p$/;"	l
fat_mdiv0	bdos.a86	/^fat_mdiv0:				; CODE XREF: fat_muldivj$/;"	l
fat_mdiv1	bdos.a86	/^fat_mdiv1:				; CODE XREF: fat_muldiv+5j$/;"	l
fat_minute	bdos.a86	/^fat_minute	db 0			; DATA XREF: fat_get_date+39w$/;"	d
fat_mkdir	bdos.a86	/^fat_mkdir:				; CODE XREF: fat_make+9Fj$/;"	l
fat_mkdir0	bdos.a86	/^fat_mkdir0:$/;"	l
fat_mkdir1	bdos.a86	/^fat_mkdir1:				; CODE XREF: fat_make+F0j$/;"	l
fat_mkdir2	bdos.a86	/^fat_mkdir2:				; CODE XREF: fat_make+E8j$/;"	l
fat_mkdir3	bdos.a86	/^fat_mkdir3:				; CODE XREF: fat_make+11Bj$/;"	l
fat_mkdir4	bdos.a86	/^fat_mkdir4:				; CODE XREF: fat_make+113j$/;"	l
fat_mkdir5	bdos.a86	/^fat_mkdir5:	mov	26[si], ax$/;"	l
fat_mkfile	bdos.a86	/^fat_mkfile:				; CODE XREF: fat_make+A1j$/;"	l
fat_mkfile1	bdos.a86	/^fat_mkfile1:$/;"	l
fat_month	bdos.a86	/^fat_month	db 0			; DATA XREF: fat_get_date+19w$/;"	d
fat_muldiv	bdos.a86	/^fat_muldiv:		; CODE XREF: fat_rdwr+CDp$/;"	l
fat_open	bdos.a86	/^fat_open:		; CODE XREF: F_OPEN+Dj$/;"	l
fat_rdwr	bdos.a86	/^fat_rdwr:		; CODE XREF: F_READ+Cj	F_WRITE+Cj$/;"	l
fat_rdwr1	bdos.a86	/^fat_rdwr1:				; CODE XREF: fat_rdwr+1Aj$/;"	l
fat_rdwr10	bdos.a86	/^fat_rdwr10:				; CODE XREF: fat_rdwr+E2j$/;"	l
fat_rdwr11	bdos.a86	/^fat_rdwr11:				; CODE XREF: fat_rdwr+D9j$/;"	l
fat_rdwr12	bdos.a86	/^fat_rdwr12:				; CODE XREF: fat_rdwr+FBj fat_rdwr+102j$/;"	l
fat_rdwr13	bdos.a86	/^fat_rdwr13:				; CODE XREF: fat_rdwr+10Ej$/;"	l
fat_rdwr14	bdos.a86	/^fat_rdwr14:				; CODE XREF: fat_rdwr+13Fj$/;"	l
fat_rdwr15	bdos.a86	/^fat_rdwr15:				; CODE XREF: fat_rdwr+14Cj$/;"	l
fat_rdwr16	bdos.a86	/^fat_rdwr16:				; CODE XREF: fat_rdwr+12Bj$/;"	l
fat_rdwr17	bdos.a86	/^fat_rdwr17:				; CODE XREF: fat_rdwr+165j$/;"	l
fat_rdwr18	bdos.a86	/^fat_rdwr18:				; CODE XREF: fat_rdwr+173j$/;"	l
fat_rdwr19	bdos.a86	/^fat_rdwr19:				; CODE XREF: fat_rdwr+183j$/;"	l
fat_rdwr2	bdos.a86	/^fat_rdwr2:				; CODE XREF: fat_rdwr+11j$/;"	l
fat_rdwr20	bdos.a86	/^fat_rdwr20:				; CODE XREF: fat_rdwr+1A1j$/;"	l
fat_rdwr21	bdos.a86	/^fat_rdwr21:				; CODE XREF: fat_rdwr+1A6j$/;"	l
fat_rdwr22	bdos.a86	/^fat_rdwr22:				; CODE XREF: fat_rdwr+190j$/;"	l
fat_rdwr23	bdos.a86	/^fat_rdwr23:				; CODE XREF: fat_rdwr+1CBj$/;"	l
fat_rdwr24	bdos.a86	/^fat_rdwr24:				; CODE XREF: fat_rdwr+1D4j$/;"	l
fat_rdwr25	bdos.a86	/^fat_rdwr25:				; CODE XREF: fat_rdwr+17Bj$/;"	l
fat_rdwr26	bdos.a86	/^fat_rdwr26:				; CODE XREF: fat_rdwr+1BBj$/;"	l
fat_rdwr27	bdos.a86	/^fat_rdwr27:				; CODE XREF: fat_rdwr+167j$/;"	l
fat_rdwr28	bdos.a86	/^fat_rdwr28:				; CODE XREF: fat_rdwr+104j$/;"	l
fat_rdwr29	bdos.a86	/^fat_rdwr29:				; CODE XREF: fat_rdwr+218j$/;"	l
fat_rdwr3	bdos.a86	/^fat_rdwr3:				; CODE XREF: fat_rdwr+39j$/;"	l
fat_rdwr30	bdos.a86	/^fat_rdwr30:				; CODE XREF: fat_rdwr+229j$/;"	l
fat_rdwr31	bdos.a86	/^fat_rdwr31:				; CODE XREF: fat_rdwr+22Bj$/;"	l
fat_rdwr32	bdos.a86	/^fat_rdwr32:				; CODE XREF: fat_rdwr+23Aj$/;"	l
fat_rdwr33	bdos.a86	/^fat_rdwr33:				; CODE XREF: fat_rdwr+264j$/;"	l
fat_rdwr34	bdos.a86	/^fat_rdwr34:				; CODE XREF: fat_rdwr+251j$/;"	l
fat_rdwr35	bdos.a86	/^fat_rdwr35:				; CODE XREF: fat_rdwr+24Aj$/;"	l
fat_rdwr36	bdos.a86	/^fat_rdwr36:				; CODE XREF: fat_rdwr+294j$/;"	l
fat_rdwr37	bdos.a86	/^fat_rdwr37:				; CODE XREF: fat_rdwr+2B4j$/;"	l
fat_rdwr38	bdos.a86	/^fat_rdwr38:				; CODE XREF: fat_rdwr+2C7j$/;"	l
fat_rdwr39	bdos.a86	/^fat_rdwr39:				; CODE XREF: fat_rdwr+2B9j$/;"	l
fat_rdwr4	bdos.a86	/^fat_rdwr4:				; CODE XREF: fat_rdwr+4Dj$/;"	l
fat_rdwr40	bdos.a86	/^fat_rdwr40:				; CODE XREF: fat_rdwr+2F9j$/;"	l
fat_rdwr41	bdos.a86	/^fat_rdwr41:				; CODE XREF: fat_rdwr+2E7j$/;"	l
fat_rdwr42	bdos.a86	/^fat_rdwr42:				; CODE XREF: fat_rdwr+300j$/;"	l
fat_rdwr43	bdos.a86	/^fat_rdwr43:				; CODE XREF: fat_rdwr+2E9j$/;"	l
fat_rdwr44	bdos.a86	/^fat_rdwr44:				; CODE XREF: fat_rdwr+369j$/;"	l
fat_rdwr45	bdos.a86	/^fat_rdwr45:				; CODE XREF: fat_rdwr+36Dj$/;"	l
fat_rdwr46	bdos.a86	/^fat_rdwr46:				; CODE XREF: fat_rdwr+361j$/;"	l
fat_rdwr47	bdos.a86	/^fat_rdwr47:				; CODE XREF: fat_rdwr+37Bj$/;"	l
fat_rdwr48	bdos.a86	/^fat_rdwr48:				; CODE XREF: fat_rdwr+386j$/;"	l
fat_rdwr5	bdos.a86	/^fat_rdwr5:				; CODE XREF: fat_rdwr+32j$/;"	l
fat_rdwr6	bdos.a86	/^fat_rdwr6:				; CODE XREF: fat_rdwr+73j fat_rdwr+78j$/;"	l
fat_rdwr7	bdos.a86	/^fat_rdwr7:				; CODE XREF: fat_rdwr+53j fat_rdwr+5Aj$/;"	l
fat_rdwr8	bdos.a86	/^fat_rdwr8:				; CODE XREF: fat_rdwr+C4j$/;"	l
fat_rdwr9	bdos.a86	/^fat_rdwr9:				; CODE XREF: fat_rdwr+D2j$/;"	l
fat_rdwr_ckd	bdos.a86	/^fat_rdwr_ckd:		; CODE XREF: fat_rdwr+2B6p$/;"	l
fat_rdwr_ckd1	bdos.a86	/^fat_rdwr_ckd1:				; CODE XREF: fat_rdwr_ckd+Dj$/;"	l
fat_rdwr_ckd2	bdos.a86	/^fat_rdwr_ckd2:				; CODE XREF: fat_rdwr_ckd+9j$/;"	l
fat_rdwr_flg1	bdos.a86	/^fat_rdwr_flg1	db 0			; DATA XREF: fat_rdwr+5w fat_rdwr+55w$/;"	d
fat_rdwr_op	bdos.a86	/^fat_rdwr_op	db 0			; DATA XREF: fat_rdwr+Aw fat_rdwr+2Dr$/;"	d
fat_rdwr_sub1	bdos.a86	/^fat_rdwr_sub1:		; CODE XREF: fat_rdwr+2AEp$/;"	l
fat_rdwr_sub10	bdos.a86	/^fat_rdwr_sub10:				; CODE XREF: fat_rdwr_sub1+84j$/;"	l
fat_rdwr_sub11	bdos.a86	/^fat_rdwr_sub11:				; CODE XREF: fat_rdwr_sub1+89j$/;"	l
fat_rdwr_sub12	bdos.a86	/^fat_rdwr_sub12:				; CODE XREF: fat_rdwr_sub1+A7j$/;"	l
fat_rdwr_sub13	bdos.a86	/^fat_rdwr_sub13:				; CODE XREF: fat_rdwr_sub1+B1j$/;"	l
fat_rdwr_sub14	bdos.a86	/^fat_rdwr_sub14:				; CODE XREF: fat_rdwr_sub1+95j$/;"	l
fat_rdwr_sub15	bdos.a86	/^fat_rdwr_sub15:				; CODE XREF: fat_rdwr_sub1+C4j$/;"	l
fat_rdwr_sub16	bdos.a86	/^fat_rdwr_sub16:				; CODE XREF: fat_rdwr_sub1+E0j$/;"	l
fat_rdwr_sub2	bdos.a86	/^fat_rdwr_sub2:				; CODE XREF: fat_rdwr_sub1+5j$/;"	l
fat_rdwr_sub3	bdos.a86	/^fat_rdwr_sub3:				; CODE XREF: fat_rdwr_sub1+16j$/;"	l
fat_rdwr_sub4	bdos.a86	/^fat_rdwr_sub4:				; CODE XREF: fat_rdwr_sub1+34j$/;"	l
fat_rdwr_sub5	bdos.a86	/^fat_rdwr_sub5:				; CODE XREF: fat_rdwr_sub1+2Bj$/;"	l
fat_rdwr_sub6	bdos.a86	/^fat_rdwr_sub6:				; CODE XREF: fat_rdwr_sub1+4Bj$/;"	l
fat_rdwr_sub7	bdos.a86	/^fat_rdwr_sub7:				; CODE XREF: fat_rdwr_sub1+48j$/;"	l
fat_rdwr_sub8	bdos.a86	/^fat_rdwr_sub8:				; CODE XREF: fat_rdwr_sub1+6Ej$/;"	l
fat_rdwr_sub9	bdos.a86	/^fat_rdwr_sub9:				; CODE XREF: fat_rdwr_sub1+52j$/;"	l
fat_rename	bdos.a86	/^fat_rename:		; CODE XREF: bdos:479Aj$/;"	l
fat_rename2	bdos.a86	/^fat_rename2:				; CODE XREF: fat_rename+17j$/;"	l
fat_rename3	bdos.a86	/^fat_rename3:				; CODE XREF: fat_rename+2Dj$/;"	l
fat_rename4	bdos.a86	/^fat_rename4:				; CODE XREF: fat_rename+38j$/;"	l
fat_rename5	bdos.a86	/^fat_rename5:				; CODE XREF: fat_rename+55j$/;"	l
fat_rename6	bdos.a86	/^fat_rename6:				; CODE XREF: fat_rename+49j$/;"	l
fat_rw_u	bdos.a86	/^fat_rw_u:		; CODE XREF: fat_rdwr+341p$/;"	l
fat_rw_u1	bdos.a86	/^fat_rw_u1:	ret$/;"	l
fat_search1	bdos.a86	/^fat_search1:		; CODE XREF: srch_fat+40p srch_fat+EFp$/;"	l
fat_second	bdos.a86	/^fat_second	db 0			; DATA XREF: fat_get_date+2Cw$/;"	d
fat_set_date	bdos.a86	/^fat_set_date:		; CODE XREF: fat_make+93p fat_make+100p$/;"	l
fat_set_eof	bdos.a86	/^fat_set_eof:		; CODE XREF: rd$subdir1+31p$/;"	l
fat_set_eof_ret	bdos.a86	/^fat_set_eof_ret:			; CODE XREF: fat_set_eof+7j$/;"	l
fat_setstamp_1	bdos.a86	/^fat_setstamp_1:				; CODE XREF: fat_bdos_74+5j$/;"	l
fat_size	bdos.a86	/^fat_size:		; CODE XREF: F_SIZE+7j$/;"	l
fat_space	bdos.a86	/^fat_space:		; CODE XREF: DRV_SPACE+Aj$/;"	l
fat_timedate	bdos.a86	/^fat_timedate:		; CODE XREF: F_TIMEDATE+Dj$/;"	l
fat_timedate1	bdos.a86	/^fat_timedate1:				; CODE XREF: fat_timedate+5j$/;"	l
fat_to_sfcb	bdos.a86	/^fat_to_sfcb:		; CODE XREF: srch_fat+C2p$/;"	l
fat_today	bdos.a86	/^fat_today:		; CODE XREF: fat_make+90p fat_truncate+96p$/;"	l
fat_trunc_1	bdos.a86	/^fat_trunc_1:				; CODE XREF: fat_truncate+8j$/;"	l
fat_trunc_2	bdos.a86	/^fat_trunc_2:				; CODE XREF: fat_truncate+1Fj$/;"	l
fat_trunc_3	bdos.a86	/^fat_trunc_3:				; CODE XREF: fat_truncate+3Dj$/;"	l
fat_trunc_4	bdos.a86	/^fat_trunc_4:				; CODE XREF: fat_truncate+68j$/;"	l
fat_trunc_5	bdos.a86	/^fat_trunc_5:				; CODE XREF: fat_truncate+5Fj$/;"	l
fat_trunc_6	bdos.a86	/^fat_trunc_6:				; CODE XREF: fat_truncate+6Cj$/;"	l
fat_trunc_7	bdos.a86	/^fat_trunc_7:				; CODE XREF: fat_truncate+85j$/;"	l
fat_trunc_fail	bdos.a86	/^fat_trunc_fail:				; CODE XREF: fat_truncate+12j$/;"	l
fat_truncate	bdos.a86	/^fat_truncate:		; CODE XREF: F_TRUNCATE+10j$/;"	l
fat_wcls_end	bdos.a86	/^fat_wcls_end:				; CODE XREF: fat_wcluster+24j$/;"	l
fat_wcluster	bdos.a86	/^fat_wcluster:		; CODE XREF: fat_make+45p fat_make+4Fp$/;"	l
fat_wcluster12	bdos.a86	/^fat_wcluster12:				; CODE XREF: fat_wcluster+19j$/;"	l
fat_wcluster12a	bdos.a86	/^fat_wcluster12a:			; CODE XREF: fat_wcluster+10j$/;"	l
fat_wcluster16	bdos.a86	/^fat_wcluster16:				; CODE XREF: fat_wcluster+7j$/;"	l
fat_wr_dirent	bdos.a86	/^fat_wr_dirent:		; CODE XREF: fat_close+40p$/;"	l
fat_wr_dirent1	bdos.a86	/^fat_wr_dirent1:				; CODE XREF: fat_wr_dirent+9j$/;"	l
fat_wr_dirent2	bdos.a86	/^fat_wr_dirent2:				; CODE XREF: fat_wr_dirent+1Bj$/;"	l
fat_wr_dirent3	bdos.a86	/^fat_wr_dirent3:				; CODE XREF: fat_wr_dirent+1Dj$/;"	l
fat_year	bdos.a86	/^fat_year	db 0			; DATA XREF: fat_get_date+Cw$/;"	d
fat_zap_dirent	bdos.a86	/^fat_zap_dirent:				; CODE XREF: fat_delete+9Dj$/;"	l
fats_loaded	bdos.a86	/^fats_loaded:				; CODE XREF: drive_login+4Ej$/;"	l
fatspace_count	bdos.a86	/^fatspace_count:				; CODE XREF: fat_space+18j$/;"	l
fatspace_done	bdos.a86	/^fatspace_done:				; CODE XREF: fat_space+9j$/;"	l
fatspace_used	bdos.a86	/^fatspace_used:				; CODE XREF: fat_space+13j$/;"	l
fcb_is_for_dir	bdos.a86	/^fcb_is_for_dir	db 0			; DATA XREF: funcs_F_main+C2r$/;"	d
fcb_len_0	bdos.a86	/^fcb_len_0:				; CODE XREF: bdos_switch+B3j$/;"	l
fcb_randrec_num	bdos.a86	/^fcb_randrec_num	rb 3$/;"	l
fcb_recno_addr	bdos.a86	/^fcb_recno_addr:		; CODE XREF: F_repeat_call+4Dp$/;"	l
fcbdsk	bdos.a86	/^fcbdsk		db 0			; DATA XREF: funcs_F_main+6Eo$/;"	d
fcbnzero	bdos.a86	/^fcbnzero:				; CODE XREF: close$fcb+2Cj$/;"	l
fcf_direntclean	bdos.a86	/^fcf_direntclean:			; CODE XREF: fat_close+3Ej$/;"	l
fcf_fatclean	bdos.a86	/^fcf_fatclean:				; CODE XREF: fat_close+31j$/;"	l
fcf_fixeddisc	bdos.a86	/^fcf_fixeddisc:				; CODE XREF: fat_close+1Bj$/;"	l
fcf_gotdirent	bdos.a86	/^fcf_gotdirent:				; CODE XREF: fat_close+27j$/;"	l
fewer256blocks	bdos.a86	/^fewer256blocks:				; CODE XREF: drive_login+7Ej$/;"	l
ff2c_S2	bdos.a86	/^ff2c_S2:				; CODE XREF: fat_fcb_to_cpm+86j$/;"	l
ff2c_bytesize	bdos.a86	/^ff2c_bytesize:				; CODE XREF: fat_fcb_to_cpm+7Dj$/;"	l
ff2c_copyname	bdos.a86	/^ff2c_copyname:				; CODE XREF: fat_fcb_to_cpm+63j$/;"	l
ff2c_extent	bdos.a86	/^ff2c_extent	dw 0			; DATA XREF: srch_fat+7w srch_fat+22w$/;"	d
ff2c_haveattr	bdos.a86	/^ff2c_haveattr:				; CODE XREF: fat_fcb_to_cpm+3Bj$/;"	l
ff2c_hid	bdos.a86	/^ff2c_hid:				; CODE XREF: fat_fcb_to_cpm+AAj$/;"	l
ff2c_isdir	bdos.a86	/^ff2c_isdir:				; CODE XREF: fat_fcb_to_cpm+A2j$/;"	l
ff2c_namedone	bdos.a86	/^ff2c_namedone:				; CODE XREF: fat_fcb_to_cpm+1Cj$/;"	l
ff2c_notFattr	bdos.a86	/^ff2c_notFattr:				; CODE XREF: fat_fcb_to_cpm+23j$/;"	l
ff2c_notT1	bdos.a86	/^ff2c_notT1:				; CODE XREF: fat_fcb_to_cpm+33j$/;"	l
ff2c_notT2	bdos.a86	/^ff2c_notT2:				; CODE XREF: fat_fcb_to_cpm+40j$/;"	l
ff2c_notT3	bdos.a86	/^ff2c_notT3:				; CODE XREF: fat_fcb_to_cpm+2Ej$/;"	l
ff2c_skipuser	bdos.a86	/^ff2c_skipuser:				; CODE XREF: fat_fcb_to_cpm+Bj$/;"	l
fill0	bdos.a86	/^fill0:					; CODE XREF: cpm_rwrand+2Fj$/;"	l
fill1	bdos.a86	/^fill1:					; CODE XREF: cpm_writerec+DDj$/;"	l
fill2	bdos.a86	/^fill2:					; CODE XREF: cpm_rwrand+40j$/;"	l
fillfdds	loader.a86	/^fillfdds:$/;"	l
fillhdds	loader.a86	/^fillhdds:$/;"	l
find$xfcb	bdos.a86	/^find$xfcb	db 0			; DATA XREF: search$h_sub+46r$/;"	d
find_cmd_group	sup.a86	/^find_cmd_group:		; CODE XREF: cmd_alloc_mem+204p$/;"	l
find_extent_0	bdos.a86	/^find_extent_0:		; CODE XREF: update$stamp+16p$/;"	l
find_group_foun	sup.a86	/^find_group_foun:			; CODE XREF: find_cmd_group+Aj$/;"	l
find_group_lp	sup.a86	/^find_group_lp:				; CODE XREF: find_cmd_group+Fj$/;"	l
find_group_none	sup.a86	/^find_group_none:			; CODE XREF: cmd_alloc_mem+1ECj$/;"	l
fix$hash	bdos.a86	/^fix$hash:		; CODE XREF: cpm_login+55p$/;"	l
fixalloc_fail	sup.a86	/^fixalloc_fail:				; CODE XREF: cmd_alloc_mem+B3j$/;"	l
flush0	bdos.a86	/^flush0:					; CODE XREF: DRV_FLUSH+5j$/;"	l
flush1	bdos.a86	/^flush1:					; CODE XREF: DRV_FLUSH+1Dj$/;"	l
flush2a	bdos.a86	/^flush2a:				; CODE XREF: DRV_FLUSH+19j$/;"	l
flush34	bdos.a86	/^flush34:				; CODE XREF: DRV_FLUSH+49j$/;"	l
flush35	bdos.a86	/^flush35:				; CODE XREF: DRV_FLUSH+42j$/;"	l
flush4	bdos.a86	/^flush4:					; CODE XREF: DRV_FLUSH+34j$/;"	l
flush5	bdos.a86	/^flush5:					; CODE XREF: DRV_FLUSH+74j$/;"	l
flush_not3	bdos.a86	/^flush_not3:				; CODE XREF: DRV_FLUSH+2Aj$/;"	l
flushx	bdos.a86	/^flushx:		; CODE XREF: check$nprs+100p$/;"	l
flushx1	bdos.a86	/^flushx1:				; CODE XREF: flushx+5j$/;"	l
flushxret	bdos.a86	/^flushxret:				; CODE XREF: trunc_save_dcnt+5j$/;"	l
fmake_notfound	bdos.a86	/^fmake_notfound:				; CODE XREF: fat_make+Aj$/;"	l
fpbcb_freeit	bdos.a86	/^fpbcb_freeit:				; CODE XREF: proc$discard+21j$/;"	l
fpbcb_loop	bdos.a86	/^fpbcb_loop:				; CODE XREF: proc$discard+2Fj$/;"	l
fpbcb_next	bdos.a86	/^fpbcb_next:				; CODE XREF: proc$discard+Cj$/;"	l
frc_abandon	bdos.a86	/^frc_abandon:				; CODE XREF: F_repeat_call+26j$/;"	l
frc_inc	bdos.a86	/^frc_inc:				; CODE XREF: F_repeat_call+21j$/;"	l
frc_loop	bdos.a86	/^frc_loop:				; CODE XREF: F_repeat_call+40j$/;"	l
frc_notinc	bdos.a86	/^frc_notinc:				; CODE XREF: F_repeat_call+33j$/;"	l
frc_okay	bdos.a86	/^frc_okay:				; CODE XREF: F_repeat_call+2Ej$/;"	l
frc_return	bdos.a86	/^frc_return:				; CODE XREF: F_repeat_call+4Bj$/;"	l
free_allmem	mem.a86	/^free_allmem:		; CODE XREF: MC_ALLFREE+Dp$/;"	l
free_cmd	cmdio.c	/^void free_cmd (cmd_desc *cmdfile)$/;"	f	typeref:typename:void
free_dirdata	bdos.a86	/^free_dirdata	dw offset dirdata_0$/;"	d
free_dirnames	bdos.a86	/^free_dirnames	dw offset dirname_0$/;"	d
free_done	mem.a86	/^free_done:				; CODE XREF: MC_FREE+10j MC_FREE+14j$/;"	l
free_onemem	mem.a86	/^free_onemem:				; CODE XREF: MC_FREE+8j$/;"	l
free_temp_block	mem.a86	/^free_temp_block:		; CODE XREF: allocate_block+32p$/;"	l
freeall_loop	mem.a86	/^freeall_loop:				; CODE XREF: free_allmem+10j$/;"	l
freetmp_done	mem.a86	/^freetmp_done:				; CODE XREF: free_temp_block+8j$/;"	l
freetmp_loop	mem.a86	/^freetmp_loop:				; CODE XREF: free_temp_block+Ej$/;"	l
fs_abort1	bdos.a86	/^fs_abort1:		; CODE XREF: rdbuff+74j$/;"	l
fs_abort_ffff	bdos.a86	/^fs_abort_ffff:				; CODE XREF: sel$error+17j$/;"	l
fs_altentry	bdos.a86	/^fs_altentry:				; CODE XREF: tst$relog+Dj$/;"	l
fs_buffer	bdos.a86	/^fs_buffer	dw 0,0			; DATA XREF: xios_rdwr+1Br$/;"	d
fs_call_xios	bdos.a86	/^fs_call_xios:		; CODE XREF: drive_login+5p$/;"	l
fs_days	bdos.a86	/^fs_days		dw 0			; DATA XREF: fat_to_sfcb+21o$/;"	d
fs_errormode	bdos.a86	/^fs_errormode	db 0			; DATA XREF: sel$error+Cr disk_error+Cr$/;"	d
fs_fcbdrive	bdos.a86	/^fs_fcbdrive	db 0			; DATA XREF: funcs_F_main+30w$/;"	d
fs_function	bdos.a86	/^fs_function	db 0			; DATA XREF: bdos:25EBr funcs_F_main+14w$/;"	d
fs_hours	bdos.a86	/^fs_hours	db 0			; DATA XREF: dos_date_to_cpm+42w$/;"	d
fs_is_cpm	bdos.a86	/^fs_is_cpm:				; CODE XREF: drive_login+2Ej$/;"	l
fs_is_fat16	bdos.a86	/^fs_is_fat16:				; CODE XREF: drive_login+36j$/;"	l
fs_minutes	bdos.a86	/^fs_minutes	db 0			; DATA XREF: dos_date_to_cpm+4Bw$/;"	d
fs_noop	bdos.a86	/^fs_noop:		; CODE XREF: fat_close+36p$/;"	l
fs_nop2	bdos.a86	/^fs_nop2:		; CODE XREF: fat_delete+9Fp$/;"	l
fs_notfilefcb	bdos.a86	/^fs_notfilefcb:				; CODE XREF: F_do_call+21j$/;"	l
fs_param_ds	bdos.a86	/^fs_param_ds	dw 0			; DATA XREF: funcs_F_main+37w$/;"	d
fs_param_low	bdos.a86	/^fs_param_low	dw 0			; DATA XREF: bdos:25FFr funcs_F_main+73w$/;"	d
fs_rdwrcount	bdos.a86	/^fs_rdwrcount	db 1			; DATA XREF: xios_rdwr+Ew bdos:2C56w$/;"	d
fs_release	bdos.a86	/^fs_release:				; CODE XREF: bdos_switch+10Aj$/;"	l
fs_ret_error	bdos.a86	/^fs_ret_error:				; CODE XREF: bdos_switch+118j$/;"	l
fs_seconds	bdos.a86	/^fs_seconds	db 0			; DATA XREF: timestamp_2_fat+6Cr$/;"	d
fs_sector	bdos.a86	/^fs_sector	dw 0			; DATA XREF: xios_rdwr+17r$/;"	d
fs_sectorcount	bdos.a86	/^fs_sectorcount	db 0			; DATA XREF: funcs_F_main+97r$/;"	d
fs_track	bdos.a86	/^fs_track	dw 0			; DATA XREF: xios_rdwr+13r$/;"	d
fsize_gotsize	bdos.a86	/^fsize_gotsize:				; CODE XREF: fat_size+16j fat_size+1Bj$/;"	l
fsize_haventgot	bdos.a86	/^fsize_haventgot:			; CODE XREF: fat_size+1Dj fat_size+22j$/;"	l
fsize_havesize	bdos.a86	/^fsize_havesize:				; CODE XREF: fat_size+33j$/;"	l
fsize_next	bdos.a86	/^fsize_next:				; CODE XREF: fat_size+2Cj$/;"	l
fsize_nomatch	bdos.a86	/^fsize_nomatch:				; CODE XREF: fat_size+Dj$/;"	l
function_tables	entry.a86	/^function_tables	dw offset sup_main	; DATA XREF: inner_callback+Eo$/;"	d
g003f	entry.a86	/^g003f:					; DATA XREF: P_TERMCPM+16r$/;"	l
gcbca_end	bdos.a86	/^gcbca_end:				; CODE XREF: get$bcba+11j get$bcba+FCj$/;"	l
gdiu_0	bdos.a86	/^gdiu_0:					; CODE XREF: get_drvs_in_use+1Dj$/;"	l
gdiu_1	bdos.a86	/^gdiu_1:					; CODE XREF: get_drvs_in_use+Dj$/;"	l
get$atts	bdos.a86	/^get$atts:		; CODE XREF: cpm_deletep F_MAKE+31p$/;"	l
get$bcb05	bdos.a86	/^get$bcb05:				; CODE XREF: get$bcba+Fj$/;"	l
get$bcb1	bdos.a86	/^get$bcb1:				; CODE XREF: get$bcba+CEj$/;"	l
get$bcb14	bdos.a86	/^get$bcb14:				; CODE XREF: get$bcba+39j get$bcba+43j$/;"	l
get$bcb15	bdos.a86	/^get$bcb15:				; CODE XREF: get$bcba+78j$/;"	l
get$bcb16	bdos.a86	/^get$bcb16:				; CODE XREF: get$bcba+6Aj get$bcba+72j$/;"	l
get$bcb17	bdos.a86	/^get$bcb17:				; CODE XREF: get$bcba+63j$/;"	l
get$bcb18	bdos.a86	/^get$bcb18:				; CODE XREF: get$bcba+BCj$/;"	l
get$bcb19	bdos.a86	/^get$bcb19:				; CODE XREF: get$bcba+89j get$bcba+90j$/;"	l
get$bcb20	bdos.a86	/^get$bcb20:				; CODE XREF: get$bcba+C1j$/;"	l
get$bcb21	bdos.a86	/^get$bcb21:				; CODE XREF: get$bcba+A6j get$bcba+C7j$/;"	l
get$bcb22	bdos.a86	/^get$bcb22:				; CODE XREF: get$bcba+D7j$/;"	l
get$bcb23	bdos.a86	/^get$bcb23:				; CODE XREF: get$bcba+E5j$/;"	l
get$bcb5	bdos.a86	/^get$bcb5:				; CODE XREF: get$bcba+7Fj$/;"	l
get$bcba	bdos.a86	/^get$bcba:		; CODE XREF: deblock+90p$/;"	l
get$block	bdos.a86	/^get$block:		; CODE XREF: cpm_writerec+5Fp$/;"	l
get$de0	bdos.a86	/^get$de0:				; CODE XREF: get$dir$ext+10j$/;"	l
get$de2	bdos.a86	/^get$de2:				; CODE XREF: get$dir$ext+Cj$/;"	l
get$de3	bdos.a86	/^get$de3:				; CODE XREF: get$dir$ext+1Fj$/;"	l
get$dir$ext	bdos.a86	/^get$dir$ext:		; CODE XREF: getfcb+Dp	open$copy+16p$/;"	l
get$dir$mode	bdos.a86	/^get$dir$mode:		; CODE XREF: cpm_delete+20p$/;"	l
get$dm	bdos.a86	/^get$dm:		; CODE XREF: index+Ap check$nprs+8Ap$/;"	l
get$dtba	bdos.a86	/^get$dtba:				; CODE XREF: make+47p stamp2+2p$/;"	l
get$dtba$8	bdos.a86	/^get$dtba$8:		; CODE XREF: delete11+14p chk$pw$error+2Cp$/;"	l
get$dtba$ret	bdos.a86	/^get$dtba$ret:				; CODE XREF: get$dtba$8+Dj$/;"	l
get$hash	bdos.a86	/^get$hash:		; CODE XREF: set$hash+1Ej set$hash+26j$/;"	l
get$hash0	bdos.a86	/^get$hash0:				; CODE XREF: get$hash+Aj$/;"	l
get$hash1	bdos.a86	/^get$hash1:				; CODE XREF: get$hash+40j$/;"	l
get$hash3	bdos.a86	/^get$hash3:				; CODE XREF: get$hash+1Aj get$hash+1Fj$/;"	l
get$hash4	bdos.a86	/^get$hash4:				; CODE XREF: get$hash+35j$/;"	l
get$hash5	bdos.a86	/^get$hash5:				; CODE XREF: get$hash+6Bj$/;"	l
get$hashret	bdos.a86	/^get$hashret:				; CODE XREF: search$hash+5j$/;"	l
get$nalbs	bdos.a86	/^get$nalbs:		; CODE XREF: copy$alv+8p scandm$ab+6p$/;"	l
get$xfcb	bdos.a86	/^get$xfcb:		; CODE XREF: chk$pw$error+46p$/;"	l
get$xfcb1	bdos.a86	/^get$xfcb1:		; CODE XREF: get$xfcb+15j chk_xfcb_passwdp$/;"	l
get_attrs0	bdos.a86	/^get_attrs0:				; CODE XREF: get$atts+12j$/;"	l
get_drvs_in_use	bdos.a86	/^get_drvs_in_use:		; CODE XREF: not_drv_loggedp$/;"	l
get_mcb_pars	mem.a86	/^get_mcb_pars:		; CODE XREF: MC_ABSALLOCp MC_ABSMAXp$/;"	l
get_new_process	rtm.a86	/^get_new_process:		; CODE XREF: bdos:0EDAu$/;"	l
get_proc_dskdat	sup.a86	/^get_proc_dskdat:		; CODE XREF: P_CHAINp Callback_103p$/;"	l
get_record_coun	bdos.a86	/^get_record_coun:		; CODE XREF: bdos_switch+93p$/;"	l
get_sharemode	bdos.a86	/^get_sharemode:		; CODE XREF: fat_open+2p fat_make+2p$/;"	l
getallocbit	bdos.a86	/^getallocbit:		; CODE XREF: set$alloc$bit+1p$/;"	l
getdptra	bdos.a86	/^getdptra:		; CODE XREF: check$rodirp read$subdir+33p$/;"	l
getfcb	bdos.a86	/^getfcb:		; CODE XREF: open$reel+58p$/;"	l
getfcb0	bdos.a86	/^getfcb0:				; CODE XREF: getfcb+Bj$/;"	l
getfcb1	bdos.a86	/^getfcb1:				; CODE XREF: getfcb+1Aj$/;"	l
getmodnum	bdos.a86	/^getmodnum:		; CODE XREF: setfwfp cpm_writerec+136p$/;"	l
gl_base	dpgen.c	/^int gl_base = 0x60;$/;"	v	typeref:typename:int
gl_base	exe2cmd.c	/^int gl_base = 0x60;$/;"	v	typeref:typename:int
gload_ckbody	sup.a86	/^gload_ckbody:				; CODE XREF: group_load+47j$/;"	l
gload_done	sup.a86	/^gload_done:				; CODE XREF: group_load+A3j$/;"	l
gload_fail	sup.a86	/^gload_fail:				; CODE XREF: group_load+6Dj$/;"	l
gload_from_buf	sup.a86	/^gload_from_buf:				; CODE XREF: group_load+1Bj$/;"	l
gload_gothead	sup.a86	/^gload_gothead:				; CODE XREF: group_load+Aj$/;"	l
gload_nextbody	sup.a86	/^gload_nextbody:				; CODE XREF: group_load+9Dj$/;"	l
gload_nextrec	sup.a86	/^gload_nextrec:				; CODE XREF: group_load+67j$/;"	l
gload_nobody	sup.a86	/^gload_nobody:				; CODE XREF: group_load+57j$/;"	l
gload_readbody	sup.a86	/^gload_readbody:				; CODE XREF: group_load+51j$/;"	l
gnd_blank	bdos.a86	/^gnd_blank:				; CODE XREF: cpm_opendir+B6j$/;"	l
gnd_inited	bdos.a86	/^gnd_inited:				; CODE XREF: cpm_opendir+C5j$/;"	l
gnp_found	rtm.a86	/^gnp_found:				; CODE XREF: get_new_process+Fj$/;"	l
gnp_loop	rtm.a86	/^gnp_loop:				; CODE XREF: get_new_process+14j$/;"	l
go_rdbuff	bdos.a86	/^go_rdbuff:				; CODE XREF: bdos:3D1Fj$/;"	l
goback	bdos.a86	/^goback:					; CODE XREF: sel$error+1Bj$/;"	l
goerr	bdos.a86	/^goerr:					; CODE XREF: fs_abort1+2j rof$error+2j$/;"	l
got_dirdata	bdos.a86	/^got_dirdata:				; CODE XREF: cpm_opendir+E2j$/;"	l
got_enough_mem	sup.a86	/^got_enough_mem:				; CODE XREF: cmd_alloc_mem+BFj$/;"	l
got_exflags	bdos.a86	/^got_exflags:				; CODE XREF: reselect+1Aj$/;"	l
got_free_bcb	bdos.a86	/^got_free_bcb:				; CODE XREF: get$bcba+22j get$bcba+31j$/;"	l
got_new_dirname	bdos.a86	/^got_new_dirname:			; CODE XREF: cpm_opendir+9Ej$/;"	l
group_load	sup.a86	/^group_load:		; CODE XREF: cmd_alloc_mem+1C7p$/;"	l
gsm_1	bdos.a86	/^gsm_1:					; CODE XREF: get_sharemode+9j$/;"	l
gsm_2	bdos.a86	/^gsm_2:					; CODE XREF: get_sharemode+12j$/;"	l
has_owner	bdos.a86	/^has_owner:				; CODE XREF: get$bcba+29j$/;"	l
hash	bdos.a86	/^hash		rb 4			; DATA XREF: get$hash+3w get$hash+Cw$/;"	l
hashl	bdos.a86	/^hashl		db 0			; DATA XREF: media$change+Cw$/;"	d
have_fstype	bdos.a86	/^have_fstype:				; CODE XREF: drive_login+69j$/;"	l
high$ext	bdos.a86	/^high$ext	db 0			; DATA XREF: F_do_call+3Br$/;"	d
hook_rsx_last	sup.a86	/^hook_rsx_last:				; CODE XREF: hookup_rsxes+1Fj$/;"	l
hook_rsx_loop	sup.a86	/^hook_rsx_loop:				; CODE XREF: hookup_rsxes+24j$/;"	l
hookup_rsxes	sup.a86	/^hookup_rsxes:		; CODE XREF: P_LOAD+12Ap$/;"	l
ide_0	bdos.a86	/^ide_0:		mov	di, 12[di]$/;"	l
idempty_loop	bdos.a86	/^idempty_loop:				; CODE XREF: is_dir_empty+64j$/;"	l
idempty_offset0	bdos.a86	/^idempty_offset0:			; CODE XREF: is_dir_empty+38j$/;"	l
idempty_scanrec	bdos.a86	/^idempty_scanrec:			; CODE XREF: is_dir_empty+3Dj$/;"	l
ietod_end	cio.a86	/^ietod_end:				; CODE XREF: inp_echo_to_di+2j$/;"	l
ifr_ret	bdos.a86	/^ifr_ret:				; CODE XREF: inc_fcb_record+5j$/;"	l
ihash_1	cio.a86	/^ihash_1:				; CODE XREF: input_hash+Fj$/;"	l
inc	bdos.a86	/^		inc	di$/;"	d
inc	bdos.a86	/^		inc	dl$/;"	d
inc	bdos.a86	/^		inc	dx$/;"	d
inc	ccpldr.a86	/^		inc	di$/;"	d
inc	cio.a86	/^		inc	di$/;"	d
inc	cio.a86	/^		inc	dx$/;"	d
inc	mem.a86	/^		inc	dl		; Available$/;"	d
inc	misc.a86	/^		inc	dx$/;"	d
inc	sup.a86	/^		inc	di$/;"	d
inc_fcb_record	bdos.a86	/^inc_fcb_record:		; CODE XREF: F_repeat_call+35p$/;"	l
include	bdos.a86	/^include equates.a86$/;"	l
include	bdos.a86	/^include system.a86$/;"	l
include	cio.a86	/^include	equates.a86$/;"	l
include	cio.a86	/^include system.a86$/;"	l
include	mem.a86	/^include	equates.a86$/;"	l
include	misc.a86	/^include	equates.a86$/;"	l
include	misc.a86	/^include	serial.a86$/;"	l
include	misc.a86	/^include system.a86$/;"	l
include	proctbl.a86	/^include equates.a86$/;"	l
include	rtm.a86	/^include equates.a86$/;"	l
include	rtm.a86	/^include system.a86$/;"	l
include	sup.a86	/^include	equates.a86$/;"	l
index	bdos.a86	/^index:		; CODE XREF: bdos:3D10p cpm_writerec+42p$/;"	l
init$xfcb	bdos.a86	/^init$xfcb:		; CODE XREF: F_MAKE+B1p DRV_SETLABEL+46p$/;"	l
init$xfcb0	bdos.a86	/^init$xfcb0:		; CODE XREF: DRV_SETLABEL+65p$/;"	l
init_fcb	sup.a86	/^init_fcb:		; CODE XREF: F_PARSE+11p$/;"	l
init_proctab	entry.a86	/^init_proctab:				; CODE XREF: bdos:0054j$/;"	l
init_xfcb_srch	bdos.a86	/^init_xfcb_srch:		; CODE XREF: bdos:47A5p bdos:47DCp$/;"	l
init_xfcb_srch1	bdos.a86	/^init_xfcb_srch1:		; CODE XREF: does$xfcb$exist+Cp$/;"	l
init_xfcbs_ret	bdos.a86	/^init_xfcbs_ret:				; CODE XREF: cpm_delete+Bj$/;"	l
init_zpage_fcb	sup.a86	/^init_zpage_fcb:		; CODE XREF: P_CHAIN+10Bp Callback_103+12Ep$/;"	l
initial$cs	bdos.a86	/^initial$cs:		; CODE XREF: r$dir+57j$/;"	l
initial2	bdos.a86	/^initial2:				; CODE XREF: cpm_login+5Fj$/;"	l
initial2a	bdos.a86	/^initial2a:				; CODE XREF: cpm_login+10j$/;"	l
initial2b	bdos.a86	/^initial2b:				; CODE XREF: cpm_login+4Ej$/;"	l
initial3	bdos.a86	/^initial3:				; CODE XREF: cpm_login+6Bj$/;"	l
inner_callback	entry.a86	/^inner_callback:		; CODE XREF: bdos:020Dp bdos_callback+8p$/;"	l
inp_canecho	cio.a86	/^inp_canecho:				; CODE XREF: input_echochar+7j$/;"	l
inp_dontecho	cio.a86	/^inp_dontecho:				; CODE XREF: input_echochar+11j$/;"	l
inp_echo_to_di	cio.a86	/^inp_echo_to_di:		; CODE XREF: inp_echo_to_di+18j$/;"	l
inp_x1_to_cur	cio.a86	/^inp_x1_to_cur:		; CODE XREF: input_ctlG+15p$/;"	l
inp_x1_to_cur1	cio.a86	/^inp_x1_to_cur1:		; CODE XREF: bdos:1C21p bdos:1CBEp$/;"	l
input_crlf	cio.a86	/^input_crlf:		; CODE XREF: input_hash+5p$/;"	l
input_ctlA	cio.a86	/^input_ctlA:		; CODE XREF: input_ctlH+10p$/;"	l
input_ctlB	cio.a86	/^input_ctlB:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlE	cio.a86	/^input_ctlE:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlF	cio.a86	/^input_ctlF:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlG	cio.a86	/^input_ctlG:		; CODE XREF: input_ctlH+13p$/;"	l
input_ctlH	cio.a86	/^input_ctlH:		; CODE XREF: C_READSTR+82u$/;"	l
input_ctlJ	cio.a86	/^input_ctlJ:		; CODE XREF: C_READSTR+82u$/;"	l
input_ctlK	cio.a86	/^input_ctlK:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlR	cio.a86	/^input_ctlR:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlU	cio.a86	/^input_ctlU:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlW	cio.a86	/^input_ctlW:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlX	cio.a86	/^input_ctlX:				; CODE XREF: C_READSTR+82u$/;"	l
input_ctlchars	cio.a86	/^input_ctlchars	dw offset input_inschar	; DATA XREF: C_READSTR+82o$/;"	d
input_delete	cio.a86	/^input_delete:		; CODE XREF: C_READSTR+73p$/;"	l
input_drawline	cio.a86	/^input_drawline:		; CODE XREF: bdos:1C32p input_ctlG+11p$/;"	l
input_echochar	cio.a86	/^input_echochar:		; CODE XREF: inp_echo_to_di+13p$/;"	l
input_hash	cio.a86	/^input_hash:		; CODE XREF: bdos:1CC8p bdos:1CDFj$/;"	l
input_inschar	cio.a86	/^input_inschar:		; CODE XREF: C_READSTR+82u$/;"	l
input_notctl	cio.a86	/^input_notctl:				; CODE XREF: C_READSTR+7Aj$/;"	l
input_notdel	cio.a86	/^input_notdel:				; CODE XREF: C_READSTR+71j$/;"	l
input_putchar	cio.a86	/^input_putchar:		; CODE XREF: input_echochar+17p$/;"	l
input_rightx	cio.a86	/^input_rightx	db 0			; DATA XREF: bdos_char_out+67r$/;"	d
input_showcur	cio.a86	/^input_showcur:		; CODE XREF: input_showcur+Dj$/;"	l
input_x0	cio.a86	/^input_x0	db 0			; DATA XREF: input_hash+Br$/;"	d
inschar_full	cio.a86	/^inschar_full:				; CODE XREF: input_inschar+9j$/;"	l
inschar_nowrap	cio.a86	/^inschar_nowrap:				; CODE XREF: input_inschar+12j$/;"	l
int13_buffer	bdos.a86	/^int13_buffer	dw 0,0			; DATA XREF: F_BDOS_75+20r$/;"	d
int13_cylinder	bdos.a86	/^int13_cylinder	db 0			; DATA XREF: F_BDOS_75+3Fr$/;"	d
int13_drive	bdos.a86	/^int13_drive	db 0			; DATA XREF: F_BDOS_75+10r$/;"	d
int13_func	bdos.a86	/^int13_func	db 0			; DATA XREF: F_BDOS_75+2o F_BDOS_75+2Cr$/;"	d
int13_head	bdos.a86	/^int13_head	db 0			; DATA XREF: F_BDOS_75+3Br$/;"	d
int13_sector	bdos.a86	/^int13_sector	db 0			; DATA XREF: F_BDOS_75+35r$/;"	d
int13_sectors	bdos.a86	/^int13_sectors	db 0			; DATA XREF: F_BDOS_75+26r$/;"	d
is_cmd	sup.a86	/^is_cmd:					; CODE XREF: P_LOAD+44j$/;"	l
is_control_char	cio.a86	/^is_control_char:		; CODE XREF: input_putcharp$/;"	l
is_dir_empty	bdos.a86	/^is_dir_empty:		; CODE XREF: fat_delete+6Bp$/;"	l
is_proc_busy	rtm.a86	/^is_proc_busy:		; CODE XREF: rtm_sysflag+1Dp$/;"	l
isc_done	cio.a86	/^isc_done:				; CODE XREF: input_showcur+4j$/;"	l
isnt_cc	cio.a86	/^isnt_cc:				; CODE XREF: is_control_char+3j$/;"	l
j2_abort_minus3	cio.a86	/^j2_abort_minus3:			; CODE XREF: C_RAWIO+1Bj$/;"	l
j_abort_minus3	cio.a86	/^j_abort_minus3:				; CODE XREF: simulate_conin+6j$/;"	l
j_bdos_callback	sup.a86	/^j_bdos_callback:			; CODE XREF: parse_command+6j$/;"	l
j_cmd_group	sup.a86	/^j_cmd_group:				; CODE XREF: cmd_alloc_mem+D6j$/;"	l
j_cpm_delete	bdos.a86	/^j_cpm_delete:				; CODE XREF: F_DELETE+12j$/;"	l
j_cpm_readrec	bdos.a86	/^j_cpm_readrec:				; CODE XREF: F_READ+8j$/;"	l
j_cpm_writerec	bdos.a86	/^j_cpm_writerec:				; CODE XREF: F_WRITE+8j$/;"	l
j_expand_tabs	cio.a86	/^j_expand_tabs:				; CODE XREF: C_WRITE+12j$/;"	l
j_fat_wrrec2	bdos.a86	/^j_fat_wrrec2:				; CODE XREF: F_WRITEZF+14j$/;"	l
j_fs_abort4	bdos.a86	/^j_fs_abort4:				; CODE XREF: disk$select1+14j$/;"	l
j_leave_disp	rtm.a86	/^j_leave_disp:				; CODE XREF: delay_dispatch+82j$/;"	l
j_proc_launch	sup.a86	/^j_proc_launch:				; CODE XREF: P_CHAIN+113j P_CHAIN+11Bj$/;"	l
j_rod$error	bdos.a86	/^j_rod$error:				; CODE XREF: rdbuff+60j rdbuff+72j$/;"	l
j_searchn	bdos.a86	/^j_searchn:				; CODE XREF: bdos:3706j bdos:3714j$/;"	l
j_setfcb	bdos.a86	/^j_setfcb:				; CODE XREF: bdos:3D1Bj$/;"	l
j_write_FAT	bdos.a86	/^j_write_FAT:				; CODE XREF: fat_delete+9j$/;"	l
keytabptroff	platform.equ	/^keytabptroff	equ	.0712h$/;"	d
keytabptrseg	platform.equ	/^keytabptrseg	equ	.0714h$/;"	d
kill_process	rtm.a86	/^kill_process:		; CODE XREF: delay_dispatch+6Aj$/;"	l
last_sec_count	bdos.a86	/^last_sec_count	db 0			; DATA XREF: F_repeat_call+Bw$/;"	d
lea	bdos.a86	/^		lea	di, 11[bx]$/;"	d
lea	bdos.a86	/^		lea	di, 11[si]$/;"	d
lea	bdos.a86	/^		lea	di, 12[si]$/;"	d
lea	bdos.a86	/^		lea	di, 22[di]$/;"	d
lea	bdos.a86	/^		lea	dx, 3[bx]$/;"	d
lea	sup.a86	/^		lea	di, 4[bx]$/;"	d
leap_year_test	bdos.a86	/^leap_year_test:		; CODE XREF: dos_date_to_cpm+33p$/;"	l
leave_disp	rtm.a86	/^leave_disp:				; CODE XREF: delay_dispatch+9Fj$/;"	l
lefttst	bdos.a86	/^lefttst:				; CODE XREF: get$block+44j$/;"	l
les	loader.a86	/^	les	di,		es:disklabelptr$/;"	d
lfat_fail	bdos.a86	/^lfat_fail:				; CODE XREF: load_fats+34j$/;"	l
lil_notblank	cio.a86	/^lil_notblank:				; CODE XREF: C_READSTR+5Cj$/;"	l
line_input	cio.a86	/^line_input:				; CODE XREF: C_READSTR+6j$/;"	l
line_input_1	cio.a86	/^line_input_1:				; CODE XREF: C_READSTR+15j$/;"	l
line_input_loop	cio.a86	/^line_input_loop:			; CODE XREF: C_READSTR+76j$/;"	l
linfo	bdos.a86	/^linfo		db 0			; DATA XREF: funcs_F_main+77w$/;"	d
load_cmd	cmdio.c	/^char *load_cmd(char *filename, cmd_desc *cmdfile)$/;"	f	typeref:typename:char *
load_dynarsx	sup.a86	/^load_dynarsx:				; CODE XREF: P_LOAD+93j$/;"	l
load_fail	sup.a86	/^load_fail:				; CODE XREF: P_CHAIN+ADj$/;"	l
load_fat	bdos.a86	/^load_fat:				; CODE XREF: load_fats+3Bj$/;"	l
load_fats	bdos.a86	/^load_fats:		; CODE XREF: drive_login+51p$/;"	l
load_rsx	sup.a86	/^load_rsx:		; CODE XREF: P_LOAD+46p P_LOAD+D9p$/;"	l
load_rsx_entry	sup.a86	/^load_rsx_entry:				; CODE XREF: P_LOAD+E9j$/;"	l
load_rsx_file	sup.a86	/^load_rsx_file:				; CODE XREF: P_LOAD+C8j$/;"	l
load_rsx_loop	sup.a86	/^load_rsx_loop:				; CODE XREF: P_LOAD+EFj$/;"	l
load_rsxes	sup.a86	/^load_rsxes:				; CODE XREF: P_LOAD+7Aj$/;"	l
load_staticrsx	sup.a86	/^load_staticrsx:				; CODE XREF: P_LOAD+9Fj$/;"	l
loadcpmhead	loader.a86	/^loadcpmhead:$/;"	l
loaded_cmd	sup.a86	/^loaded_cmd	dw 0			; DATA XREF: call_p_load+46w$/;"	d
loaded_cpm	sup.a86	/^loaded_cpm:				; CODE XREF: P_CHAIN+B2j$/;"	l
loaded_ok	sup.a86	/^loaded_ok:				; CODE XREF: call_p_load+41j$/;"	l
loadfont	loader.a86	/^loadfont:$/;"	l
loadkeys	loader.a86	/^loadkeys:$/;"	l
loadrsx_fail	sup.a86	/^loadrsx_fail:				; CODE XREF: P_LOAD+7Cj P_LOAD+CBj$/;"	l
loadrsx_free	sup.a86	/^loadrsx_free:				; CODE XREF: load_rsx+8Fj$/;"	l
loadrsx_freed	sup.a86	/^loadrsx_freed:				; CODE XREF: load_rsx+64j$/;"	l
loc_3E25B	loader.a86	/^loc_3E25B:$/;"	l
loc_3E26C	loader.a86	/^loc_3E26C:		$/;"	l
loc_3E278	loader.a86	/^loc_3E278:$/;"	l
loc_3E29E	loader.a86	/^loc_3E29E:$/;"	l
loc_3E2AB	loader.a86	/^loc_3E2AB:$/;"	l
loc_3E2BA	loader.a86	/^loc_3E2BA:$/;"	l
loc_3E2BD	loader.a86	/^loc_3E2BD:$/;"	l
loc_3E2D5	loader.a86	/^loc_3E2D5:$/;"	l
loc_3E30C	loader.a86	/^loc_3E30C:$/;"	l
loc_3E33F	loader.a86	/^loc_3E33F:$/;"	l
log$fxs	bdos.a86	/^log$fxs		db 0Ch,	2, 3, 4, 6, 9, 0Ah, 0Dh, 11h, 1Ch, 1Dh,	1Fh, 20h$/;"	d
login_fail	bdos.a86	/^login_fail:				; CODE XREF: compare_recno+6j$/;"	l
login_vector	bdos.a86	/^login_vector	dw 0			; DATA XREF: DRV_LOGINVECr$/;"	d
lookup_cpm	bdos.a86	/^lookup_cpm:				; CODE XREF: seek+1Cj$/;"	l
lookup_flag	rtm.a86	/^lookup_flag:		; CODE XREF: P_WAITFLAG+1p$/;"	l
lookup_haveoffs	bdos.a86	/^lookup_haveoffs:			; CODE XREF: seek+36j$/;"	l
lookup_p128	bdos.a86	/^lookup_p128:				; CODE XREF: seek+Fj$/;"	l
lookup_shift	bdos.a86	/^lookup_shift:				; CODE XREF: seek+15j$/;"	l
lp_bdos_entry	entry.a86	/^lp_bdos_entry	dw offset bdos_entry	; DATA XREF: bdos:01B9r x_dev_waitflag+2r$/;"	d
lp_dos_module	entry.a86	/^lp_dos_module	dw 0,0			; DATA XREF: bdos:007Dr P_CHAIN+A9r$/;"	d
lp_kbd_callback	entry.a86	/^lp_kbd_callback	dw offset cio_keyboard$/;"	d
lp_sysflag_chg	entry.a86	/^lp_sysflag_chg	dw offset rtm_sysflag$/;"	d
lp_timeslice	entry.a86	/^lp_timeslice	dw offset rtm_timeslice$/;"	d
lp_xios_entry	entry.a86	/^lp_xios_entry	dw 3			; Offset of XIOS entry$/;"	d
lp_xios_init	entry.a86	/^lp_xios_init	dw 0			; Offset of XIOS init function$/;"	d
lret$eq$ff	bdos.a86	/^lret$eq$ff:		; CODE XREF: chk$exit$fxs+17j$/;"	l
lrsx_free1	sup.a86	/^lrsx_free1:	push	es$/;"	l
lru_1	bdos.a86	/^lru_1		dw offset lru_2		; DATA XREF: dseg:05E7o$/;"	d
lru_2	bdos.a86	/^lru_2		dw offset lru_3		; DATA XREF: dseg:05E9o$/;"	d
lru_3	bdos.a86	/^lru_3		dw offset lru_4		; DATA XREF: dseg:05EFo$/;"	d
lru_4	bdos.a86	/^lru_4		dw offset lru_5		; DATA XREF: dseg:05F5o$/;"	d
lru_5	bdos.a86	/^lru_5		dw offset lru_6		; DATA XREF: dseg:05FBo$/;"	d
lru_6	bdos.a86	/^lru_6		dw 0			; DATA XREF: dseg:0601o$/;"	d
lru_ckdirty	bdos.a86	/^lru_ckdirty:		; CODE XREF: deblock+11Ep deblock+133p$/;"	l
lru_free	bdos.a86	/^lru_free:		; CODE XREF: copy$alv+1Fp cpm_writerec+FFp$/;"	l
lru_free_loop	bdos.a86	/^lru_free_loop:				; CODE XREF: lru_free+14j$/;"	l
lru_free_next	bdos.a86	/^lru_free_next:				; CODE XREF: lru_free+Bj$/;"	l
lru_goto_end	bdos.a86	/^lru_goto_end:				; CODE XREF: lru_touch+Aj$/;"	l
lru_touch	bdos.a86	/^lru_touch:		; CODE XREF: cpm_writerec+71p$/;"	l
lrufind_end	bdos.a86	/^lrufind_end:				; CODE XREF: lru_ckdirty+27j$/;"	l
lrufind_loop	bdos.a86	/^lrufind_loop:				; CODE XREF: lru_ckdirty+3Dj$/;"	l
lrufind_next	bdos.a86	/^lrufind_next:				; CODE XREF: lru_ckdirty+1Dj$/;"	l
lsn$add	bdos.a86	/^lsn$add		dw 0			; DATA XREF: chek$fcb+Cr set$lsnr$/;"	d
lst_owner	cio.a86	/^lst_owner	db 0FFh			; DATA XREF: kill_process+18r$/;"	d
lst_xios	cio.a86	/^lst_xios:				; CODE XREF: call_listst+2j$/;"	l
luf_badflag	rtm.a86	/^luf_badflag:				; CODE XREF: lookup_flag+7j$/;"	l
lyt_ret	bdos.a86	/^lyt_ret:				; CODE XREF: leap_year_test+Aj$/;"	l
machinetype	platform.equ	/^machinetype	equ	.0401h	$/;"	d
main	dpgen.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	exe2cmd.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
make	bdos.a86	/^make:		; CODE XREF: open$reel+4Bp$/;"	l
make$xfcb	bdos.a86	/^make$xfcb	db 0			; DATA XREF: make+22r F_MAKE+9Ew$/;"	d
make0	bdos.a86	/^make0:					; CODE XREF: make+41j make+4Fj$/;"	l
make00	bdos.a86	/^make00:					; CODE XREF: F_MAKE+9Cj F_MAKE+A6j$/;"	l
make01	bdos.a86	/^make01:					; CODE XREF: make+1Fj$/;"	l
make1	bdos.a86	/^make1:					; CODE XREF: make+45j$/;"	l
make2	bdos.a86	/^make2:					; CODE XREF: F_MAKE+BDj$/;"	l
make3a	bdos.a86	/^make3a:					; CODE XREF: F_MAKE+88j F_MAKE+8Fj$/;"	l
makea0	bdos.a86	/^makea0:					; CODE XREF: F_MAKE+3Aj F_MAKE+41j$/;"	l
makeret	bdos.a86	/^makeret:				; CODE XREF: close+8j close+Fj$/;"	l
makex04	bdos.a86	/^makex04:				; CODE XREF: F_MAKE+4Fj F_MAKE+56j$/;"	l
makex05	bdos.a86	/^makex05:				; CODE XREF: F_MAKE+75j$/;"	l
makex06	bdos.a86	/^makex06:				; CODE XREF: F_MAKE+7Dj$/;"	l
mask_fxn	entry.a86	/^mask_fxn:				; CODE XREF: bdos:0205j$/;"	l
max_cluster	bdos.a86	/^max_cluster	dw 0			; DATA XREF: drive_login+30w$/;"	d
max_x	entry.a86	/^max_x		db SCR_MAXX		; DATA XREF: input_putchar+12r$/;"	d
max_y	entry.a86	/^max_y		db SCR_MAXY		; DATA XREF: bdos:23A2o$/;"	d
maybe_dispatch	cio.a86	/^maybe_dispatch:		; CODE XREF: bdos_chk_conin+16p$/;"	l
mc_anyleft	mem.a86	/^mc_anyleft:				; CODE XREF: MC_ALLFREE+10j$/;"	l
mc_cleanprg	mem.a86	/^mc_cleanprg:		; CODE XREF: funcs_MC+12u$/;"	l
mc_noneleft	mem.a86	/^mc_noneleft:				; CODE XREF: common_alloc+19j$/;"	l
mc_success	mem.a86	/^mc_success:				; CODE XREF: funcs_MC+17j$/;"	l
mc_temp_untemp	mem.a86	/^mc_temp_untemp:		; CODE XREF: funcs_MC+12u$/;"	l
mcaf_just_anyle	mem.a86	/^mcaf_just_anyle:			; CODE XREF: MC_ALLFREE+8j$/;"	l
mcb_abs_retry	mem.a86	/^mcb_abs_retry:				; CODE XREF: allocate_block+36j$/;"	l
mcb_allocated	mem.a86	/^mcb_allocated:				; CODE XREF: allocate_block+4Dj$/;"	l
mcb_didntsplit	mem.a86	/^mcb_didntsplit:				; CODE XREF: allocate_block+61j$/;"	l
mcb_doalloc	mem.a86	/^mcb_doalloc:				; CODE XREF: allocate_block+69j$/;"	l
mcb_ext	mem.a86	/^mcb_ext		db 0			; DATA XREF: MC_ALLFREE+3r$/;"	d
mcb_ext_range	mem.a86	/^mcb_ext_range:				; CODE XREF: get_mcb_pars+29j$/;"	l
mcb_gotowner	mem.a86	/^mcb_gotowner:				; CODE XREF: allocate_block+BDj$/;"	l
mcb_keep_flag	mem.a86	/^mcb_keep_flag	db 0			; DATA XREF: get_mcb_pars+45w$/;"	d
mcb_len_max	mem.a86	/^mcb_len_max	dw 0			; DATA XREF: get_mcb_pars+19w$/;"	d
mcb_len_min	mem.a86	/^mcb_len_min	dw 0			; DATA XREF: MC_ABSMAX+3w MC_MAX+9w$/;"	d
mcb_len_overflo	sup.a86	/^mcb_len_overflo:			; CODE XREF: cmd_alloc_mem+7Aj$/;"	l
mcb_noccpdseg	mem.a86	/^mcb_noccpdseg:				; CODE XREF: get_mcb_pars+3Dj$/;"	l
mcb_nofree	mem.a86	/^mcb_nofree:				; CODE XREF: allocate_block+2Fj$/;"	l
mcb_not_abs	mem.a86	/^mcb_not_abs:				; CODE XREF: allocate_block+19j$/;"	l
mcb_not_avail	mem.a86	/^mcb_not_avail:				; CODE XREF: allocate_block+96j$/;"	l
mcb_param_err	mem.a86	/^mcb_param_err:				; CODE XREF: allocate_block+Ej$/;"	l
mcb_segment	mem.a86	/^mcb_segment	dw 0			; DATA XREF: MC_ALLOC+3w MC_MAX+3w$/;"	d
mcb_to_free	rtm.a86	/^mcb_to_free	dw	0$/;"	d
mcb_tookall	mem.a86	/^mcb_tookall:				; CODE XREF: allocate_block+A8j$/;"	l
mcb_wasfree	mem.a86	/^mcb_wasfree:				; CODE XREF: allocate_block+29j$/;"	l
mccp_end	mem.a86	/^mccp_end:				; CODE XREF: mc_cleanprg+29j$/;"	l
mccp_endlabel	mem.a86	/^mccp_endlabel:				; CODE XREF: mc_cleanprg+8j$/;"	l
mccp_label	mem.a86	/^mccp_label:				; CODE XREF: mc_cleanprg+16j$/;"	l
mccp_type1	mem.a86	/^mccp_type1:				; CODE XREF: mc_cleanprg+22j$/;"	l
mccp_type1_loop	mem.a86	/^mccp_type1_loop:			; CODE XREF: mc_cleanprg+3Aj$/;"	l
mctu_done	mem.a86	/^mctu_done:				; CODE XREF: mc_temp_untemp+10j$/;"	l
mctu_loop	mem.a86	/^mctu_loop:				; CODE XREF: mc_temp_untemp+16j$/;"	l
mctu_temp_found	mem.a86	/^mctu_temp_found:			; CODE XREF: mc_temp_untemp+6j$/;"	l
media$change	bdos.a86	/^media$change:		; CODE XREF: rdbuff+31p rd$parentdir+5Ep$/;"	l
mem_functions	mem.a86	/^mem_functions	dw offset MC_MAX	; DATA XREF: funcs_MC+12o$/;"	d
mem_init	mem.a86	/^mem_init:	retn$/;"	l
mem_main	mem.a86	/^mem_main:	push	dx$/;"	l
mem_table	equates.a86	/^mem_table	equ	word ptr .0F56h$/;"	d
merge0	bdos.a86	/^merge0:					; CODE XREF: close$fcb+5Aj$/;"	l
merged	bdos.a86	/^merged:					; CODE XREF: close$fcb+23j$/;"	l
mergerr	bdos.a86	/^mergerr:				; CODE XREF: close$fcb+3Ej$/;"	l
mergezero	bdos.a86	/^mergezero:		; CODE XREF: close$fcb+40p$/;"	l
mfontptroff	platform.equ	/^mfontptroff	equ	.070Ch$/;"	d
mfontptrseg	platform.equ	/^mfontptrseg	equ	.070Eh$/;"	d
min_len_overflo	sup.a86	/^min_len_overflo:			; CODE XREF: cmd_alloc_mem+89j$/;"	l
misc_functions	misc.a86	/^misc_functions	dw offset P_RSX_default	; DATA XREF: bdos:2317o$/;"	d
misc_init	misc.a86	/^misc_init:					; DATA XREF: dseg:0016o$/;"	l
misc_main	misc.a86	/^misc_main:				; DATA XREF: dseg:0014o$/;"	l
ml_canfree	mem.a86	/^ml_canfree:				; CODE XREF: ml_free+Dj ml_free+16j$/;"	l
ml_checksplit	mem.a86	/^ml_checksplit:		; CODE XREF: allocate_block+5Ep$/;"	l
ml_dospltail	mem.a86	/^ml_dospltail:				; CODE XREF: ml_splittail+Cj$/;"	l
ml_find_byseg	mem.a86	/^ml_find_byseg:		; CODE XREF: allocate_block+1Fp$/;"	l
ml_find_free	mem.a86	/^ml_find_free:		; CODE XREF: common_alloc+16p$/;"	l
ml_free	mem.a86	/^ml_free:		; CODE XREF: MC_FREE+16p$/;"	l
ml_freeblk	mem.a86	/^ml_freeblk:		; CODE XREF: free_temp_block+14p$/;"	l
ml_freefail	mem.a86	/^ml_freefail:				; CODE XREF: ml_free+7j ml_free+1Bj$/;"	l
ml_next	mem.a86	/^ml_next:		; CODE XREF: mc_temp_untemp+Dp$/;"	l
ml_split1	mem.a86	/^ml_split1:				; CODE XREF: ml_splitblk+10j$/;"	l
ml_split2	mem.a86	/^ml_split2:				; CODE XREF: ml_splitblk+Aj$/;"	l
ml_splitblk	mem.a86	/^ml_splitblk:		; CODE XREF: ml_free+21p ml_checksplit+Aj$/;"	l
ml_splittail	mem.a86	/^ml_splittail:		; CODE XREF: allocate_block+A5p$/;"	l
mlfbs_end	mem.a86	/^mlfbs_end:				; CODE XREF: ml_find_byseg+9j$/;"	l
mlfbs_loop	mem.a86	/^mlfbs_loop:				; CODE XREF: ml_find_byseg+Fj$/;"	l
monthDays	bdos.a86	/^monthDays	dw 0, 31, 59, 90, 120, 151, 181, 212, 243, 273,	304, 334; DATA XREF: dos_date_to_cpm+9/;"	d
mov	bdos.a86	/^		mov	dh, 80h$/;"	d
mov	bdos.a86	/^		mov	dh, cl$/;"	d
mov	bdos.a86	/^		mov	dh, dir_check_flag$/;"	d
mov	bdos.a86	/^		mov	dh, last_sec_count$/;"	d
mov	bdos.a86	/^		mov	di, 10[di]$/;"	d
mov	bdos.a86	/^		mov	di, 12[di]$/;"	d
mov	bdos.a86	/^		mov	di, 4[bp]$/;"	d
mov	bdos.a86	/^		mov	di, ax$/;"	d
mov	bdos.a86	/^		mov	di, bx		; DI->previous entry$/;"	d
mov	bdos.a86	/^		mov	di, bx$/;"	d
mov	bdos.a86	/^		mov	di, cur_drvdir$/;"	d
mov	bdos.a86	/^		mov	di, curbcba$/;"	d
mov	bdos.a86	/^		mov	di, dph_alv$/;"	d
mov	bdos.a86	/^		mov	di, dph_dirbcb$/;"	d
mov	bdos.a86	/^		mov	di, dx$/;"	d
mov	bdos.a86	/^		mov	di, fs_param_low$/;"	d
mov	bdos.a86	/^		mov	di, lsn$add$/;"	d
mov	bdos.a86	/^		mov	di, offset df$password+7; Default password$/;"	d
mov	bdos.a86	/^		mov	di, offset dpb_fatcount$/;"	d
mov	bdos.a86	/^		mov	di, offset dpb_spt$/;"	d
mov	bdos.a86	/^		mov	di, offset dph_dpb$/;"	d
mov	bdos.a86	/^		mov	di, offset errFilename$/;"	d
mov	bdos.a86	/^		mov	di, offset fcbdsk$/;"	d
mov	bdos.a86	/^		mov	di, offset fs_days$/;"	d
mov	bdos.a86	/^		mov	di, offset int13_func$/;"	d
mov	bdos.a86	/^		mov	di, offset log$fxs$/;"	d
mov	bdos.a86	/^		mov	di, offset passwd_buf$/;"	d
mov	bdos.a86	/^		mov	di, offset passwd_fcb$/;"	d
mov	bdos.a86	/^		mov	di, offset proc_fx$/;"	d
mov	bdos.a86	/^		mov	di, offset rw$fxs; Read	or write functions$/;"	d
mov	bdos.a86	/^		mov	di, offset sc$fxs; Close or search functions$/;"	d
mov	bdos.a86	/^		mov	di, offset user_fcb$/;"	d
mov	bdos.a86	/^		mov	di, offset user_fcb+0Ch$/;"	d
mov	bdos.a86	/^		mov	di, offset user_fcb+1$/;"	d
mov	bdos.a86	/^		mov	di, offset user_fcb+10h$/;"	d
mov	bdos.a86	/^		mov	di, offset user_fcb+14h$/;"	d
mov	bdos.a86	/^		mov	di, offset user_fcb+21h$/;"	d
mov	bdos.a86	/^		mov	di, offset user_fcb+8$/;"	d
mov	bdos.a86	/^		mov	di, offset userdma$/;"	d
mov	bdos.a86	/^		mov	di, p_dirent$/;"	d
mov	bdos.a86	/^		mov	di, seqbcba$/;"	d
mov	bdos.a86	/^		mov	di, si		; Yes. Copy the	template.$/;"	d
mov	bdos.a86	/^		mov	di, si$/;"	d
mov	bdos.a86	/^		mov	di, userdma$/;"	d
mov	bdos.a86	/^		mov	dl, '1'$/;"	d
mov	bdos.a86	/^		mov	dl, 0Ch$/;"	d
mov	bdos.a86	/^		mov	dl, 1$/;"	d
mov	bdos.a86	/^		mov	dl, 10h$/;"	d
mov	bdos.a86	/^		mov	dl, [bx+si]$/;"	d
mov	bdos.a86	/^		mov	dl, [bx]$/;"	d
mov	bdos.a86	/^		mov	dl, ah$/;"	d
mov	bdos.a86	/^		mov	dl, al$/;"	d
mov	bdos.a86	/^		mov	dl, bcb_record_h$/;"	d
mov	bdos.a86	/^		mov	dl, byte ptr dcnt$/;"	d
mov	bdos.a86	/^		mov	dl, ch$/;"	d
mov	bdos.a86	/^		mov	dl, dpb_exm$/;"	d
mov	bdos.a86	/^		mov	dl, dpb_phm$/;"	d
mov	bdos.a86	/^		mov	dl, int13_drive$/;"	d
mov	bdos.a86	/^		mov	dl, user_fcb+20h$/;"	d
mov	bdos.a86	/^		mov	dl, user_fcb+23h$/;"	d
mov	bdos.a86	/^		mov	ds, ax$/;"	d
mov	bdos.a86	/^		mov	ds, bx$/;"	d
mov	bdos.a86	/^		mov	ds, dx$/;"	d
mov	bdos.a86	/^		mov	ds, fs_param_ds$/;"	d
mov	bdos.a86	/^		mov	ds, rlr$/;"	d
mov	bdos.a86	/^		mov	ds, userdmaseg$/;"	d
mov	bdos.a86	/^		mov	dx, 0FFFFh$/;"	d
mov	bdos.a86	/^		mov	dx, 0Fh$/;"	d
mov	bdos.a86	/^		mov	dx, 1$/;"	d
mov	bdos.a86	/^		mov	dx, 1001h	; Scan FCB disk	map backwards$/;"	d
mov	bdos.a86	/^		mov	dx, 20h$/;"	d
mov	bdos.a86	/^		mov	dx, 26[di]$/;"	d
mov	bdos.a86	/^		mov	dx, 30[bx]	; DXAX = file size$/;"	d
mov	bdos.a86	/^		mov	dx, 30[bx]	; File size$/;"	d
mov	bdos.a86	/^		mov	dx, 30[bx]$/;"	d
mov	bdos.a86	/^		mov	dx, 30[si]$/;"	d
mov	bdos.a86	/^		mov	dx, 365$/;"	d
mov	bdos.a86	/^		mov	dx, [bx]$/;"	d
mov	bdos.a86	/^		mov	dx, addr_bdos_fn$/;"	d
mov	bdos.a86	/^		mov	dx, addr_cpm_error$/;"	d
mov	bdos.a86	/^		mov	dx, addr_file$/;"	d
mov	bdos.a86	/^		mov	dx, arecord1$/;"	d
mov	bdos.a86	/^		mov	dx, ax$/;"	d
mov	bdos.a86	/^		mov	dx, bcb_record$/;"	d
mov	bdos.a86	/^		mov	dx, buffa$/;"	d
mov	bdos.a86	/^		mov	dx, bx$/;"	d
mov	bdos.a86	/^		mov	dx, cx$/;"	d
mov	bdos.a86	/^		mov	dx, dcnt$/;"	d
mov	bdos.a86	/^		mov	dx, di$/;"	d
mov	bdos.a86	/^		mov	dx, dir_entries$/;"	d
mov	bdos.a86	/^		mov	dx, dpb_drm$/;"	d
mov	bdos.a86	/^		mov	dx, drec$/;"	d
mov	bdos.a86	/^		mov	dx, es:[di]$/;"	d
mov	bdos.a86	/^		mov	dx, fs_param_low$/;"	d
mov	bdos.a86	/^		mov	dx, login_vector$/;"	d
mov	bdos.a86	/^		mov	dx, offset bcb_drive$/;"	d
mov	bdos.a86	/^		mov	dx, offset date_days$/;"	d
mov	bdos.a86	/^		mov	dx, offset errFilename$/;"	d
mov	bdos.a86	/^		mov	dx, offset fcb_randrec_num$/;"	d
mov	bdos.a86	/^		mov	dx, offset passwd_buf$/;"	d
mov	bdos.a86	/^		mov	dx, offset passwd_buf+4$/;"	d
mov	bdos.a86	/^		mov	dx, offset strColonSpace$/;"	d
mov	bdos.a86	/^		mov	dx, offset user_fcb$/;"	d
mov	bdos.a86	/^		mov	dx, readonly_vector$/;"	d
mov	bdos.a86	/^		mov	dx, removable_drive$/;"	d
mov	bdos.a86	/^		mov	dx, searcha	; Not end of dir, scan for match$/;"	d
mov	bdos.a86	/^		mov	dx, si		; If not, fine.$/;"	d
mov	bdos.a86	/^		mov	dx, si$/;"	d
mov	bdos.a86	/^		mov	dx, word ptr fat_file_ptr+2$/;"	d
mov	bdos.a86	/^		mov	dx, word ptr fs_buffer$/;"	d
mov	bdos.a86	/^		mov	dx, word ptr user_fcb+16h$/;"	d
mov	bdos.a86	/^		mov	dx, word ptr user_fcb+1Eh$/;"	d
mov	ccpldr.a86	/^		mov	di, addr_user	;Check if the command entered is USER$/;"	d
mov	ccpldr.a86	/^		mov	dl, 0FEh$/;"	d
mov	ccpldr.a86	/^		mov	dl, ccp_user$/;"	d
mov	ccpldr.a86	/^		mov	dx, addr_no_ccp$/;"	d
mov	ccpldr.a86	/^		mov	dx, ds$/;"	d
mov	ccpldr.a86	/^		mov	dx, offset ccpl_inpbuf+2$/;"	d
mov	ccpldr.a86	/^		mov	dx, offset ccpl_pfcb$/;"	d
mov	cio.a86	/^		mov	di, [di]$/;"	d
mov	cio.a86	/^		mov	di, buffer_curpos$/;"	d
mov	cio.a86	/^		mov	di, buffer_end0$/;"	d
mov	cio.a86	/^		mov	di, buffer_end1$/;"	d
mov	cio.a86	/^		mov	di, buffer_start0$/;"	d
mov	cio.a86	/^		mov	di, dx$/;"	d
mov	cio.a86	/^		mov	di, offset sysvar_132$/;"	d
mov	cio.a86	/^		mov	di, offset sysvar_132; Previous	line$/;"	d
mov	cio.a86	/^		mov	di, si$/;"	d
mov	cio.a86	/^		mov	ds, bx$/;"	d
mov	cio.a86	/^		mov	ds, es:userDS$/;"	d
mov	cio.a86	/^		mov	dx, 3[si]$/;"	d
mov	cio.a86	/^		mov	dx, cx$/;"	d
mov	entry.a86	/^		mov	di, ax		; AL = function	class$/;"	d
mov	entry.a86	/^		mov	di, offset cpu_vectors$/;"	d
mov	entry.a86	/^		mov	di, offset proc_int0$/;"	d
mov	entry.a86	/^		mov	ds, ax$/;"	d
mov	entry.a86	/^		mov	ds, bx$/;"	d
mov	entry.a86	/^		mov	ds, cs:bdos_dseg$/;"	d
mov	entry.a86	/^		mov	ds, es:userDS$/;"	d
mov	entry.a86	/^		mov	ds, si$/;"	d
mov	entry.a86	/^		mov	dx, cx$/;"	d
mov	loader.a86	/^	mov	di,		bx$/;"	d
mov	loader.a86	/^	mov	dl,		es:machinetype$/;"	d
mov	loader.a86	/^	mov	ds,		ax$/;"	d
mov	loader.a86	/^	mov	dx,		cs:ramtop$/;"	d
mov	loader.a86	/^	mov	dx,		ds$/;"	d
mov	loader.a86	/^	mov	dx,		es:usercodearea$/;"	d
mov	mem.a86	/^		mov	di, offset mem_table-6$/;"	d
mov	mem.a86	/^		mov	di, si$/;"	d
mov	mem.a86	/^		mov	dx, 8$/;"	d
mov	mem.a86	/^		mov	dx, [di]$/;"	d
mov	mem.a86	/^		mov	dx, [si]$/;"	d
mov	mem.a86	/^		mov	dx, ax		; DX = first requested para$/;"	d
mov	mem.a86	/^		mov	dx, ax$/;"	d
mov	mem.a86	/^		mov	dx, es:proc_flags$/;"	d
mov	mem.a86	/^		mov	dx, mcb_len_max$/;"	d
mov	mem.a86	/^		mov	dx, mcb_segment	; Find the memory list entry$/;"	d
mov	mem.a86	/^		mov	dx, mcb_segment$/;"	d
mov	misc.a86	/^		mov	di, cs:2[bx+di]$/;"	d
mov	misc.a86	/^		mov	di, dx$/;"	d
mov	misc.a86	/^		mov	di, offset date_days$/;"	d
mov	misc.a86	/^		mov	di, offset private_sysvars$/;"	d
mov	misc.a86	/^		mov	di, offset public_sysvars$/;"	d
mov	misc.a86	/^		mov	ds, dx$/;"	d
mov	misc.a86	/^		mov	ds, es:userDS	; Caller DS$/;"	d
mov	misc.a86	/^		mov	ds, es:userDS$/;"	d
mov	misc.a86	/^		mov	dx, 1$/;"	d
mov	misc.a86	/^		mov	dx, ds		; Our DS$/;"	d
mov	misc.a86	/^		mov	dx, es$/;"	d
mov	rtm.a86	/^		mov	di, ax$/;"	d
mov	rtm.a86	/^		mov	di, es:proc_di$/;"	d
mov	rtm.a86	/^		mov	di, offset INT_E0$/;"	d
mov	rtm.a86	/^		mov	di, offset proc_int0$/;"	d
mov	rtm.a86	/^		mov	di, offset proc_passwd+6; BDOS pointer - 4$/;"	d
mov	rtm.a86	/^		mov	ds, ax$/;"	d
mov	rtm.a86	/^		mov	ds, bx$/;"	d
mov	rtm.a86	/^		mov	ds, cs:bdos_dseg$/;"	d
mov	rtm.a86	/^		mov	ds, rlr$/;"	d
mov	rtm.a86	/^		mov	dx, 4$/;"	d
mov	rtm.a86	/^		mov	dx, ax$/;"	d
mov	rtm.a86	/^		mov	dx, cx$/;"	d
mov	rtm.a86	/^		mov	dx, es$/;"	d
mov	rtm.a86	/^		mov	dx, es:proc_countdown$/;"	d
mov	rtm.a86	/^		mov	dx, es:proc_dx$/;"	d
mov	rtm.a86	/^		mov	dx, offset mcb_to_free$/;"	d
mov	sup.a86	/^		mov	di, 51h$/;"	d
mov	sup.a86	/^		mov	di, 54h$/;"	d
mov	sup.a86	/^		mov	di, 5Ch		; Copy parsed FCB$/;"	d
mov	sup.a86	/^		mov	di, 5Ch$/;"	d
mov	sup.a86	/^		mov	di, 6$/;"	d
mov	sup.a86	/^		mov	di, 6Ch		; Second FCB$/;"	d
mov	sup.a86	/^		mov	di, 81h$/;"	d
mov	sup.a86	/^		mov	di, ax$/;"	d
mov	sup.a86	/^		mov	di, bx$/;"	d
mov	sup.a86	/^		mov	di, offset INT_E0$/;"	d
mov	sup.a86	/^		mov	di, offset cmd_load_info$/;"	d
mov	sup.a86	/^		mov	di, offset cmd_mcb_seg$/;"	d
mov	sup.a86	/^		mov	di, offset command_fcb$/;"	d
mov	sup.a86	/^		mov	di, offset commandline$/;"	d
mov	sup.a86	/^		mov	di, offset p_load_fcb$/;"	d
mov	sup.a86	/^		mov	di, offset proc_name$/;"	d
mov	sup.a86	/^		mov	di, offset proc_passwd+6; BDOS pointer - 4$/;"	d
mov	sup.a86	/^		mov	di, offset rsx_data1$/;"	d
mov	sup.a86	/^		mov	di, offset search_path$/;"	d
mov	sup.a86	/^		mov	di, offset search_path+3$/;"	d
mov	sup.a86	/^		mov	di, offset terminators$/;"	d
mov	sup.a86	/^		mov	di, si$/;"	d
mov	sup.a86	/^		mov	dl, ah$/;"	d
mov	sup.a86	/^		mov	ds, ax$/;"	d
mov	sup.a86	/^		mov	ds, bx$/;"	d
mov	sup.a86	/^		mov	ds, dx$/;"	d
mov	sup.a86	/^		mov	ds, es:userDS$/;"	d
mov	sup.a86	/^		mov	ds, es:word ptr proc_dma+2$/;"	d
mov	sup.a86	/^		mov	dx, 10[bx]$/;"	d
mov	sup.a86	/^		mov	dx, 2[bx]$/;"	d
mov	sup.a86	/^		mov	dx, 8$/;"	d
mov	sup.a86	/^		mov	dx, [di]$/;"	d
mov	sup.a86	/^		mov	dx, ax$/;"	d
mov	sup.a86	/^		mov	dx, bx$/;"	d
mov	sup.a86	/^		mov	dx, cmd_mcb_seg$/;"	d
mov	sup.a86	/^		mov	dx, cx$/;"	d
mov	sup.a86	/^		mov	dx, ds$/;"	d
mov	sup.a86	/^		mov	dx, es$/;"	d
mov	sup.a86	/^		mov	dx, msg_cannot_load$/;"	d
mov	sup.a86	/^		mov	dx, offset cmd_header$/;"	d
mov	sup.a86	/^		mov	dx, offset cmd_mcb_seg$/;"	d
mov	sup.a86	/^		mov	dx, offset command_fcb$/;"	d
mov	sup.a86	/^		mov	dx, offset command_pfcb$/;"	d
mov	sup.a86	/^		mov	dx, offset p_load_fcb$/;"	d
mov	sup.a86	/^		mov	dx, offset rsx_list$/;"	d
mov	sup.a86	/^		mov	dx, rsx_offset$/;"	d
mov	sup.a86	/^		mov	dx, si		; MC_ABSMAX$/;"	d
mov	sup.a86	/^		mov	dx, si$/;"	d
mov	sup.a86	/^		mov	dx, word ptr command_fcb+21h$/;"	d
move	bdos.a86	/^move:		; CODE XREF: get_record_coun+7j$/;"	l
mrg$rc1	bdos.a86	/^mrg$rc1:				; CODE XREF: close$fcb+76j$/;"	l
mrg$rc2	bdos.a86	/^mrg$rc2:				; CODE XREF: close$fcb+7Aj$/;"	l
msg_cannot_load	equates.a86	/^msg_cannot_load	equ	word ptr .1016h$/;"	d
mul	bdos.a86	/^		mul	dx$/;"	d
mvbytes	exe2cmd.c	/^void mvbytes(FILE *fpexe, FILE *fpcmd, long count)$/;"	f	typeref:typename:void
my_bcbs	bdos.a86	/^my_bcbs		db 0			; DATA XREF: get$bcba+1Cw get$bcba+4Bw$/;"	d
mzero_ret	bdos.a86	/^mzero_ret:				; CODE XREF: mergezero+3j close$fcb+Fj$/;"	l
n_flphdd	platform.equ	/^n_flphdd	equ	.0416h$/;"	d
name_done	sup.a86	/^name_done:				; CODE XREF: F_PARSE+62j F_PARSE+67j$/;"	l
names_per_block	bdos.a86	/^names_per_block	dw 0			; DATA XREF: rd$subdir1+20r$/;"	d
nearby_cluster	bdos.a86	/^nearby_cluster	dw 0			; DATA XREF: fat_make+30w fat_make+42r$/;"	d
need_new_dirdat	bdos.a86	/^need_new_dirdat:			; CODE XREF: cpm_opendir+DDj$/;"	l
newdir_cluster	bdos.a86	/^newdir_cluster	dw 0			; DATA XREF: fat_make+39w fat_make+48r$/;"	d
next_rsx	sup.a86	/^next_rsx:				; CODE XREF: P_LOAD+97j P_LOAD+A3j$/;"	l
next_runnable	rtm.a86	/^next_runnable:		; CODE XREF: P_0205+12p delay_dispatch+F2p$/;"	l
no_33_fcb	bdos.a86	/^no_33_fcb:				; CODE XREF: bdos_switch+84j$/;"	l
no_36_fcb	bdos.a86	/^no_36_fcb:				; CODE XREF: bdos_switch+89j$/;"	l
no_8087_needed	sup.a86	/^no_8087_needed:				; CODE XREF: P_LOAD+10Fj P_LOAD+116j$/;"	l
no_bcb_chain	bdos.a86	/^no_bcb_chain:				; CODE XREF: discard$data+4j$/;"	l
no_bytesize	bdos.a86	/^no_bytesize:				; CODE XREF: F_ATTRIB+32j$/;"	l
no_coalesce	mem.a86	/^no_coalesce:				; CODE XREF: ml_freeblk+14j$/;"	l
no_coalesce2	mem.a86	/^no_coalesce2:				; CODE XREF: ml_freeblk+33j$/;"	l
no_cwd_found	bdos.a86	/^no_cwd_found:				; CODE XREF: cwd_for_drive+Cj$/;"	l
no_drive	sup.a86	/^no_drive:				; CODE XREF: F_PARSE+29j$/;"	l
no_first_passwd	sup.a86	/^no_first_passwd:			; CODE XREF: P_CHAIN+133j$/;"	l
no_free_ml	mem.a86	/^no_free_ml:				; CODE XREF: ml_find_free+3j$/;"	l
no_media_flag	bdos.a86	/^no_media_flag:				; CODE XREF: check$media+Bj$/;"	l
no_rsxes	sup.a86	/^no_rsxes:				; CODE XREF: hookup_rsxes+9j$/;"	l
no_second_passw	sup.a86	/^no_second_passw:			; CODE XREF: P_CHAIN+16Cj$/;"	l
no_stamp2	bdos.a86	/^no_stamp2:				; CODE XREF: update$stamp+19j$/;"	l
no_tail	sup.a86	/^no_tail:				; CODE XREF: command_gettail+2j$/;"	l
nonfat_delete	bdos.a86	/^nonfat_delete:				; CODE XREF: F_DELETE+8j$/;"	l
nop_iret	misc.a86	/^nop_iret:$/;"	l
nopblock	bdos.a86	/^nopblock:				; CODE XREF: cpm_writerec+55j$/;"	l
noselect	bdos.a86	/^noselect:				; CODE XREF: curselect+7j curselect+Cj$/;"	l
noselect0	bdos.a86	/^noselect0:				; CODE XREF: F_SFIRST+19p$/;"	l
not	bdos.a86	/^		not	dh$/;"	d
not	bdos.a86	/^		not	dl$/;"	d
not_abs_endscan	mem.a86	/^not_abs_endscan:			; CODE XREF: allocate_block+78j$/;"	l
not_abs_next	mem.a86	/^not_abs_next:				; CODE XREF: allocate_block+89j$/;"	l
not_abs_small	mem.a86	/^not_abs_small:				; CODE XREF: allocate_block+7Fj$/;"	l
not_detach1	sup.a86	/^not_detach1:				; CODE XREF: Callback_103+1Cj$/;"	l
not_detach2	sup.a86	/^not_detach2:				; CODE XREF: Callback_103+66j$/;"	l
not_detach3	sup.a86	/^not_detach3:	call	call_p_load$/;"	l
not_detach4	sup.a86	/^not_detach4:	mov	ax, ds$/;"	l
not_drv_logged	bdos.a86	/^not_drv_logged:		; CODE XREF: DRV_FLUSH+2Cp$/;"	l
not_existing	cio.a86	/^not_existing:				; CODE XREF: C_READSTR+52j$/;"	l
not_expired	rtm.a86	/^not_expired:				; CODE XREF: check_timeslice+4j$/;"	l
not_for_dir	bdos.a86	/^not_for_dir:				; CODE XREF: F_do_call+9j F_do_call+10j$/;"	l
not_in_subdir	bdos.a86	/^not_in_subdir:				; CODE XREF: fat_close+Aj$/;"	l
not_modnum	bdos.a86	/^not_modnum:				; CODE XREF: bdos:36E1j$/;"	l
not_opening_dot	bdos.a86	/^not_opening_dot:			; CODE XREF: cpm_opendir+10Cj$/;"	l
not_proc_var	misc.a86	/^not_proc_var:				; CODE XREF: S_SYSVAR+33j$/;"	l
notemp	sup.a86	/^notemp:					; CODE XREF: Callback_103+11Dj$/;"	l
notemp0	sup.a86	/^notemp0:	mov	ccp_dseg, bx	$/;"	l
noupdate	bdos.a86	/^noupdate:				; CODE XREF: cpm_writerec+12Fj$/;"	l
nowrite	bdos.a86	/^nowrite:		; CODE XREF: check$writep r$dir+63p$/;"	l
nxtrun_1	rtm.a86	/^nxtrun_1:				; CODE XREF: next_runnable+17j$/;"	l
nxtrun_2	rtm.a86	/^nxtrun_2:				; CODE XREF: next_runnable+6j$/;"	l
off_A15_14	entry.a86	/^off_A15_14	dw offset misc_main$/;"	d
off_A15_18	entry.a86	/^off_A15_18	dw offset bdos_main$/;"	d
off_A15_1A	entry.a86	/^off_A15_1A	dw offset bdos_init$/;"	d
open	bdos.a86	/^open:		; CODE XREF: cpm_rwrand+89p$/;"	l
open$copy	bdos.a86	/^open$copy:		; CODE XREF: open$reel+52p$/;"	l
open$r$error	bdos.a86	/^open$r$error:				; CODE XREF: open$reel+37j$/;"	l
open$reel	bdos.a86	/^open$reel:		; CODE XREF: bdos:3D06p cpm_writerec+37p$/;"	l
open$reel0	bdos.a86	/^open$reel0:				; CODE XREF: open$reel+2Cj$/;"	l
open$reel00	bdos.a86	/^open$reel00:				; CODE XREF: open$reel+12j$/;"	l
open$reel01	bdos.a86	/^open$reel01:				; CODE XREF: open$reel+23j$/;"	l
open$reel1	bdos.a86	/^open$reel1:				; CODE XREF: open$reel+42j$/;"	l
open$reel1a	bdos.a86	/^open$reel1a:				; CODE XREF: open$reel+50j$/;"	l
open$reel2	bdos.a86	/^open$reel2:				; CODE XREF: open$reel+A2j$/;"	l
open$reel3	bdos.a86	/^open$reel3:				; CODE XREF: open$reel+14j$/;"	l
open$reel3a	bdos.a86	/^open$reel3a:				; CODE XREF: open$reel+95j$/;"	l
open$reel4	bdos.a86	/^open$reel4:				; CODE XREF: open$reel+88j$/;"	l
open1	bdos.a86	/^open1:					; CODE XREF: F_OPEN+6Ap$/;"	l
open_G01	bdos.a86	/^open_G01	db 0			; DATA XREF: cpm_opendir+18Bw$/;"	d
open_fail	bdos.a86	/^open_fail:				; CODE XREF: fat_open+2Bj fat_open+30j$/;"	l
open_file	bdos.a86	/^open_file:				; CODE XREF: cpm_opendir+2Bj$/;"	l
open_file1	bdos.a86	/^open_file1:				; CODE XREF: cpm_opendir+13Aj$/;"	l
open_file2	bdos.a86	/^open_file2:				; CODE XREF: cpm_opendir+144j$/;"	l
open_file3	bdos.a86	/^open_file3:				; CODE XREF: cpm_opendir+161j$/;"	l
open_file4	bdos.a86	/^open_file4:				; CODE XREF: cpm_opendir+178j$/;"	l
open_got_dirent	bdos.a86	/^open_got_dirent:			; CODE XREF: fat_open+24j cpm_opendir+1Fj$/;"	l
open_unknown	bdos.a86	/^open_unknown	db 0			; DATA XREF: open$reel+74w$/;"	d
opendir_got	bdos.a86	/^opendir_got:				; CODE XREF: cpm_opendir+29j$/;"	l
opendir_setcwd	bdos.a86	/^opendir_setcwd:				; CODE XREF: cpm_opendir+43j$/;"	l
openreel_S2	bdos.a86	/^openreel_S2	db 0			; DATA XREF: open$reel+3w open$reel+66r$/;"	d
openx	bdos.a86	/^openx:		; CODE XREF: F_OPEN+40p F_OPEN+6Dp$/;"	l
openx0	bdos.a86	/^openx0:					; CODE XREF: openx+18j	openx+1Fj$/;"	l
openx0a	bdos.a86	/^openx0a:				; CODE XREF: openx+34j	openx+3Bj$/;"	l
openx0b	bdos.a86	/^openx0b:				; CODE XREF: openx+48j$/;"	l
openx0c	bdos.a86	/^openx0c:				; CODE XREF: openx+7Dj$/;"	l
openx1	bdos.a86	/^openx1:					; CODE XREF: openx+6Aj	openx+6Fj$/;"	l
openx1a	bdos.a86	/^openx1a:				; CODE XREF: openx+2Fj	openx+40j$/;"	l
openx2	bdos.a86	/^openx2:		; CODE XREF: F_MAKE+EAp$/;"	l
openx2_ret	bdos.a86	/^openx2_ret:				; CODE XREF: openx2+3j$/;"	l
openxa	bdos.a86	/^openxa:					; CODE XREF: openx+Bj$/;"	l
openxret	bdos.a86	/^openxret:				; CODE XREF: openx+4Dj$/;"	l
or	bdos.a86	/^		or	dh, dh$/;"	d
or	bdos.a86	/^		or	dl, al$/;"	d
or	bdos.a86	/^		or	dl, bh$/;"	d
or	bdos.a86	/^		or	dl, dl$/;"	d
or	bdos.a86	/^		or	dx, dx		; Are we copying an existing structure?$/;"	d
or	bdos.a86	/^		or	dx, dx$/;"	d
or	misc.a86	/^		or	dl, dl$/;"	d
or	sup.a86	/^		or	dx, dx$/;"	d
p_code_get	misc.a86	/^p_code_get:				; CODE XREF: P_CODE+1j$/;"	l
p_dirent	bdos.a86	/^p_dirent	dw 0			; DATA XREF: srch_fat+7Er srch_fat+92r$/;"	d
p_load_end	sup.a86	/^p_load_end:				; CODE XREF: P_LOAD+33j P_LOAD+4Bj$/;"	l
p_load_fcb	sup.a86	/^p_load_fcb	rb 24h			; DATA XREF: rsx_findo	P_LOAD+10o$/;"	l
p_load_ok	sup.a86	/^p_load_ok:				; CODE XREF: P_LOAD+50j P_LOAD+124j$/;"	l
p_load_rsxes	sup.a86	/^p_load_rsxes:$/;"	l
p_lru_first	bdos.a86	/^p_lru_first	dw offset lru_1		; DATA XREF: lru_toucho lru_touch+1Ew$/;"	d
pack_b1	bdos.a86	/^pack_b1:				; CODE XREF: pack_bcd+Bj$/;"	l
pack_b2	bdos.a86	/^pack_b2:				; CODE XREF: pack_bcd+4j$/;"	l
pack_bcd	bdos.a86	/^pack_bcd:		; CODE XREF: dos_date_to_cpm+3Fp$/;"	l
page_mode	entry.a86	/^page_mode	db 0			; DATA XREF: bdos:23A6o$/;"	d
parse_command	sup.a86	/^parse_command:		; CODE XREF: P_CHAIN+1Bp P_CHAIN+115p$/;"	l
parse_expanded	sup.a86	/^parse_expanded:				; CODE XREF: parse_namepart+13j$/;"	l
parse_namepart	sup.a86	/^parse_namepart:		; CODE XREF: F_PARSE+5Cp F_PARSE+7Ep$/;"	l
parse_np_ret	sup.a86	/^parse_np_ret:				; CODE XREF: parse_namepart+5j$/;"	l
parse_onechar	sup.a86	/^parse_onechar:				; CODE XREF: parse_namepart+9j$/;"	l
passwd_buf	bdos.a86	/^passwd_buf	rb 10h$/;"	l
passwd_done	sup.a86	/^passwd_done:				; CODE XREF: F_PARSE+90j F_PARSE+B5j$/;"	l
passwd_fcb	bdos.a86	/^passwd_fcb	rb 10h$/;"	l
peek	exe2cmd.c	/^unsigned short peek(int offset)$/;"	f	typeref:typename:unsigned short
peekw	cmdio.c	/^word peekw(byte *base, word a)$/;"	f	typeref:typename:word
phy$off	bdos.a86	/^phy$off		db 0			; DATA XREF: get$bcba+6Cr get$bcba+EEr$/;"	d
pmr_1	rtm.a86	/^pmr_1:					; CODE XREF: proc_makeready+6j$/;"	l
pokew	cmdio.c	/^void pokew(byte *base, word a, word v)$/;"	f	typeref:typename:void
pop	bdos.a86	/^		pop	di$/;"	d
pop	bdos.a86	/^		pop	ds$/;"	d
pop	bdos.a86	/^		pop	dx$/;"	d
pop	cio.a86	/^		pop	di$/;"	d
pop	cio.a86	/^		pop	ds$/;"	d
pop	cio.a86	/^		pop	dx$/;"	d
pop	entry.a86	/^		pop	di$/;"	d
pop	entry.a86	/^		pop	ds$/;"	d
pop	entry.a86	/^		pop	dx$/;"	d
pop	mem.a86	/^		pop	di$/;"	d
pop	mem.a86	/^		pop	dx$/;"	d
pop	misc.a86	/^		pop	ds$/;"	d
pop	rtm.a86	/^		pop	di$/;"	d
pop	rtm.a86	/^		pop	ds$/;"	d
pop	rtm.a86	/^		pop	dx$/;"	d
pop	sup.a86	/^		pop	di$/;"	d
pop	sup.a86	/^		pop	ds$/;"	d
pop	sup.a86	/^		pop	dx$/;"	d
post_multicall	bdos.a86	/^post_multicall:				; CODE XREF: bdos_switch+A8j$/;"	l
pq_disk	entry.a86	/^pq_disk		dw offset pq_loader	; DATA XREF: get_proc_dskdat+5o$/;"	d
pq_error	entry.a86	/^pq_error	dw 8Ah			; DATA XREF: funcs_F_main+136o$/;"	d
pq_filesystem	entry.a86	/^pq_filesystem	dw offset pq_error	; DATA XREF: funcs_F_main+8o$/;"	d
pq_leave_1	rtm.a86	/^pq_leave_1:				; CODE XREF: P_0205+5j$/;"	l
pq_loader	entry.a86	/^pq_loader	dw offset pq_filesystem$/;"	d
pq_memmgr	entry.a86	/^pq_memmgr	rw 4		; DATA XREF: funcs_MC+2o funcs_MC+24o$/;"	l
private_sysvars	misc.a86	/^private_sysvars	dw 2001h		; DATA XREF: S_SYSVAR+1Co$/;"	d
proc$discard	bdos.a86	/^proc$discard:		; CODE XREF: DRV_FLUSH+6Fp$/;"	l
proc1	proctbl.a86	/^proc1		dw 0	$/;"	d
proc2	proctbl.a86	/^proc2		dw	0$/;"	d
proc3	proctbl.a86	/^proc3		dw	0$/;"	d
proc4	proctbl.a86	/^proc4		dw	0$/;"	d
proc_ax	equates.a86	/^proc_ax		equ	word ptr .1Eh$/;"	d
proc_background	equates.a86	/^proc_background	equ	byte ptr .18h$/;"	d
proc_bdos_offs	equates.a86	/^proc_bdos_offs	equ	word ptr .52h$/;"	d
proc_bdos_seg	equates.a86	/^proc_bdos_seg	equ	word ptr .54h$/;"	d
proc_bp	equates.a86	/^proc_bp		equ	word ptr .2Ah$/;"	d
proc_bx	equates.a86	/^proc_bx		equ	word ptr .20h$/;"	d
proc_can_run	rtm.a86	/^proc_can_run:				; CODE XREF: delay_dispatch+8Aj$/;"	l
proc_conmode	equates.a86	/^proc_conmode	equ	word ptr .16h$/;"	d
proc_count	entry.a86	/^proc_count	db 1			; DATA XREF: get_new_process+1Dw$/;"	d
proc_countdown	equates.a86	/^proc_countdown	equ	word ptr .50h$/;"	d
proc_cpm_stack	equates.a86	/^proc_cpm_stack	equ	byte ptr .100h$/;"	d
proc_cx	equates.a86	/^proc_cx		equ	word ptr .22h$/;"	d
proc_delimiter	equates.a86	/^proc_delimiter	equ	byte ptr .19h$/;"	d
proc_di	equates.a86	/^proc_di		equ	word ptr .26h$/;"	d
proc_dirname	equates.a86	/^proc_dirname	equ	word ptr .74h$/;"	d
proc_dma	equates.a86	/^proc_dma	equ	dword ptr .38h$/;"	d
proc_doterm	rtm.a86	/^proc_doterm:				; CODE XREF: P_020A+2j$/;"	l
proc_drive	equates.a86	/^proc_drive	equ	byte ptr .36h$/;"	d
proc_dx	equates.a86	/^proc_dx		equ	word ptr .24h$/;"	d
proc_enter_con	cio.a86	/^proc_enter_con:		; CODE XREF: C_READ+16p C_WRITE+8p$/;"	l
proc_errcode	equates.a86	/^proc_errcode	equ	word ptr .14h$/;"	d
proc_errmode	equates.a86	/^proc_errmode	equ	byte ptr .46h$/;"	d
proc_es	equates.a86	/^proc_es		equ	word ptr .2Ch$/;"	d
proc_find1st	equates.a86	/^proc_find1st	equ	dword ptr .3Eh$/;"	d
proc_flags	equates.a86	/^proc_flags	equ	word ptr .06h		; Bit 0 => killed$/;"	d
proc_free_rsx	rtm.a86	/^proc_free_rsx:				; CODE XREF: proc_term_bg+1Aj$/;"	l
proc_fx	equates.a86	/^proc_fx		equ	byte ptr .3Ch$/;"	d
proc_incpm	equates.a86	/^proc_incpm	equ	byte ptr .10h$/;"	d
proc_indisk	equates.a86	/^proc_indisk	equ	byte ptr .13h$/;"	d
proc_int0	equates.a86	/^proc_int0	equ	dword ptr .56h$/;"	d
proc_intfunc	equates.a86	/^proc_intfunc	equ	byte ptr .11h$/;"	d
proc_intmod	equates.a86	/^proc_intmod	equ	byte ptr .12h$/;"	d
proc_launch	sup.a86	/^proc_launch:				; CODE XREF: P_CHAIN+177j$/;"	l
proc_makeready	rtm.a86	/^proc_makeready:		; CODE XREF: delay_dispatch+10Bp$/;"	l
proc_multisec	equates.a86	/^proc_multisec	equ	byte ptr .47h$/;"	d
proc_name	equates.a86	/^proc_name	equ	byte ptr .08h$/;"	d
proc_nextready	equates.a86	/^proc_nextready	equ	word ptr .00h		;Link to next ready process$/;"	d
proc_nextseg	equates.a86	/^proc_nextseg	equ	word ptr .02h		;Link to next process in $/;"	d
proc_notbusy	rtm.a86	/^proc_notbusy:				; CODE XREF: is_proc_busy+7j$/;"	l
proc_ok	rtm.a86	/^proc_ok:				; CODE XREF: bdos:0EDFj$/;"	l
proc_onblock	equates.a86	/^proc_onblock	equ	dword ptr .70h$/;"	d
proc_passwd	equates.a86	/^proc_passwd	equ	byte ptr .48h$/;"	d
proc_pid	equates.a86	/^proc_pid	equ	byte ptr .05h$/;"	d
proc_si	equates.a86	/^proc_si		equ	word ptr .28h$/;"	d
proc_sp	equates.a86	/^proc_sp		equ	word ptr .1Ah$/;"	d
proc_ss	equates.a86	/^proc_ss		equ	word ptr .1Ch$/;"	d
proc_status	equates.a86	/^proc_status	equ	byte ptr .04h		; 0 => Runnable$/;"	d
proc_switchin	rtm.a86	/^proc_switchin:				; CODE XREF: delay_dispatch+11Fj$/;"	l
proc_term_bg	rtm.a86	/^proc_term_bg:		; CODE XREF: P_TERMCPM+5Bp$/;"	l
proc_uid	equates.a86	/^proc_uid	equ	byte ptr. 37h$/;"	d
proc_unhook_rsx	rtm.a86	/^proc_unhook_rsx:			; CODE XREF: proc_term_bg+29j$/;"	l
proc_unhooked	rtm.a86	/^proc_unhooked:				; CODE XREF: proc_term_bg+12j$/;"	l
proc_using_drvs	equates.a86	/^proc_using_drvs	equ	word ptr .6Eh$/;"	d
process_table	entry.a86	/^process_table	dw 0			; DATA XREF: bdos:002Bw$/;"	d
procs_inited	entry.a86	/^procs_inited:				; CODE XREF: bdos:004Aj$/;"	l
ptc_background	rtm.a86	/^ptc_background:				; CODE XREF: P_TERMCPM+4Aj$/;"	l
ptc_not8087	rtm.a86	/^ptc_not8087:				; CODE XREF: P_TERMCPM+69j$/;"	l
ptsync_drvfail	bdos.a86	/^ptsync_drvfail:				; CODE XREF: DRV_FLUSH+2Fj$/;"	l
public_sysvars	misc.a86	/^public_sysvars	dw 2001h		; DATA XREF: S_SYSVAR+Bo$/;"	d
push	bdos.a86	/^		push	di$/;"	d
push	bdos.a86	/^		push	ds$/;"	d
push	bdos.a86	/^		push	dx		; Not empty, may be end	of logical directory$/;"	d
push	bdos.a86	/^		push	dx$/;"	d
push	ccpldr.a86	/^		push	ds$/;"	d
push	cio.a86	/^		push	di$/;"	d
push	cio.a86	/^		push	ds$/;"	d
push	cio.a86	/^		push	dx$/;"	d
push	entry.a86	/^		push	di$/;"	d
push	entry.a86	/^		push	ds$/;"	d
push	entry.a86	/^		push	dx$/;"	d
push	mem.a86	/^		push	di		; If so, free it$/;"	d
push	mem.a86	/^		push	di$/;"	d
push	mem.a86	/^		push	dx$/;"	d
push	misc.a86	/^		push	ds$/;"	d
push	rtm.a86	/^		push	di$/;"	d
push	rtm.a86	/^		push	ds$/;"	d
push	rtm.a86	/^		push	dx$/;"	d
push	sup.a86	/^		push	di$/;"	d
push	sup.a86	/^		push	ds		; Copy foreground process to the new entry$/;"	d
push	sup.a86	/^		push	ds$/;"	d
push	sup.a86	/^		push	dx$/;"	d
put_proc_dskdat	sup.a86	/^put_proc_dskdat:		; CODE XREF: P_CHAIN+65p P_CHAIN+9Ep$/;"	l
put_record_coun	bdos.a86	/^put_record_coun:			; CODE XREF: F_repeat_call+50j$/;"	l
pw$error	bdos.a86	/^pw$error:				; CODE XREF: openx+7Fj	F_MAKE+6Ej$/;"	l
pw$mode	bdos.a86	/^pw$mode		db 0			; DATA XREF: chk$pw$error+24w$/;"	d
pwf_badflag	rtm.a86	/^pwf_badflag:				; CODE XREF: P_WAITFLAG+4j$/;"	l
pwf_block	rtm.a86	/^pwf_block:				; CODE XREF: P_WAITFLAG+Bj$/;"	l
pwf_done	rtm.a86	/^pwf_done:				; CODE XREF: P_WAITFLAG+23j$/;"	l
pwf_minus2	rtm.a86	/^pwf_minus2:				; CODE XREF: P_WAITFLAG+9j$/;"	l
qdirfcb1	bdos.a86	/^qdirfcb1:		; CODE XREF: qstampp openx+31p$/;"	l
qstamp	bdos.a86	/^qstamp:		; CODE XREF: openx2p F_MAKE+EFp$/;"	l
qstamp1	bdos.a86	/^qstamp1:		; CODE XREF: update$stamp+2p$/;"	l
qstamp1a	bdos.a86	/^qstamp1a:				; CODE XREF: qstamp1+5j$/;"	l
queued_key	cio.a86	/^queued_key	dw 0			; DATA XREF: bdos_constr bdos_chk_conin+1Ew$/;"	d
r$dir	bdos.a86	/^r$dir:		; CODE XREF: read$dirp	check$media+19p$/;"	l
ram1	loader.a86	/^ram1:$/;"	l
ram2	loader.a86	/^ram2:$/;"	l
ramsize	platform.equ	/^ramsize		equ	.0402h$/;"	d
ramtop	loader.a86	/^ramtop	dw	0$/;"	d
rcl	bdos.a86	/^		rcl	dl, 1$/;"	d
rcl	bdos.a86	/^		rcl	dx, 1$/;"	d
rcount	bdos.a86	/^rcount		db 0			; DATA XREF: getfcb+1Ew setfcb+19r$/;"	d
rcr	bdos.a86	/^		rcr	dl, 1$/;"	d
rd$dir	bdos.a86	/^rd$dir:		; CODE XREF: r$dir+2Ep$/;"	l
rd$parentdir	bdos.a86	/^rd$parentdir:		; CODE XREF: rd$subdir1+77p$/;"	l
rd$parentdir1	bdos.a86	/^rd$parentdir1:				; CODE XREF: rd$parentdir+1Cj$/;"	l
rd$parentdir2	bdos.a86	/^rd$parentdir2:				; CODE XREF: rd$parentdir+24j$/;"	l
rd$parentdir3	bdos.a86	/^rd$parentdir3:				; CODE XREF: rd$parentdir+51j$/;"	l
rd$parentdir4	bdos.a86	/^rd$parentdir4:				; CODE XREF: rd$parentdir+5Cj$/;"	l
rd$subdir1	bdos.a86	/^rd$subdir1:		; CODE XREF: read$subdir+23p$/;"	l
rd$subdir2	bdos.a86	/^rd$subdir2:				; CODE XREF: rd$subdir1+Ej$/;"	l
rd$subdir3	bdos.a86	/^rd$subdir3:				; CODE XREF: rd$subdir1+1Ej$/;"	l
rd$subdir4	bdos.a86	/^rd$subdir4:				; CODE XREF: rd$subdir1+26j$/;"	l
rd$subdir5	bdos.a86	/^rd$subdir5:				; CODE XREF: rd$subdir1+56j$/;"	l
rd$subdir6	bdos.a86	/^rd$subdir6:				; CODE XREF: rd$subdir1+5Aj$/;"	l
rdbuff	bdos.a86	/^rdbuff:		; CODE XREF: bdos:2C65j deblock$io+10p$/;"	l
rdrand_ret	bdos.a86	/^rdrand_ret:				; CODE XREF: F_ATTRIB+21j F_READRAND+14j$/;"	l
rdv_float	misc.a86	/^rdv_float:				; CODE XREF: ret_drv_vector+23j$/;"	l
rdv_nofloat	misc.a86	/^rdv_nofloat:				; CODE XREF: ret_drv_vector+1Ej$/;"	l
read$deblock	bdos.a86	/^read$deblock:				; CODE XREF: bdos:3D1Dj$/;"	l
read$dir	bdos.a86	/^read$dir:		; CODE XREF: read$subdir+28p$/;"	l
read$dir0	bdos.a86	/^read$dir0:				; CODE XREF: r$dir+Fj$/;"	l
read$dir2	bdos.a86	/^read$dir2:				; CODE XREF: r$dir+27j$/;"	l
read$dir_ret	bdos.a86	/^read$dir_ret:				; CODE XREF: read$dir+8j$/;"	l
read$subdir	bdos.a86	/^read$subdir:		; CODE XREF: rd$parentdir+35p$/;"	l
read$subdir1	bdos.a86	/^read$subdir1:				; CODE XREF: read$subdir+12j$/;"	l
read$subdir2	bdos.a86	/^read$subdir2:				; CODE XREF: read$subdir+6j$/;"	l
read$subdir3	bdos.a86	/^read$subdir3:				; CODE XREF: read$subdir+26j$/;"	l
read$subdir4	bdos.a86	/^read$subdir4:				; CODE XREF: read$subdir+2Ej$/;"	l
read_dir_ret	bdos.a86	/^read_dir_ret:				; CODE XREF: r$dir+2Bj	r$dir+37j$/;"	l
read_dir_ret1	bdos.a86	/^read_dir_ret1:$/;"	l
read_disk	loader.a86	/^read_disk:$/;"	l
read_disk_rec	loader.a86	/^read_disk_rec:$/;"	l
read_rsx_body	sup.a86	/^read_rsx_body:				; CODE XREF: P_LOAD+D3j$/;"	l
read_rsx_record	sup.a86	/^read_rsx_record:		; CODE XREF: P_LOAD+2Ep P_LOAD+D0p$/;"	l
readf$sw	bdos.a86	/^readf$sw	db 0			; DATA XREF: rdbuff+Bw	rdbuff+4Fr$/;"	d
readonly_vector	bdos.a86	/^readonly_vector	dw 0			; DATA XREF: DRV_ROVECr nowriter$/;"	d
recordok	bdos.a86	/^recordok:				; CODE XREF: bdos:3D00j$/;"	l
recordok1	bdos.a86	/^recordok1:				; CODE XREF: fat_rdwr_ckd+16j$/;"	l
redir_buf	equates.a86	/^redir_buf	equ	byte ptr .28h	; Current record$/;"	d
redir_buf_count	equates.a86	/^redir_buf_count	equ	byte ptr .25h	; Count of bytes in current buffer$/;"	d
redir_cwd	equates.a86	/^redir_cwd	equ	word ptr .26h	; Current directory for redirected file$/;"	d
redir_fcb	equates.a86	/^redir_fcb	equ	byte ptr .1	; FCB for redirected file$/;"	d
redir_mode	equates.a86	/^redir_mode	equ	byte ptr .0	; Bit    0: 0=write 1=read$/;"	d
release	sup.a86	/^release:		; CODE XREF: P_LOAD+133p$/;"	l
release_DMA	sup.a86	/^release_DMA:		; CODE XREF: P_CHAIN+68p P_CHAIN+A1p$/;"	l
release_loop	rtm.a86	/^release_loop:				; CODE XREF: release_queues+Cj$/;"	l
release_queues	rtm.a86	/^release_queues:		; CODE XREF: P_TERMCPM+2Ep$/;"	l
relog	bdos.a86	/^relog		db 0			; DATA XREF: tst$relog+2w rdbuff+44w$/;"	d
removable_drive	bdos.a86	/^removable_drive	dw 0			; DATA XREF: check_changed+5r$/;"	d
ren_wildcarderr	bdos.a86	/^ren_wildcarderr:			; CODE XREF: bdos:47B6j$/;"	l
rename0	bdos.a86	/^rename0:				; CODE XREF: bdos:47F5j bdos:4802j$/;"	l
rename_wild	bdos.a86	/^rename_wild:				; CODE XREF: fat_rename+Aj$/;"	l
reselect	bdos.a86	/^reselect:		; CODE XREF: F_do_call+24p$/;"	l
reselect2	bdos.a86	/^reselect2:				; CODE XREF: reselect+89j$/;"	l
reselect4	bdos.a86	/^reselect4:				; CODE XREF: reselect+84j$/;"	l
reselect5	bdos.a86	/^reselect5:				; CODE XREF: reselect+77j$/;"	l
reset37x	bdos.a86	/^reset37x:				; CODE XREF: media$change+15j$/;"	l
reset_loops	bdos.a86	/^reset_loops:				; CODE XREF: DRV_RESET+2Cj$/;"	l
reset_next	bdos.a86	/^reset_next:				; CODE XREF: DRV_RESET+14j$/;"	l
reset_none	bdos.a86	/^reset_none:				; CODE XREF: DRV_RESET+8j$/;"	l
restore$pw$fcb	bdos.a86	/^restore$pw$fcb:		; CODE XREF: chk$pw$error+58p$/;"	l
restore$rc	bdos.a86	/^restore$rc:		; CODE XREF: close+20p	open$reel+9Cp$/;"	l
restore$rc1	bdos.a86	/^restore$rc1:				; CODE XREF: restore$rc+5j$/;"	l
restore_dir_fcb	bdos.a86	/^restore_dir_fcb:		; CODE XREF: openx+4Ap	openx+87p$/;"	l
result_F0F	bdos.a86	/^result_F0F	db 0			; DATA XREF: F_do_call+4Br$/;"	d
ret_drv_vector	misc.a86	/^ret_drv_vector:		; CODE XREF: DRV_LOGINVEC+4j$/;"	l
retake_8087	sup.a86	/^retake_8087:		; CODE XREF: P_LOAD+111p DEV_WAITFLAG+9p$/;"	l
retake_doit	sup.a86	/^retake_doit:				; CODE XREF: retake_8087+17j$/;"	l
retake_end	sup.a86	/^retake_end:				; CODE XREF: retake_8087+9j$/;"	l
retblock	bdos.a86	/^retblock:				; CODE XREF: get$block+12j$/;"	l
retblock0	bdos.a86	/^retblock0:				; CODE XREF: get$block+6j$/;"	l
righttst	bdos.a86	/^righttst:				; CODE XREF: get$block+18j$/;"	l
rlr	entry.a86	/^rlr		dw offset proc1		; DATA XREF: bdos:001Fr bdos:0028w$/;"	d
rmf	bdos.a86	/^rmf		db 0			; DATA XREF: open$reel+44r$/;"	d
rod$error	bdos.a86	/^rod$error:$/;"	l
rof$error	bdos.a86	/^rof$error:		; CODE XREF: check$rodir+8j$/;"	l
rootbcba	bdos.a86	/^rootbcba	dw 0			; DATA XREF: get$bcbaw	get$bcba+DBr$/;"	d
ror	bdos.a86	/^		ror	dl, 1$/;"	d
rotr	bdos.a86	/^rotr:					; CODE XREF: get$block+2Cp$/;"	l
rsx_data1	sup.a86	/^rsx_data1	rb 12h$/;"	l
rsx_find	sup.a86	/^rsx_find:		; CODE XREF: P_LOAD+C5p$/;"	l
rsx_head	sup.a86	/^rsx_head	dw 0,0			; DATA XREF: P_LOAD+25w load_rsx+46o$/;"	d
rsx_list	sup.a86	/^rsx_list	rb 80h			; DATA XREF: P_LOAD+72o P_LOAD+84o$/;"	l
rsx_loaded	sup.a86	/^rsx_loaded:				; CODE XREF: P_LOAD+49j$/;"	l
rsx_loadtype	sup.a86	/^rsx_loadtype	db 0			; DATA XREF: P_LOAD+7Fw P_LOAD+8Er$/;"	d
rsx_none	sup.a86	/^rsx_none:				; CODE XREF: P_LOAD+8Aj$/;"	l
rsx_offset	sup.a86	/^rsx_offset	dw 0			; DATA XREF: P_LOAD+39w P_LOAD+6Cw$/;"	d
rtm_functions	rtm.a86	/^rtm_functions	dw offset P_TERMCPM	; DATA XREF: bdos:0EDAo$/;"	d
rtm_init	rtm.a86	/^rtm_init:				; DATA XREF: dseg:0006o$/;"	l
rtm_main	rtm.a86	/^rtm_main:				; DATA XREF: dseg:0004o$/;"	l
rtm_sysflag	rtm.a86	/^rtm_sysflag:		; CODE XREF: xios_int09+EDu$/;"	l
rtm_timeslice	rtm.a86	/^rtm_timeslice:				; CODE XREF: xios_int09+EDu$/;"	l
rtn$phy$errs	bdos.a86	/^rtn$phy$errs:				; CODE XREF: error+Fj error+23j$/;"	l
rw$fxs	bdos.a86	/^rw$fxs		db 5, 7, 8, 0Fh, 10h, 16h, 0, 0$/;"	d
rwb_fn0	bdos.a86	/^rwb_fn0:				; CODE XREF: deblock$io+7j$/;"	l
rwb_fn1	bdos.a86	/^rwb_fn1:				; CODE XREF: deblock$io+9j$/;"	l
s2r_noround	bdos.a86	/^s2r_noround:				; CODE XREF: size_to_records+2j$/;"	l
s_bios_funcs	cio.a86	/^s_bios_funcs	dw offset abort		; DATA XREF: S_BIOS+1Fo$/;"	d
s_bios_notimpl	cio.a86	/^s_bios_notimpl:		; CODE XREF: S_BIOS+19j S_BIOS+1Fu$/;"	l
s_bios_passthro	cio.a86	/^s_bios_passthro:			; CODE XREF: S_BIOS+15j call_devini+2j$/;"	l
s_sysvar_ret	misc.a86	/^s_sysvar_ret:				; CODE XREF: S_SYSVAR+27j$/;"	l
save$dcnt$pos0	bdos.a86	/^save$dcnt$pos0:		; CODE XREF: bdos:3716p bdos:3737p$/;"	l
save$dcnt$pos1	bdos.a86	/^save$dcnt$pos1:		; CODE XREF: searchn+34p searchn+56p$/;"	l
save$xfcb	bdos.a86	/^save$xfcb	db 0			; DATA XREF: searchn+37w searchn+51w$/;"	d
save_cmd	cmdio.c	/^char *save_cmd(char *cmdname, cmd_desc *cmdfile, int absolute)$/;"	f	typeref:typename:char *
sbb	bdos.a86	/^		sbb	dx, 0$/;"	d
sbb	sup.a86	/^		sbb	dh, 0$/;"	d
sc$fxs	bdos.a86	/^sc$fxs		db 2, 3, 5, 0, 0$/;"	d
scan_dirent	bdos.a86	/^scan_dirent	dw 0			; DATA XREF: is_dir_emptyw$/;"	d
scan_dirents	bdos.a86	/^scan_dirents:				; CODE XREF: is_dir_empty+52j$/;"	l
scandm$a	bdos.a86	/^scandm$a:		; CODE XREF: scandm$ab+1p scandm$ab+13p$/;"	l
scandm$ab	bdos.a86	/^scandm$ab:		; CODE XREF: delete11+28p F_TRUNCATE+70p$/;"	l
scandm$b	bdos.a86	/^scandm$b:				; CODE XREF: close$fcb+A0p$/;"	l
scandm0	bdos.a86	/^scandm0:				; CODE XREF: scandm$a+45j$/;"	l
scandm0a	bdos.a86	/^scandm0a:				; CODE XREF: scandm$a+Cj$/;"	l
scandm1	bdos.a86	/^scandm1:				; CODE XREF: scandm$a+22j$/;"	l
scandm2	bdos.a86	/^scandm2:				; CODE XREF: scandm$a+2Aj$/;"	l
scandm3	bdos.a86	/^scandm3:				; CODE XREF: scandm$a+35j scandm$a+3Dj$/;"	l
scandm_ret	bdos.a86	/^scandm_ret:				; CODE XREF: scandm$a+10j$/;"	l
scd_1	bdos.a86	/^scd_1:					; CODE XREF: fat_search1+11j$/;"	l
scd_2	bdos.a86	/^scd_2:		test	cur_drvdir, 0FFFFh$/;"	l
scd_3	bdos.a86	/^scd_3:					; CODE XREF: fat_search1+45j$/;"	l
scd_4	bdos.a86	/^scd_4:					; CODE XREF: fat_search1+Cj$/;"	l
scd_5	bdos.a86	/^scd_5:					; CODE XREF: fat_search1+2Cj$/;"	l
scd_next	bdos.a86	/^scd_next:				; CODE XREF: fat_search1+25j$/;"	l
scd_retbx	bdos.a86	/^scd_retbx:				; CODE XREF: fat_search1+1Fj$/;"	l
sdl0	bdos.a86	/^sdl0:					; CODE XREF: DRV_SETLABEL+1Cj$/;"	l
sdl0a	bdos.a86	/^sdl0a:					; CODE XREF: DRV_SETLABEL+43j$/;"	l
sdl1	bdos.a86	/^sdl1:					; CODE XREF: DRV_SETLABEL+39j$/;"	l
sdl1a	bdos.a86	/^sdl1a:					; CODE XREF: DRV_SETLABEL+5Ej$/;"	l
sdl2	bdos.a86	/^sdl2:		; CODE XREF: F_WRITEXFCB+5Fp$/;"	l
sdl3	bdos.a86	/^sdl3:		; CODE XREF: F_MAKE+D1p sdl2+4j$/;"	l
search	bdos.a86	/^search:					; CODE XREF: search$namlen+2j$/;"	l
search$extnum	bdos.a86	/^search$extnum:		; CODE XREF: cpm_delete+8p$/;"	l
search$fin	bdos.a86	/^search$fin:				; CODE XREF: searchn+8j searchn+12j$/;"	l
search$h0	bdos.a86	/^search$h0:				; CODE XREF: search$hash+1Dj$/;"	l
search$h2	bdos.a86	/^search$h2:				; CODE XREF: search$h_sub+39j$/;"	l
search$h2a	bdos.a86	/^search$h2a:				; CODE XREF: search$h_sub+1Dj$/;"	l
search$h2b	bdos.a86	/^search$h2b:				; CODE XREF: search$h_sub+Ej$/;"	l
search$h2c	bdos.a86	/^search$h2c:				; CODE XREF: search$h_sub+33j$/;"	l
search$h2d	bdos.a86	/^search$h2d:				; CODE XREF: search$h_sub+3Bj$/;"	l
search$h2e	bdos.a86	/^search$h2e:				; CODE XREF: search$h_sub+4Bj$/;"	l
search$h2f	bdos.a86	/^search$h2f:				; CODE XREF: search$h_sub+60j$/;"	l
search$h2g	bdos.a86	/^search$h2g:				; CODE XREF: search$h_sub+13j$/;"	l
search$h6	bdos.a86	/^search$h6:		; CODE XREF: search$h_sub+10p$/;"	l
search$h6a	bdos.a86	/^search$h6a:				; CODE XREF: search$h6+Bj$/;"	l
search$h_sub	bdos.a86	/^search$h_sub:		; CODE XREF: search$hash+39p$/;"	l
search$hash	bdos.a86	/^search$hash:		; CODE XREF: searchn+5p$/;"	l
search$hret	bdos.a86	/^search$hret:				; CODE XREF: search$h_sub+7Ej$/;"	l
search$loop	bdos.a86	/^search$loop:				; CODE XREF: searchn+42j searchn+48j$/;"	l
search$namlen	bdos.a86	/^search$namlen:		; CODE XREF: openp close$fcb+Cp$/;"	l
search$user0	bdos.a86	/^search$user0	db 0			; DATA XREF: bdos:371Cw bdos:374Er$/;"	d
search1	bdos.a86	/^search1:				; CODE XREF: bdos:47BDp$/;"	l
search_path	entry.a86	/^search_path	db 0, 10h, 0FFh, 0FFh$/;"	d
searcha	bdos.a86	/^searcha		dw 0			; DATA XREF: searchi+3w searchn+14r$/;"	d
searchext	bdos.a86	/^searchext:				; CODE XREF: bdos:36F5j$/;"	l
searchi	bdos.a86	/^searchi:		; CODE XREF: search$extnum+2p$/;"	l
searchi1	bdos.a86	/^searchi1:				; CODE XREF: does$xfcb$exist+18p$/;"	l
searchl	bdos.a86	/^searchl		db 0			; DATA XREF: search$hash+7r$/;"	d
searchn	bdos.a86	/^searchn:		; CODE XREF: searchn+4Fj bdos:3719j$/;"	l
searchnext	bdos.a86	/^searchnext:				; CODE XREF: searchn+1Dj$/;"	l
searchnm	bdos.a86	/^searchnm:				; CODE XREF: bdos:36FBj$/;"	l
searchok	bdos.a86	/^searchok:				; CODE XREF: searchn+54j bdos:36EBj$/;"	l
sec_n	loader.a86	/^sec_n	dw	0$/;"	d
sector	loader.a86	/^sector	dw	0$/;"	d
seek	bdos.a86	/^seek:		; CODE XREF: bdos:2C5Dp deblock$io+1p$/;"	l
seek$copy	bdos.a86	/^seek$copy:		; CODE XREF: delete11+1Dp copy$dir0+9j$/;"	l
seekerr	bdos.a86	/^seekerr:				; CODE XREF: cpm_rwrand+Dj$/;"	l
seekok	bdos.a86	/^seekok:					; CODE XREF: cpm_rwrand+91j$/;"	l
seekok2	bdos.a86	/^seekok2:				; CODE XREF: cpm_rwrand+31j$/;"	l
seg_A15_2A	entry.a86	/^seg_A15_2A	dw seg lp_xios_entry	; -> XIOS segment$/;"	d
seg_bios	platform.equ	/^seg_bios	equ	0h$/;"	d
seg_cpmcode	cpm3.equ	/^seg_cpmcode	equ	0F08h$/;"	d
seg_cpmhead	cpm3.equ	/^seg_cpmhead	equ	0F00h$/;"	d
sel$error	bdos.a86	/^sel$error:		; CODE XREF: cwd_for_drive+2Bj$/;"	l
sel1_fcb_drive	bdos.a86	/^sel1_fcb_drive:		; CODE XREF: F_SFIRST+20p F_MAKE+Bp$/;"	l
sel_fcb_drive	bdos.a86	/^sel_fcb_drive:				; CODE XREF: sel1_fcb_drive+8j$/;"	l
seqbcba	bdos.a86	/^seqbcba		dw 0			; DATA XREF: get$bcba+19w get$bcba+4Fw$/;"	d
sernumber	misc.a86	/^sernumber:$/;"	l
set$alloc$bit	bdos.a86	/^set$alloc$bit:		; CODE XREF: scandm$a+3Fp$/;"	l
set$arecord	bdos.a86	/^set$arecord:		; CODE XREF: get$bcba+58p deblock+BBp$/;"	l
set$cdisk	bdos.a86	/^set$cdisk:		; CODE XREF: media$change+12p$/;"	l
set$cdisk1	bdos.a86	/^set$cdisk1:				; CODE XREF: get$block+3Bp$/;"	l
set$end$dir	bdos.a86	/^set$end$dir:		; CODE XREF: rd$subdir1+3Bj$/;"	l
set$hash	bdos.a86	/^set$hash:		; CODE XREF: searchi+10p$/;"	l
set$hash1	bdos.a86	/^set$hash1:				; CODE XREF: set$hash+12j$/;"	l
set$hash15	bdos.a86	/^set$hash15:				; CODE XREF: set$hash+22j$/;"	l
set$hash2	bdos.a86	/^set$hash2:				; CODE XREF: set$hash+Ej$/;"	l
set$hashret	bdos.a86	/^set$hashret:				; CODE XREF: check$wild0+Bj$/;"	l
set$lsn	bdos.a86	/^set$lsn:		; CODE XREF: open$reel+55p$/;"	l
set$pw	bdos.a86	/^set$pw:		; CODE XREF: F_MAKE+CEp sdl2+9p$/;"	l
set$pw0	bdos.a86	/^set$pw0:				; CODE XREF: F_PASSWD+15j$/;"	l
set$pw1	bdos.a86	/^set$pw1:				; CODE XREF: set$pw+1Aj$/;"	l
set$pw2	bdos.a86	/^set$pw2:				; CODE XREF: set$pw+Dj	set$pw+11j$/;"	l
set$pw3	bdos.a86	/^set$pw3:				; CODE XREF: set$pw+1Ej$/;"	l
set$pw4	bdos.a86	/^set$pw4:				; CODE XREF: set$pw+2Aj$/;"	l
set$rc	bdos.a86	/^set$rc:		; CODE XREF: getfcb+12p close+27p$/;"	l
set$rc1	bdos.a86	/^set$rc1:				; CODE XREF: set$rc+Dj$/;"	l
set$rc2	bdos.a86	/^set$rc2:				; CODE XREF: set$rc+9j$/;"	l
set$rc3	bdos.a86	/^set$rc3:				; CODE XREF: close$fcb+86p$/;"	l
set$rcret	bdos.a86	/^set$rcret:				; CODE XREF: open+3j set$rc+18j$/;"	l
set_F12	bdos.a86	/^set_F12:				; CODE XREF: F_do_call+40j$/;"	l
set_attr_bits	bdos.a86	/^set_attr_bits:				; CODE XREF: f_attrib_fat+9Cj$/;"	l
set_buf_start	cio.a86	/^set_buf_start:		; CODE XREF: copy_to_history+6p$/;"	l
set_dcnt_dblk	bdos.a86	/^set_dcnt_dblk:		; CODE XREF: does$xfcb$exist+7p$/;"	l
set_if_attrs	bdos.a86	/^set_if_attrs	db 0			; DATA XREF: funcs_F_main+113r$/;"	d
set_proc_drive	bdos.a86	/^set_proc_drive:		; CODE XREF: DRV_ALLRESET+Bp$/;"	l
setcdr	bdos.a86	/^setcdr:		; CODE XREF: cpm_login+72p$/;"	l
setdata	bdos.a86	/^setdata:				; CODE XREF: bdos:2C5Ap bdos:3D22p$/;"	l
setdir1	bdos.a86	/^setdir1:		; CODE XREF: cpm_writerec+B0p$/;"	l
setdir1a	bdos.a86	/^setdir1a:				; CODE XREF: setdir1+1Aj$/;"	l
setfcb	bdos.a86	/^setfcb:		; CODE XREF: bdos:2F06j bdos:3D2Bj$/;"	l
setfcb1	bdos.a86	/^setfcb1:				; CODE XREF: setfcb+7j$/;"	l
setfcb2	bdos.a86	/^setfcb2:				; CODE XREF: setfcb+17j$/;"	l
setfdd1	loader.a86	/^setfdd1:$/;"	l
setfdd2	loader.a86	/^setfdd2:$/;"	l
setfwf	bdos.a86	/^setfwf:		; CODE XREF: open$copyp close$fcb+9Bp$/;"	l
sethdd1	loader.a86	/^sethdd1:$/;"	l
sethdd2	loader.a86	/^sethdd2:$/;"	l
setlret1	bdos.a86	/^setlret1:				; CODE XREF: bdos:3D04j bdos:3D0Ej$/;"	l
setmem1	loader.a86	/^setmem1:$/;"	l
setmem2	loader.a86	/^setmem2:$/;"	l
setup_dirdata	bdos.a86	/^setup_dirdata:				; CODE XREF: cpm_opendir+11Cj$/;"	l
shl	bdos.a86	/^		shl	di, 1$/;"	d
shl	bdos.a86	/^		shl	dl, cl$/;"	d
shl	bdos.a86	/^		shl	dx, cl$/;"	d
shl	entry.a86	/^		shl	di, 1		; CL = function	number within class$/;"	d
shl	entry.a86	/^		shl	di, 1$/;"	d
shl	misc.a86	/^		shl	dx, cl$/;"	d
shl	sup.a86	/^		shl	dx, 1$/;"	d
shl	sup.a86	/^		shl	dx, cl$/;"	d
shl_dxax_cl	bdos.a86	/^shl_dxax_cl:		; CODE XREF: fat_truncate+2Fp$/;"	l
shl_loop	bdos.a86	/^shl_loop:				; CODE XREF: shl_dxax_cl+6j$/;"	l
shr	bdos.a86	/^		shr	di, 1$/;"	d
shr	bdos.a86	/^		shr	dl, 1$/;"	d
shr	bdos.a86	/^		shr	dx, 1$/;"	d
shr	bdos.a86	/^		shr	dx, cl$/;"	d
shr_dxax_cl	bdos.a86	/^shr_dxax_cl:		; CODE XREF: fat_extents+Ep$/;"	l
shr_loop	bdos.a86	/^shr_loop:				; CODE XREF: shr_dxax_cl+6j$/;"	l
simconout_bg	cio.a86	/^simconout_bg:				; CODE XREF: simulate_conout+6j$/;"	l
simconst_0	cio.a86	/^simconst_0:				; CODE XREF: simulate_const+6j$/;"	l
simulate_conin	cio.a86	/^simulate_conin:		; CODE XREF: S_BIOS+1Fu$/;"	l
simulate_conout	cio.a86	/^simulate_conout:		; CODE XREF: S_BIOS+1Fu$/;"	l
simulate_const	cio.a86	/^simulate_const:		; CODE XREF: S_BIOS+1Fu$/;"	l
single	bdos.a86	/^single		db 0			; DATA XREF: get$dm+5r	get$dir$ext+18r$/;"	d
single_call	bdos.a86	/^single_call:				; CODE XREF: bdos_switch+9Cj$/;"	l
size_ok	bdos.a86	/^size_ok:				; CODE XREF: fat_extents+17j$/;"	l
size_to_cpm	bdos.a86	/^size_to_cpm:				; CODE XREF: c2f_to_extent+17j$/;"	l
size_to_records	bdos.a86	/^size_to_records:		; CODE XREF: fat_space+28p$/;"	l
skip_group	sup.a86	/^skip_group:				; CODE XREF: cmd_alloc_mem+3Fj$/;"	l
skip_spaces	sup.a86	/^skip_spaces:		; CODE XREF: F_PARSE+14p F_PARSE+C1p$/;"	l
sksp_1	sup.a86	/^sksp_1:					; CODE XREF: skip_spaces+3j$/;"	l
slice_expired	rtm.a86	/^slice_expired:				; CODE XREF: delay_dispatch+99j$/;"	l
space_to_inpx0	cio.a86	/^space_to_inpx0:				; CODE XREF: input_hash+16j$/;"	l
space_to_x1	cio.a86	/^space_to_x1:				; CODE XREF: inp_x1_to_cur+13j$/;"	l
space_to_x1_don	cio.a86	/^space_to_x1_don:			; CODE XREF: inp_x1_to_cur+Cj$/;"	l
spd_ret	bdos.a86	/^spd_ret:				; CODE XREF: F_OPEN+20j$/;"	l
srch_1	bdos.a86	/^srch_1:					; CODE XREF: F_SFIRST+48j$/;"	l
srch_cpm	bdos.a86	/^srch_cpm:				; CODE XREF: F_SFIRST+3Fj$/;"	l
srch_fat	bdos.a86	/^srch_fat:		; CODE XREF: F_SFIRST+41j$/;"	l
srch_fat1	bdos.a86	/^srch_fat1:				; CODE XREF: srch_fat+2j$/;"	l
srch_fat10	bdos.a86	/^srch_fat10:				; CODE XREF: srch_fat+9Ej$/;"	l
srch_fat11	bdos.a86	/^srch_fat11:				; CODE XREF: srch_fat+AAj srch_fat+CFj$/;"	l
srch_fat2	bdos.a86	/^srch_fat2:				; CODE XREF: srch_fat+10j srch_fat+1Aj$/;"	l
srch_fat3	bdos.a86	/^srch_fat3:				; CODE XREF: srch_fat+28j srch_fat+30j$/;"	l
srch_fat4	bdos.a86	/^srch_fat4:				; CODE XREF: srch_fat+5Fj srch_fat+6Ej$/;"	l
srch_fat5	bdos.a86	/^srch_fat5:				; CODE XREF: srch_fat+45j$/;"	l
srch_fat6	bdos.a86	/^srch_fat6:				; CODE XREF: srch_fat+50j srch_fat+58j$/;"	l
srch_fat7	bdos.a86	/^srch_fat7:				; CODE XREF: srch_fat+66j$/;"	l
srch_fat7a	bdos.a86	/^srch_fat7a:	mov	cx, 0Bh$/;"	l
srch_fat7b	bdos.a86	/^srch_fat7b:	mov	al, 21h$/;"	l
srch_fat8	bdos.a86	/^srch_fat8:	$/;"	l
srch_fat9	bdos.a86	/^srch_fat9:				; CODE XREF: srch_fat+99j$/;"	l
srch_found	bdos.a86	/^srch_found:				; CODE XREF: F_SFIRST+4Dj$/;"	l
srch_ret	bdos.a86	/^srch_ret:				; CODE XREF: F_SFIRST+5Ej bdos:4620j$/;"	l
srchnxt1	bdos.a86	/^srchnxt1:				; CODE XREF: searchn+32j$/;"	l
sta$ret	bdos.a86	/^sta$ret:				; CODE XREF: check_changed+11j$/;"	l
stacktop	loader.a86	/^stacktop:$/;"	l
stamp1	bdos.a86	/^stamp1:		; CODE XREF: openx2+5j	DRV_SETLABEL+4Fp$/;"	l
stamp2	bdos.a86	/^stamp2:		; CODE XREF: update$stamp+1Bp$/;"	l
stamp3	bdos.a86	/^stamp3:					; CODE XREF: stamp1+2j$/;"	l
stamp5	bdos.a86	/^stamp5:		; CODE XREF: DRV_SETLABEL+4Cp$/;"	l
stamp_cmpdate	bdos.a86	/^stamp_cmpdate:				; CODE XREF: stamp5+9j$/;"	l
stamp_compare	bdos.a86	/^stamp_compare:				; CODE XREF: F_BDOS_74+3Bp$/;"	l
still_in_cpm	entry.a86	/^still_in_cpm:				; CODE XREF: bdos:0188j$/;"	l
strColonSpace	bdos.a86	/^strColonSpace	db ' : $'               ; DATA XREF: funcs_F_main+14Bw$/;"	d
sub	bdos.a86	/^		sub	di, 0Ch$/;"	d
sub	bdos.a86	/^		sub	di, 4$/;"	d
sub	bdos.a86	/^		sub	dx, ax$/;"	d
sub	bdos.a86	/^		sub	dx, bx$/;"	d
sub	bdos.a86	/^		sub	dx, cx$/;"	d
sub	loader.a86	/^	sub	dx,		12h[bx]$/;"	d
sub	loader.a86	/^	sub	dx,		cpmdatasize[si]$/;"	d
sub	mem.a86	/^		sub	dx, [di]$/;"	d
sub	sup.a86	/^		sub	dx, 6[bx]$/;"	d
sub	sup.a86	/^		sub	dx, cx$/;"	d
sub	sup.a86	/^		sub	dx, dx$/;"	d
sup_functions	sup.a86	/^sup_functions	dw offset P_CHAIN	; DATA XREF: bdos:0245o$/;"	d
sup_init	sup.a86	/^sup_init:				; DATA XREF: dseg:0002o$/;"	l
sup_main	sup.a86	/^sup_main:				; DATA XREF: dseg:0000o$/;"	l
switch_char	equates.a86	/^switch_char	equ	byte ptr .1050h		;DOS switch character$/;"	d
sys_find1st	bdos.a86	/^sys_find1st	dw 0,0			; DATA XREF: F_SFIRST+9w bdos:461Cr$/;"	d
sys_fx	bdos.a86	/^sys_fx		db 0			; DATA XREF: funcs_F_main+E1o$/;"	d
sysvar_131	entry.a86	/^sysvar_131	db 0			; DATA XREF: copy_to_history+14w$/;"	d
sysvar_132	entry.a86	/^sysvar_132	rb 100h			; DATA XREF: copy_to_history+Do$/;"	l
sysvar_142	entry.a86	/^sysvar_142	rb	20h$/;"	l
sysvar_143	entry.a86	/^sysvar_143	db	0, 20h, 0$/;"	d
sysvar_144	entry.a86	/^sysvar_144	db 0			; DATA XREF: bdos:0073w bdos:23F6o$/;"	d
sysvar_access	misc.a86	/^sysvar_access:				; CODE XREF: S_SYSVAR+4Aj$/;"	l
sysvar_invalid	misc.a86	/^sysvar_invalid:				; CODE XREF: S_SYSVAR+1Aj S_SYSVAR+4Fj$/;"	l
sysvar_is_fg	misc.a86	/^sysvar_is_fg:				; CODE XREF: S_SYSVAR+57j$/;"	l
sysvar_nocli	misc.a86	/^sysvar_nocli:				; CODE XREF: S_SYSVAR+63j$/;"	l
sysvar_set	misc.a86	/^sysvar_set:				; CODE XREF: S_SYSVAR+42j$/;"	l
sysvar_valid	misc.a86	/^sysvar_valid:				; CODE XREF: S_SYSVAR+15j S_SYSVAR+22j$/;"	l
taken_already	sup.a86	/^taken_already:				; CODE XREF: retake_8087+10j$/;"	l
target_is_file	bdos.a86	/^target_is_file:				; CODE XREF: fat_delete+4Fj$/;"	l
temp_drive	entry.a86	/^temp_drive	db 0			; DATA XREF: rsx_find+53o bdos:23AEo$/;"	d
terminate	sup.a86	/^terminate:				; CODE XREF: P_CHAIN+D4j$/;"	l
terminators	sup.a86	/^terminators	db 0, 9, 0Dh		; DATA XREF: check_charset+5o$/;"	d
test	bdos.a86	/^		test	dh, 0F0h$/;"	d
test	bdos.a86	/^		test	di, di$/;"	d
test	bdos.a86	/^		test	dl, 0Fh$/;"	d
test	bdos.a86	/^		test	dl, 1		; Logged in before?$/;"	d
test	bdos.a86	/^		test	dl, ah$/;"	d
test	bdos.a86	/^		test	dx, 3$/;"	d
test	rtm.a86	/^		test	dx, dx$/;"	d
test$vector	bdos.a86	/^test$vector:		; CODE XREF: check_changed+9p$/;"	l
tick_wait_proc	rtm.a86	/^tick_wait_proc	dw 0			; DATA XREF: P_DELAY+Bw P_TERMCPM+77w$/;"	d
time_slice	entry.a86	/^time_slice	db 10h			; DATA XREF: delay_dispatch+A2r$/;"	d
time_to_switch	rtm.a86	/^time_to_switch	db 10h			; DATA XREF: delay_dispatch+94r$/;"	d
timeslice	rtm.a86	/^timeslice	db 1Eh			; DATA XREF: check_timeslicew$/;"	d
timestamp_2_fat	bdos.a86	/^timestamp_2_fat:		; CODE XREF: fat_bdos_74+15p$/;"	l
tmpselect_dir	bdos.a86	/^tmpselect_dir:		; CODE XREF: DRV_SETp DRV_RESET+18p$/;"	l
trunc2	bdos.a86	/^trunc2:					; CODE XREF: F_TRUNCATE+6Bj$/;"	l
trunc3	bdos.a86	/^trunc3:					; CODE XREF: F_TRUNCATE+77j$/;"	l
trunc3a	bdos.a86	/^trunc3a:				; CODE XREF: F_TRUNCATE+A0j$/;"	l
trunc3b	bdos.a86	/^trunc3b:				; CODE XREF: F_TRUNCATE+CBj$/;"	l
trunc3c	bdos.a86	/^trunc3c:				; CODE XREF: F_TRUNCATE+D5j$/;"	l
trunc_save_dcnt	bdos.a86	/^trunc_save_dcnt:		; CODE XREF: F_TRUNCATE+68p$/;"	l
ts2fat_feb	bdos.a86	/^ts2fat_feb:				; CODE XREF: timestamp_2_fat+1Fj$/;"	l
ts2fat_months2	bdos.a86	/^ts2fat_months2:				; CODE XREF: timestamp_2_fat+30j$/;"	l
ts2fat_nextyear	bdos.a86	/^ts2fat_nextyear:			; CODE XREF: timestamp_2_fat+13j$/;"	l
ts2fat_noleap	bdos.a86	/^ts2fat_noleap:				; CODE XREF: timestamp_2_fat+Ej$/;"	l
ts2fat_year1	bdos.a86	/^ts2fat_year1:				; CODE XREF: timestamp_2_fat+18j$/;"	l
tst$inv$fcb	bdos.a86	/^tst$inv$fcb:		; CODE XREF: bdos:3CEEp cpm_writerec+27p$/;"	l
tst$log$fxs	bdos.a86	/^tst$log$fxs:		; CODE XREF: search$h_sub+23p$/;"	l
tst$log0	bdos.a86	/^tst$log0:		; CODE XREF: chk$exit$fxs+7p$/;"	l
tst$relog	bdos.a86	/^tst$relog:		; CODE XREF: read$dir+Dp rd$parentdir+64j$/;"	l
tst$relog_ret	bdos.a86	/^tst$relog_ret:				; CODE XREF: setcdr+3j	tst$log$fxs+5j$/;"	l
tst2fat_months1	bdos.a86	/^tst2fat_months1:			; CODE XREF: timestamp_2_fat+3Aj$/;"	l
twp_is_0	rtm.a86	/^twp_is_0:				; CODE XREF: delay_dispatch+23j$/;"	l
type_done	sup.a86	/^type_done:				; CODE XREF: F_PARSE+73j F_PARSE+84j$/;"	l
update$cs	bdos.a86	/^update$cs:		; CODE XREF: r$dir+5Dj$/;"	l
update$stamp	bdos.a86	/^update$stamp:		; CODE XREF: cpm_writerec+2Ap$/;"	l
user0$pass	bdos.a86	/^user0$pass	db 0			; DATA XREF: searchnw bdos:3708r$/;"	d
userDS	equates.a86	/^userDS		equ	word ptr .2Eh$/;"	d
userES	equates.a86	/^userES		equ	word ptr .30h$/;"	d
userStack	equates.a86	/^userStack	equ	word ptr .32h$/;"	d
user_fcb	bdos.a86	/^user_fcb	rb 24h$/;"	l
usercodearea	platform.equ	/^usercodearea	equ	.0422h$/;"	d
userdma	bdos.a86	/^userdma		dw 0			; DATA XREF: funcs_F_main+4Eo$/;"	d
userdmaseg	bdos.a86	/^userdmaseg	dw 0			; DATA XREF: funcs_F_main+5Fw$/;"	d
usrcode	bdos.a86	/^usrcode		db 0			; DATA XREF: reselect+40r F_OPEN+2Cr$/;"	d
valid_dl_f_fcb	bdos.a86	/^valid_dl_f_fcb:		; CODE XREF: F_MAKE+10p$/;"	l
vrecord	bdos.a86	/^vrecord		db 0			; DATA XREF: atran+16r	dm$position+4r$/;"	d
wake_none	rtm.a86	/^wake_none:				; CODE XREF: P_0209+2j$/;"	l
was_modnum	bdos.a86	/^was_modnum:				; CODE XREF: bdos:36E5j$/;"	l
wasflush	bdos.a86	/^wasflush:				; CODE XREF: rdbuff+39j$/;"	l
word	cmdio.h	/^typedef unsigned short word;$/;"	t	typeref:typename:unsigned short
word_A15_7B1	bdos.a86	/^word_A15_7B1	dw 0			; DATA XREF: fat_rdwr+122w$/;"	d
wr_cluster	bdos.a86	/^wr_cluster:		; CODE XREF: fat_make+58p fat_make+CEp$/;"	l
wr_cluster_loop	bdos.a86	/^wr_cluster_loop:			; CODE XREF: wr_cluster+32j$/;"	l
wr_root_dirent	bdos.a86	/^wr_root_dirent:				; CODE XREF: seek$copy+Dj seek$copy+15j$/;"	l
wrbuff	bdos.a86	/^wrbuff:		; CODE XREF: bdos:2C63j deblock$io+Dj$/;"	l
wrdir0	bdos.a86	/^wrdir0:					; CODE XREF: rd$dir+14j rd$subdir1+6Ep$/;"	l
write00	bdos.a86	/^write00:				; CODE XREF: cpm_writerec+10Bj$/;"	l
write_FAT	bdos.a86	/^write_FAT:		; CODE XREF: fat_close+33p$/;"	l
write_fat_loop	bdos.a86	/^write_fat_loop:				; CODE XREF: write_FAT+39j$/;"	l
writeblk	cio.a86	/^writeblk:	push	ds$/;"	l
writeblk1	cio.a86	/^writeblk1:	push	cx$/;"	l
writeblk2	cio.a86	/^writeblk2:	test	es:proc_conmode, 4$/;"	l
writeblk3	cio.a86	/^writeblk3:	call	xios_char_out$/;"	l
writeblk4	cio.a86	/^writeblk4:	pop	ax$/;"	l
writeblk_end	cio.a86	/^writeblk_end:	ret$/;"	l
writeseq_1	bdos.a86	/^writeseq_1:				; CODE XREF: cpm_writerec+15j$/;"	l
writeseq_err	bdos.a86	/^writeseq_err:				; CODE XREF: cpm_writerec+1Fj$/;"	l
writestr_bg	cio.a86	/^writestr_bg:				; CODE XREF: C_WRITESTR+6j$/;"	l
wxfcb0	bdos.a86	/^wxfcb0:					; CODE XREF: F_WRITEXFCB+17j$/;"	l
wxfcb0a	bdos.a86	/^wxfcb0a:				; CODE XREF: F_TIMEDATE+13j$/;"	l
wxfcb0b	bdos.a86	/^wxfcb0b:				; CODE XREF: F_WRITEXFCB+28j$/;"	l
wxfcb1	bdos.a86	/^wxfcb1:					; CODE XREF: F_WRITEXFCB+2Ej$/;"	l
wxfcb1a	bdos.a86	/^wxfcb1a:				; CODE XREF: F_WRITEXFCB+3Ej$/;"	l
wxfcb2	bdos.a86	/^wxfcb2:					; CODE XREF: F_WRITEXFCB+49j$/;"	l
wxfcb3	bdos.a86	/^wxfcb3:					; CODE XREF: F_WRITEXFCB+59j$/;"	l
wxfcb4	bdos.a86	/^wxfcb4:					; CODE XREF: F_WRITEXFCB+54j$/;"	l
xchg	bdos.a86	/^		xchg	di, si$/;"	d
xchg	sup.a86	/^		xchg	di, es:proc_bdos_offs$/;"	d
xdcnt	bdos.a86	/^xdcnt		dw 0			; DATA XREF: set_dcnt_dblkr$/;"	d
xdcnt_eq_dcnt	bdos.a86	/^xdcnt_eq_dcnt:		; CODE XREF: openx+42p	openx+62p$/;"	l
xfcb_rdonly	bdos.a86	/^xfcb_rdonly	db 0			; DATA XREF: F_do_call+32r$/;"	d
xifont	loader.a86	/^xifont:$/;"	l
xios_bh_8087	equates.a86	/^xios_bh_8087	equ	byte ptr .0F07h$/;"	d
xios_bh_delay	equates.a86	/^xios_bh_delay	equ	byte ptr .0F00h		;XIOS header$/;"	d
xios_bh_gdopen	equates.a86	/^xios_bh_gdopen	equ	byte ptr .0F02h$/;"	d
xios_bh_inint	equates.a86	/^xios_bh_inint	equ	byte ptr .0F03h$/;"	d
xios_bh_intconi	equates.a86	/^xios_bh_intconi	equ	byte ptr .0F06h$/;"	d
xios_bh_lastflg	equates.a86	/^xios_bh_lastflg	equ	byte ptr .0F05h$/;"	d
xios_bh_nextflg	equates.a86	/^xios_bh_nextflg	equ	byte ptr .0F04h$/;"	d
xios_bh_ticks	equates.a86	/^xios_bh_ticks	equ	byte ptr .0F01h$/;"	d
xios_char_out	cio.a86	/^xios_char_out:	mov	al, 2$/;"	l
xios_cmd	dpgen.c	/^cmd_desc dosplus_sys, bdos_cmd, xios_cmd, ccp_cmd, dos_cmd;$/;"	v	typeref:typename:cmd_desc
xios_rdwr	bdos.a86	/^xios_rdwr:		; CODE XREF: wrbuff+2p	rdbuff+2p$/;"	l
xor	bdos.a86	/^		xor	dh, dh$/;"	d
xor	bdos.a86	/^		xor	dl, dl$/;"	d
xor	bdos.a86	/^		xor	dx, dx$/;"	d
xor	cio.a86	/^		xor	dx, dx$/;"	d
xor	mem.a86	/^		xor	dl, dl		; Not available$/;"	d
xor	mem.a86	/^		xor	dx, dx$/;"	d
xor	rtm.a86	/^		xor	dh, dh$/;"	d
xor	sup.a86	/^		xor	dh, dh$/;"	d
xor	sup.a86	/^		xor	di, di$/;"	d
zero_cmd	cmdio.c	/^void zero_cmd(cmd_desc *cmdfile)$/;"	f	typeref:typename:void
zeroes	cmdio.c	/^static byte zeroes[16];$/;"	v	typeref:typename:byte[16]	file:
